{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4","program":"/Users/perturbedeagle/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","image","/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"jpeg\"","--cfg","feature=\"jpeg-decoder\"","-C","metadata=de4482f57b0d3b10","-C","extra-filename=-de4482f57b0d3b10","--out-dir","/Users/perturbedeagle/Documents/projects/udemy/ultimate_rust_crash_course/exercise/z_final_project/target/rls/debug/deps","-L","dependency=/Users/perturbedeagle/Documents/projects/udemy/ultimate_rust_crash_course/exercise/z_final_project/target/rls/debug/deps","--extern","byteorder=/Users/perturbedeagle/Documents/projects/udemy/ultimate_rust_crash_course/exercise/z_final_project/target/rls/debug/deps/libbyteorder-1e6e43493be43b78.rmeta","--extern","enum_primitive=/Users/perturbedeagle/Documents/projects/udemy/ultimate_rust_crash_course/exercise/z_final_project/target/rls/debug/deps/libenum_primitive-5de166919bafd5fb.rmeta","--extern","glob=/Users/perturbedeagle/Documents/projects/udemy/ultimate_rust_crash_course/exercise/z_final_project/target/rls/debug/deps/libglob-e06b573af39b2d69.rmeta","--extern","jpeg_decoder=/Users/perturbedeagle/Documents/projects/udemy/ultimate_rust_crash_course/exercise/z_final_project/target/rls/debug/deps/libjpeg_decoder-eb1553d984e7ae96.rmeta","--extern","num_iter=/Users/perturbedeagle/Documents/projects/udemy/ultimate_rust_crash_course/exercise/z_final_project/target/rls/debug/deps/libnum_iter-d5c3aca477642973.rmeta","--extern","num_rational=/Users/perturbedeagle/Documents/projects/udemy/ultimate_rust_crash_course/exercise/z_final_project/target/rls/debug/deps/libnum_rational-652eb9eefe3c6b5e.rmeta","--extern","num_traits=/Users/perturbedeagle/Documents/projects/udemy/ultimate_rust_crash_course/exercise/z_final_project/target/rls/debug/deps/libnum_traits-4ac9e3932437ad9e.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/perturbedeagle/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/perturbedeagle/Documents/projects/udemy/ultimate_rust_crash_course/exercise/z_final_project/target/rls/debug/deps/libimage-de4482f57b0d3b10.rmeta"},"prelude":{"crate_id":{"name":"image","disambiguator":[4955950658016369042,10859445466706077473]},"crate_root":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src","external_crates":[{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","num":1,"id":{"name":"std","disambiguator":[7439535968655576646,17420488833649705410]}},{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","num":2,"id":{"name":"core","disambiguator":[1949116827220114676,2065912148165510692]}},{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6424123809251651324,10791243255933316672]}},{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11089070161906179638,2253832597208660558]}},{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3666879193032761931,4629784602926728112]}},{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[17557414160303111626,7572947572632644954]}},{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[915848953387719454,11341216537588130533]}},{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4285064400235759547,17176111531075018758]}},{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[6997063163517280748,14486342634155193831]}},{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2053070849310045891,9457326657766539472]}},{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[16492367081693084488,12081229032515817188]}},{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[14000704685499991975,15439018228330051001]}},{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[16882152814081891816,2081400005890767566]}},{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[17412809486977561704,10774188040798205111]}},{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","num":15,"id":{"name":"object","disambiguator":[10299009701328497764,8719717191227013711]}},{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","num":16,"id":{"name":"panic_unwind","disambiguator":[13564088873543153286,4566579444635585591]}},{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","num":17,"id":{"name":"byteorder","disambiguator":[15034701483679101987,15153261319547688386]}},{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","num":18,"id":{"name":"num_iter","disambiguator":[1213005809770562161,222299227420157959]}},{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","num":19,"id":{"name":"num_integer","disambiguator":[16219055087843705746,10740402313301450603]}},{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","num":20,"id":{"name":"num_traits","disambiguator":[10488799868289408443,7132729632748418844]}},{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","num":21,"id":{"name":"num_rational","disambiguator":[5223770661565260160,8389239043875801609]}},{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","num":22,"id":{"name":"rustc_serialize","disambiguator":[5277643417176483422,17739543018299049950]}},{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","num":23,"id":{"name":"num_bigint","disambiguator":[6108292811569830728,2436317028937984341]}},{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","num":24,"id":{"name":"rand","disambiguator":[17223384776516946560,4783118207957443754]}},{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","num":25,"id":{"name":"libc","disambiguator":[8300402132561354707,2661493467424822882]}},{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","num":26,"id":{"name":"num_traits","disambiguator":[12291668263713277367,6672324951573797123]}},{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","num":27,"id":{"name":"enum_primitive","disambiguator":[11286458990916804568,6253063575550801971]}},{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/jpeg/decoder.rs","num":28,"id":{"name":"jpeg_decoder","disambiguator":[4935717379252852850,382631941534283789]}},{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/jpeg/decoder.rs","num":29,"id":{"name":"rayon","disambiguator":[2205858956175911814,16822416507620955141]}},{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/jpeg/decoder.rs","num":30,"id":{"name":"either","disambiguator":[8659131901147262303,12750382275010261553]}},{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/jpeg/decoder.rs","num":31,"id":{"name":"rayon_core","disambiguator":[12555446852337547579,4739902748567131585]}},{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/jpeg/decoder.rs","num":32,"id":{"name":"crossbeam_channel","disambiguator":[1202642679342962572,614244633445461345]}},{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/jpeg/decoder.rs","num":33,"id":{"name":"cfg_if","disambiguator":[8420289586558118857,13192060884594697870]}},{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/jpeg/decoder.rs","num":34,"id":{"name":"crossbeam_utils","disambiguator":[10931403577151434492,15408615448083754269]}},{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/jpeg/decoder.rs","num":35,"id":{"name":"lazy_static","disambiguator":[13115968408465587564,1564445060253929076]}},{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/jpeg/decoder.rs","num":36,"id":{"name":"crossbeam_deque","disambiguator":[11547681884759370696,16071540512708104726]}},{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/jpeg/decoder.rs","num":37,"id":{"name":"crossbeam_epoch","disambiguator":[17723279243449164168,4637540336826617594]}},{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/jpeg/decoder.rs","num":38,"id":{"name":"scopeguard","disambiguator":[4536674605428346847,6656458858206595489]}},{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/jpeg/decoder.rs","num":39,"id":{"name":"memoffset","disambiguator":[6409365283807121403,15467087211224427041]}},{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/jpeg/decoder.rs","num":40,"id":{"name":"num_cpus","disambiguator":[5188517225487287613,9786002454929326066]}}],"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":0,"byte_end":2374,"line_start":1,"line_end":150,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1640},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":505,"byte_end":514,"line_start":21,"line_end":21,"column_start":16,"column_end":25},"alias_span":null,"name":"ColorType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1641},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":532,"byte_end":536,"line_start":23,"line_end":23,"column_start":5,"column_end":9},"alias_span":null,"name":"Gray","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1642},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":532,"byte_end":536,"line_start":23,"line_end":23,"column_start":5,"column_end":9},"alias_span":null,"name":"Gray","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1644},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":542,"byte_end":545,"line_start":24,"line_end":24,"column_start":5,"column_end":8},"alias_span":null,"name":"RGB","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1645},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":542,"byte_end":545,"line_start":24,"line_end":24,"column_start":5,"column_end":8},"alias_span":null,"name":"RGB","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1647},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":551,"byte_end":558,"line_start":25,"line_end":25,"column_start":5,"column_end":12},"alias_span":null,"name":"Palette","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1648},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":551,"byte_end":558,"line_start":25,"line_end":25,"column_start":5,"column_end":12},"alias_span":null,"name":"Palette","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1650},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":564,"byte_end":569,"line_start":26,"line_end":26,"column_start":5,"column_end":10},"alias_span":null,"name":"GrayA","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1651},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":564,"byte_end":569,"line_start":26,"line_end":26,"column_start":5,"column_end":10},"alias_span":null,"name":"GrayA","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1653},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":575,"byte_end":579,"line_start":27,"line_end":27,"column_start":5,"column_end":9},"alias_span":null,"name":"RGBA","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1654},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":575,"byte_end":579,"line_start":27,"line_end":27,"column_start":5,"column_end":9},"alias_span":null,"name":"RGBA","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1884},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":605,"byte_end":609,"line_start":31,"line_end":31,"column_start":5,"column_end":9},"alias_span":null,"name":"Luma","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1715},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":605,"byte_end":609,"line_start":31,"line_end":31,"column_start":5,"column_end":9},"alias_span":null,"name":"Luma","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1940},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":615,"byte_end":620,"line_start":32,"line_end":32,"column_start":5,"column_end":10},"alias_span":null,"name":"LumaA","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1809},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":615,"byte_end":620,"line_start":32,"line_end":32,"column_start":5,"column_end":10},"alias_span":null,"name":"LumaA","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1856},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":626,"byte_end":629,"line_start":33,"line_end":33,"column_start":5,"column_end":8},"alias_span":null,"name":"Rgb","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1668},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":626,"byte_end":629,"line_start":33,"line_end":33,"column_start":5,"column_end":8},"alias_span":null,"name":"Rgb","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1912},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":635,"byte_end":639,"line_start":34,"line_end":34,"column_start":5,"column_end":9},"alias_span":null,"name":"Rgba","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1762},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":635,"byte_end":639,"line_start":34,"line_end":34,"column_start":5,"column_end":9},"alias_span":null,"name":"Rgba","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":734},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":665,"byte_end":677,"line_start":38,"line_end":38,"column_start":5,"column_end":17},"alias_span":null,"name":"ImageDecoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1512},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":683,"byte_end":693,"line_start":39,"line_end":39,"column_start":5,"column_end":15},"alias_span":null,"name":"ImageError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":717},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":699,"byte_end":710,"line_start":40,"line_end":40,"column_start":5,"column_end":16},"alias_span":null,"name":"ImageResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":719},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":716,"byte_end":730,"line_start":41,"line_end":41,"column_start":5,"column_end":19},"alias_span":null,"name":"DecodingResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":788},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":736,"byte_end":744,"line_start":42,"line_end":42,"column_start":5,"column_end":13},"alias_span":null,"name":"SubImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":769},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":750,"byte_end":762,"line_start":43,"line_end":43,"column_start":5,"column_end":17},"alias_span":null,"name":"GenericImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":743},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":785,"byte_end":791,"line_start":45,"line_end":45,"column_start":5,"column_end":11},"alias_span":null,"name":"Pixels","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":756},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":797,"byte_end":806,"line_start":46,"line_end":46,"column_start":5,"column_end":14},"alias_span":null,"name":"MutPixels","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1487},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":829,"byte_end":839,"line_start":49,"line_end":49,"column_start":19,"column_end":29},"alias_span":null,"name":"FilterType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1490},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":857,"byte_end":865,"line_start":51,"line_end":51,"column_start":5,"column_end":13},"alias_span":null,"name":"Triangle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1491},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":857,"byte_end":865,"line_start":51,"line_end":51,"column_start":5,"column_end":13},"alias_span":null,"name":"Triangle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1488},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":871,"byte_end":878,"line_start":52,"line_end":52,"column_start":5,"column_end":12},"alias_span":null,"name":"Nearest","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1489},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":871,"byte_end":878,"line_start":52,"line_end":52,"column_start":5,"column_end":12},"alias_span":null,"name":"Nearest","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1492},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":884,"byte_end":894,"line_start":53,"line_end":53,"column_start":5,"column_end":15},"alias_span":null,"name":"CatmullRom","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1493},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":884,"byte_end":894,"line_start":53,"line_end":53,"column_start":5,"column_end":15},"alias_span":null,"name":"CatmullRom","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1494},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":900,"byte_end":908,"line_start":54,"line_end":54,"column_start":5,"column_end":13},"alias_span":null,"name":"Gaussian","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1495},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":900,"byte_end":908,"line_start":54,"line_end":54,"column_start":5,"column_end":13},"alias_span":null,"name":"Gaussian","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1496},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":914,"byte_end":922,"line_start":55,"line_end":55,"column_start":5,"column_end":13},"alias_span":null,"name":"Lanczos3","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1497},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":914,"byte_end":922,"line_start":55,"line_end":55,"column_start":5,"column_end":13},"alias_span":null,"name":"Lanczos3","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1533},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":942,"byte_end":953,"line_start":58,"line_end":58,"column_start":16,"column_end":27},"alias_span":null,"name":"ImageFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1534},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":971,"byte_end":974,"line_start":60,"line_end":60,"column_start":5,"column_end":8},"alias_span":null,"name":"PNG","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1535},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":971,"byte_end":974,"line_start":60,"line_end":60,"column_start":5,"column_end":8},"alias_span":null,"name":"PNG","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1536},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":980,"byte_end":984,"line_start":61,"line_end":61,"column_start":5,"column_end":9},"alias_span":null,"name":"JPEG","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1537},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":980,"byte_end":984,"line_start":61,"line_end":61,"column_start":5,"column_end":9},"alias_span":null,"name":"JPEG","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1538},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":990,"byte_end":993,"line_start":62,"line_end":62,"column_start":5,"column_end":8},"alias_span":null,"name":"GIF","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1539},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":990,"byte_end":993,"line_start":62,"line_end":62,"column_start":5,"column_end":8},"alias_span":null,"name":"GIF","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1540},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":999,"byte_end":1003,"line_start":63,"line_end":63,"column_start":5,"column_end":9},"alias_span":null,"name":"WEBP","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1541},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":999,"byte_end":1003,"line_start":63,"line_end":63,"column_start":5,"column_end":9},"alias_span":null,"name":"WEBP","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1542},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":1009,"byte_end":1012,"line_start":64,"line_end":64,"column_start":5,"column_end":8},"alias_span":null,"name":"PPM","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1543},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":1009,"byte_end":1012,"line_start":64,"line_end":64,"column_start":5,"column_end":8},"alias_span":null,"name":"PPM","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1548},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":1018,"byte_end":1021,"line_start":65,"line_end":65,"column_start":5,"column_end":8},"alias_span":null,"name":"BMP","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1549},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":1018,"byte_end":1021,"line_start":65,"line_end":65,"column_start":5,"column_end":8},"alias_span":null,"name":"BMP","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1550},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":1027,"byte_end":1030,"line_start":66,"line_end":66,"column_start":5,"column_end":8},"alias_span":null,"name":"ICO","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1551},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":1027,"byte_end":1030,"line_start":66,"line_end":66,"column_start":5,"column_end":8},"alias_span":null,"name":"ICO","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1240},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":1057,"byte_end":1062,"line_start":70,"line_end":70,"column_start":5,"column_end":10},"alias_span":null,"name":"Pixel","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1404},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":1068,"byte_end":1081,"line_start":71,"line_end":71,"column_start":5,"column_end":18},"alias_span":null,"name":"ConvertBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1327},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":1106,"byte_end":1117,"line_start":73,"line_end":73,"column_start":5,"column_end":16},"alias_span":null,"name":"ImageBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1417},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":1123,"byte_end":1131,"line_start":74,"line_end":74,"column_start":5,"column_end":13},"alias_span":null,"name":"RgbImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1418},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":1137,"byte_end":1146,"line_start":75,"line_end":75,"column_start":5,"column_end":14},"alias_span":null,"name":"RgbaImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1419},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":1152,"byte_end":1161,"line_start":76,"line_end":76,"column_start":5,"column_end":14},"alias_span":null,"name":"GrayImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1420},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":1167,"byte_end":1181,"line_start":77,"line_end":77,"column_start":5,"column_end":19},"alias_span":null,"name":"GrayAlphaImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1432},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":1212,"byte_end":1221,"line_start":81,"line_end":81,"column_start":17,"column_end":26},"alias_span":null,"name":"Primitive","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1062},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":1278,"byte_end":1282,"line_start":85,"line_end":85,"column_start":5,"column_end":9},"alias_span":null,"name":"open","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1072},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":1288,"byte_end":1292,"line_start":86,"line_end":86,"column_start":5,"column_end":9},"alias_span":null,"name":"load","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1076},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":1298,"byte_end":1314,"line_start":87,"line_end":87,"column_start":5,"column_end":21},"alias_span":null,"name":"load_from_memory","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1077},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":1320,"byte_end":1348,"line_start":88,"line_end":88,"column_start":5,"column_end":33},"alias_span":null,"name":"load_from_memory_with_format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1078},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":1354,"byte_end":1366,"line_start":89,"line_end":89,"column_start":5,"column_end":17},"alias_span":null,"name":"guess_format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1067},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":1372,"byte_end":1383,"line_start":90,"line_end":90,"column_start":5,"column_end":16},"alias_span":null,"name":"save_buffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1625},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":1406,"byte_end":1418,"line_start":93,"line_end":93,"column_start":19,"column_end":31},"alias_span":null,"name":"DynamicImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1632},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":1436,"byte_end":1445,"line_start":95,"line_end":95,"column_start":5,"column_end":14},"alias_span":null,"name":"ImageRgb8","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1633},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":1436,"byte_end":1445,"line_start":95,"line_end":95,"column_start":5,"column_end":14},"alias_span":null,"name":"ImageRgb8","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1635},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":1451,"byte_end":1461,"line_start":96,"line_end":96,"column_start":5,"column_end":15},"alias_span":null,"name":"ImageRgba8","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1636},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":1451,"byte_end":1461,"line_start":96,"line_end":96,"column_start":5,"column_end":15},"alias_span":null,"name":"ImageRgba8","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1626},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":1467,"byte_end":1477,"line_start":97,"line_end":97,"column_start":5,"column_end":15},"alias_span":null,"name":"ImageLuma8","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1627},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":1467,"byte_end":1477,"line_start":97,"line_end":97,"column_start":5,"column_end":15},"alias_span":null,"name":"ImageLuma8","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1629},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":1483,"byte_end":1494,"line_start":98,"line_end":98,"column_start":5,"column_end":16},"alias_span":null,"name":"ImageLumaA8","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1630},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":1483,"byte_end":1494,"line_start":98,"line_end":98,"column_start":5,"column_end":16},"alias_span":null,"name":"ImageLumaA8","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1968},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":1524,"byte_end":1529,"line_start":102,"line_end":102,"column_start":5,"column_end":10},"alias_span":null,"name":"Frame","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1452},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":1535,"byte_end":1541,"line_start":103,"line_end":103,"column_start":5,"column_end":11},"alias_span":null,"name":"Frames","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1487},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/mod.rs","byte_start":16393,"byte_end":16403,"line_start":11,"line_end":11,"column_start":23,"column_end":33},"alias_span":null,"name":"FilterType","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":0,"index":1490},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/mod.rs","byte_start":16447,"byte_end":16455,"line_start":14,"line_end":14,"column_start":5,"column_end":13},"alias_span":null,"name":"Triangle","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":0,"index":1491},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/mod.rs","byte_start":16447,"byte_end":16455,"line_start":14,"line_end":14,"column_start":5,"column_end":13},"alias_span":null,"name":"Triangle","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":0,"index":1488},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/mod.rs","byte_start":16461,"byte_end":16468,"line_start":15,"line_end":15,"column_start":5,"column_end":12},"alias_span":null,"name":"Nearest","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":0,"index":1489},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/mod.rs","byte_start":16461,"byte_end":16468,"line_start":15,"line_end":15,"column_start":5,"column_end":12},"alias_span":null,"name":"Nearest","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":0,"index":1492},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/mod.rs","byte_start":16474,"byte_end":16484,"line_start":16,"line_end":16,"column_start":5,"column_end":15},"alias_span":null,"name":"CatmullRom","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":0,"index":1493},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/mod.rs","byte_start":16474,"byte_end":16484,"line_start":16,"line_end":16,"column_start":5,"column_end":15},"alias_span":null,"name":"CatmullRom","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":0,"index":1494},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/mod.rs","byte_start":16490,"byte_end":16498,"line_start":17,"line_end":17,"column_start":5,"column_end":13},"alias_span":null,"name":"Gaussian","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":0,"index":1495},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/mod.rs","byte_start":16490,"byte_end":16498,"line_start":17,"line_end":17,"column_start":5,"column_end":13},"alias_span":null,"name":"Gaussian","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":0,"index":1496},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/mod.rs","byte_start":16504,"byte_end":16512,"line_start":18,"line_end":18,"column_start":5,"column_end":13},"alias_span":null,"name":"Lanczos3","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":0,"index":1497},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/mod.rs","byte_start":16504,"byte_end":16512,"line_start":18,"line_end":18,"column_start":5,"column_end":13},"alias_span":null,"name":"Lanczos3","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":0,"index":330},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/mod.rs","byte_start":16573,"byte_end":16581,"line_start":23,"line_end":23,"column_start":5,"column_end":13},"alias_span":null,"name":"rotate90","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":0,"index":332},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/mod.rs","byte_start":16587,"byte_end":16596,"line_start":24,"line_end":24,"column_start":5,"column_end":14},"alias_span":null,"name":"rotate180","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":0,"index":334},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/mod.rs","byte_start":16602,"byte_end":16611,"line_start":25,"line_end":25,"column_start":5,"column_end":14},"alias_span":null,"name":"rotate270","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":0,"index":336},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/mod.rs","byte_start":16617,"byte_end":16632,"line_start":26,"line_end":26,"column_start":5,"column_end":20},"alias_span":null,"name":"flip_horizontal","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":0,"index":338},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/mod.rs","byte_start":16638,"byte_end":16651,"line_start":27,"line_end":27,"column_start":5,"column_end":18},"alias_span":null,"name":"flip_vertical","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":0,"index":466},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/mod.rs","byte_start":16705,"byte_end":16714,"line_start":32,"line_end":32,"column_start":5,"column_end":14},"alias_span":null,"name":"filter3x3","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":0,"index":471},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/mod.rs","byte_start":16720,"byte_end":16726,"line_start":33,"line_end":33,"column_start":5,"column_end":11},"alias_span":null,"name":"resize","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":0,"index":473},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/mod.rs","byte_start":16732,"byte_end":16736,"line_start":34,"line_end":34,"column_start":5,"column_end":9},"alias_span":null,"name":"blur","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":0,"index":476},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/mod.rs","byte_start":16742,"byte_end":16751,"line_start":35,"line_end":35,"column_start":5,"column_end":14},"alias_span":null,"name":"unsharpen","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":0,"index":377},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/mod.rs","byte_start":16809,"byte_end":16818,"line_start":40,"line_end":40,"column_start":5,"column_end":14},"alias_span":null,"name":"grayscale","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":0,"index":380},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/mod.rs","byte_start":16824,"byte_end":16830,"line_start":41,"line_end":41,"column_start":5,"column_end":11},"alias_span":null,"name":"invert","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":0,"index":382},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/mod.rs","byte_start":16836,"byte_end":16844,"line_start":42,"line_end":42,"column_start":5,"column_end":13},"alias_span":null,"name":"contrast","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":0,"index":387},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/mod.rs","byte_start":16850,"byte_end":16858,"line_start":43,"line_end":43,"column_start":5,"column_end":13},"alias_span":null,"name":"brighten","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":0,"index":393},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/mod.rs","byte_start":16864,"byte_end":16873,"line_start":44,"line_end":44,"column_start":5,"column_end":14},"alias_span":null,"name":"huerotate","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":0,"index":398},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/mod.rs","byte_start":16879,"byte_end":16887,"line_start":45,"line_end":45,"column_start":5,"column_end":13},"alias_span":null,"name":"ColorMap","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":0,"index":1482},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/mod.rs","byte_start":16893,"byte_end":16900,"line_start":46,"line_end":46,"column_start":5,"column_end":12},"alias_span":null,"name":"BiLevel","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":0,"index":1483},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/mod.rs","byte_start":16893,"byte_end":16900,"line_start":46,"line_end":46,"column_start":5,"column_end":12},"alias_span":null,"name":"BiLevel","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":0,"index":414},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/mod.rs","byte_start":16906,"byte_end":16912,"line_start":47,"line_end":47,"column_start":5,"column_end":11},"alias_span":null,"name":"dither","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":0,"index":419},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/mod.rs","byte_start":16918,"byte_end":16930,"line_start":48,"line_end":48,"column_start":5,"column_end":17},"alias_span":null,"name":"index_colors","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":0,"index":633},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/jpeg/mod.rs","byte_start":51842,"byte_end":51853,"line_start":10,"line_end":10,"column_start":24,"column_end":35},"alias_span":null,"name":"JPEGDecoder","value":"","parent":{"krate":0,"index":487}},{"kind":"Use","ref_id":{"krate":0,"index":560},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/jpeg/mod.rs","byte_start":51878,"byte_end":51889,"line_start":11,"line_end":11,"column_start":24,"column_end":35},"alias_span":null,"name":"JPEGEncoder","value":"","parent":{"krate":0,"index":487}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":0,"byte_end":2374,"line_start":1,"line_end":150,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":53},{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":116},{"krate":0,"index":119},{"krate":0,"index":122},{"krate":0,"index":125},{"krate":0,"index":128},{"krate":0,"index":131},{"krate":0,"index":134},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":147},{"krate":0,"index":150},{"krate":0,"index":153},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":176},{"krate":0,"index":179},{"krate":0,"index":229},{"krate":0,"index":487},{"krate":0,"index":674},{"krate":0,"index":813},{"krate":0,"index":913},{"krate":0,"index":1079},{"krate":0,"index":1176},{"krate":0,"index":1421},{"krate":0,"index":1445},{"krate":0,"index":1470}],"decl_id":null,"docs":" This crate provides native rust implementations of\n image encoders and decoders and basic image manipulation\n functions.\n","sig":null,"attributes":[{"value":"/ This crate provides native rust implementations of","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":0,"byte_end":54,"line_start":1,"line_end":1,"column_start":1,"column_end":55}},{"value":"/ image encoders and decoders and basic image manipulation","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":55,"byte_end":115,"line_start":2,"line_end":2,"column_start":1,"column_end":61}},{"value":"/ functions.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":116,"byte_end":130,"line_start":3,"line_end":3,"column_start":1,"column_end":15}},{"value":"warn(missing_docs)","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":132,"byte_end":154,"line_start":5,"line_end":5,"column_start":1,"column_end":23}},{"value":"warn(unused_qualifications)","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":155,"byte_end":186,"line_start":6,"line_end":6,"column_start":1,"column_end":32}},{"value":"deny(missing_copy_implementations)","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":187,"byte_end":225,"line_start":7,"line_end":7,"column_start":1,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":179},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/math/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"math","qualname":"::math","value":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/math/mod.rs","parent":null,"children":[{"krate":0,"index":180},{"krate":0,"index":183}],"decl_id":null,"docs":" Mathematical helper functions and types.\n","sig":null,"attributes":[{"value":"/ Mathematical helper functions and types.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/math/mod.rs","byte_start":2376,"byte_end":2420,"line_start":1,"line_end":1,"column_start":1,"column_end":45}}]},{"kind":"Mod","id":{"krate":0,"index":180},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/math/utils.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"utils","qualname":"::math::utils","value":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/math/utils.rs","parent":null,"children":[{"krate":0,"index":181}],"decl_id":null,"docs":" Shared mathematical utility functions.\n","sig":null,"attributes":[{"value":"/ Shared mathematical utility functions.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/math/utils.rs","byte_start":2449,"byte_end":2491,"line_start":1,"line_end":1,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":181},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/math/utils.rs","byte_start":2736,"byte_end":2741,"line_start":13,"line_end":13,"column_start":8,"column_end":13},"name":"clamp","qualname":"::math::utils::clamp","value":"pub fn clamp<N>(N, N, N) -> N where N: PartialOrd","parent":null,"children":[],"decl_id":null,"docs":" Cut value to be inside given range","sig":null,"attributes":[{"value":"/ Cut value to be inside given range","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/math/utils.rs","byte_start":2493,"byte_end":2531,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/math/utils.rs","byte_start":2532,"byte_end":2535,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/math/utils.rs","byte_start":2536,"byte_end":2543,"line_start":5,"line_end":5,"column_start":1,"column_end":8}},{"value":"/ use image::math::utils;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/math/utils.rs","byte_start":2544,"byte_end":2571,"line_start":6,"line_end":6,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/math/utils.rs","byte_start":2572,"byte_end":2575,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(utils::clamp(-5, 0, 10),  0);","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/math/utils.rs","byte_start":2576,"byte_end":2620,"line_start":8,"line_end":8,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(utils::clamp( 6, 0, 10),  6);","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/math/utils.rs","byte_start":2621,"byte_end":2665,"line_start":9,"line_end":9,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(utils::clamp(15, 0, 10), 10);","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/math/utils.rs","byte_start":2666,"byte_end":2710,"line_start":10,"line_end":10,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/math/utils.rs","byte_start":2711,"byte_end":2718,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/math/utils.rs","byte_start":2719,"byte_end":2728,"line_start":12,"line_end":12,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":183},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/math/nq.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"nq","qualname":"::math::nq","value":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/math/nq.rs","parent":null,"children":[{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":188},{"krate":0,"index":191},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":1471},{"krate":0,"index":1477},{"krate":0,"index":1480},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":213}],"decl_id":null,"docs":" NEUQUANT Neural-Net quantization algorithm by Anthony Dekker, 1994.\n See \"Kohonen neural networks for optimal colour quantization\"\n in \"Network: Computation in Neural Systems\" Vol. 5 (1994) pp 351-367.\n for a discussion of the algorithm.\n See also  http://www.acm.org/~dekker/NEUQUANT.HTML\n","sig":null,"attributes":[{"value":"/ NEUQUANT Neural-Net quantization algorithm by Anthony Dekker, 1994.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/math/nq.rs","byte_start":2863,"byte_end":2934,"line_start":1,"line_end":1,"column_start":1,"column_end":72}},{"value":"/ See \"Kohonen neural networks for optimal colour quantization\"","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/math/nq.rs","byte_start":2935,"byte_end":3000,"line_start":2,"line_end":2,"column_start":1,"column_end":66}},{"value":"/ in \"Network: Computation in Neural Systems\" Vol. 5 (1994) pp 351-367.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/math/nq.rs","byte_start":3001,"byte_end":3074,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ for a discussion of the algorithm.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/math/nq.rs","byte_start":3075,"byte_end":3113,"line_start":4,"line_end":4,"column_start":1,"column_end":39}},{"value":"/ See also  http://www.acm.org/~dekker/NEUQUANT.HTML","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/math/nq.rs","byte_start":3114,"byte_end":3168,"line_start":5,"line_end":5,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":205},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/math/nq.rs","byte_start":5018,"byte_end":5026,"line_start":66,"line_end":66,"column_start":12,"column_end":20},"name":"NeuQuant","qualname":"::math::nq::NeuQuant","value":"NeuQuant {  }","parent":null,"children":[{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212}],"decl_id":null,"docs":" Neural network color quantizer\n","sig":null,"attributes":[{"value":"/ Neural network color quantizer","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/math/nq.rs","byte_start":4972,"byte_end":5006,"line_start":65,"line_end":65,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/math/nq.rs","byte_start":5330,"byte_end":5333,"line_start":78,"line_end":78,"column_start":12,"column_end":15},"name":"new","qualname":"<NeuQuant>::new","value":"pub fn new(i32, usize, &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new neuronal network and trains it with the supplied data\n","sig":null,"attributes":[{"value":"/ Creates a new neuronal network and trains it with the supplied data","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/math/nq.rs","byte_start":5247,"byte_end":5318,"line_start":77,"line_end":77,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/math/nq.rs","byte_start":5894,"byte_end":5898,"line_start":94,"line_end":94,"column_start":12,"column_end":16},"name":"init","qualname":"<NeuQuant>::init","value":"pub fn init(&mut Self, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Initializes the neuronal network and trains it with the supplied data\n","sig":null,"attributes":[{"value":"/ Initializes the neuronal network and trains it with the supplied data","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/math/nq.rs","byte_start":5809,"byte_end":5882,"line_start":93,"line_end":93,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/math/nq.rs","byte_start":6730,"byte_end":6739,"line_start":116,"line_end":116,"column_start":12,"column_end":21},"name":"map_pixel","qualname":"<NeuQuant>::map_pixel","value":"pub fn map_pixel(&Self, &mut [u8])","parent":null,"children":[],"decl_id":null,"docs":" Maps the pixel in-place to the best-matching color in the color map\n","sig":null,"attributes":[{"value":"/ Maps the pixel in-place to the best-matching color in the color map","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/math/nq.rs","byte_start":6625,"byte_end":6696,"line_start":114,"line_end":114,"column_start":5,"column_end":76}},{"value":"inline(always)","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/math/nq.rs","byte_start":6701,"byte_end":6718,"line_start":115,"line_end":115,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/math/nq.rs","byte_start":7284,"byte_end":7292,"line_start":131,"line_end":131,"column_start":12,"column_end":20},"name":"index_of","qualname":"<NeuQuant>::index_of","value":"pub fn index_of(&Self, &[u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Finds the best-matching index in the color map for `pixel`\n","sig":null,"attributes":[{"value":"/ Finds the best-matching index in the color map for `pixel`","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/math/nq.rs","byte_start":7188,"byte_end":7250,"line_start":129,"line_end":129,"column_start":5,"column_end":67}},{"value":"inline(always)","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/math/nq.rs","byte_start":7255,"byte_end":7272,"line_start":130,"line_end":130,"column_start":5,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":229},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"imageops","qualname":"::imageops","value":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/mod.rs","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":237},{"krate":0,"index":240},{"krate":0,"index":243},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":266},{"krate":0,"index":269},{"krate":0,"index":272},{"krate":0,"index":275},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":282},{"krate":0,"index":285},{"krate":0,"index":288},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":295},{"krate":0,"index":298},{"krate":0,"index":301},{"krate":0,"index":304},{"krate":0,"index":307},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":313},{"krate":0,"index":316},{"krate":0,"index":319},{"krate":0,"index":340},{"krate":0,"index":422},{"krate":0,"index":481},{"krate":0,"index":483},{"krate":0,"index":485}],"decl_id":null,"docs":" Image Processing Functions\n","sig":null,"attributes":[{"value":"/ Image Processing Functions","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/mod.rs","byte_start":16255,"byte_end":16285,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":330},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/affine.rs","byte_start":20774,"byte_end":20782,"line_start":8,"line_end":8,"column_start":8,"column_end":16},"name":"rotate90","qualname":"::imageops::affine::rotate90","value":"pub fn rotate90<I: GenericImage + 'static>(&I)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static, <I::Pixel as Pixel>::Subpixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 90 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate an image 90 degrees clockwise.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/affine.rs","byte_start":20654,"byte_end":20695,"line_start":6,"line_end":6,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":332},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/affine.rs","byte_start":21359,"byte_end":21368,"line_start":27,"line_end":27,"column_start":8,"column_end":17},"name":"rotate180","qualname":"::imageops::affine::rotate180","value":"pub fn rotate180<I: GenericImage + 'static>(&I)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static, <I::Pixel as Pixel>::Subpixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 180 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate an image 180 degrees clockwise.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/affine.rs","byte_start":21238,"byte_end":21280,"line_start":25,"line_end":25,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":334},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/affine.rs","byte_start":21957,"byte_end":21966,"line_start":46,"line_end":46,"column_start":8,"column_end":17},"name":"rotate270","qualname":"::imageops::affine::rotate270","value":"pub fn rotate270<I: GenericImage + 'static>(&I)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static, <I::Pixel as Pixel>::Subpixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 270 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate an image 270 degrees clockwise.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/affine.rs","byte_start":21836,"byte_end":21878,"line_start":44,"line_end":44,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":336},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/affine.rs","byte_start":22530,"byte_end":22545,"line_start":65,"line_end":65,"column_start":8,"column_end":23},"name":"flip_horizontal","qualname":"::imageops::affine::flip_horizontal","value":"pub fn flip_horizontal<I: GenericImage + 'static>(&I)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static, <I::Pixel as Pixel>::Subpixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Flip an image horizontally\n","sig":null,"attributes":[{"value":"/ Flip an image horizontally","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/affine.rs","byte_start":22421,"byte_end":22451,"line_start":63,"line_end":63,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":338},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/affine.rs","byte_start":23107,"byte_end":23120,"line_start":84,"line_end":84,"column_start":8,"column_end":21},"name":"flip_vertical","qualname":"::imageops::affine::flip_vertical","value":"pub fn flip_vertical<I: GenericImage + 'static>(&I)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static, <I::Pixel as Pixel>::Subpixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Flip an image vertically\n","sig":null,"attributes":[{"value":"/ Flip an image vertically","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/affine.rs","byte_start":23000,"byte_end":23028,"line_start":82,"line_end":82,"column_start":1,"column_end":29}}]},{"kind":"Mod","id":{"krate":0,"index":340},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/colorops.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"colorops","qualname":"::imageops::colorops","value":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/colorops.rs","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":352},{"krate":0,"index":355},{"krate":0,"index":358},{"krate":0,"index":361},{"krate":0,"index":364},{"krate":0,"index":367},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":374},{"krate":0,"index":377},{"krate":0,"index":380},{"krate":0,"index":382},{"krate":0,"index":387},{"krate":0,"index":393},{"krate":0,"index":398},{"krate":0,"index":1482},{"krate":0,"index":1484},{"krate":0,"index":1486},{"krate":0,"index":402},{"krate":0,"index":406},{"krate":0,"index":410},{"krate":0,"index":414},{"krate":0,"index":419}],"decl_id":null,"docs":" Public only because of Rust bug:\n https://github.com/rust-lang/rust/issues/18241\n Functions for altering and converting the color of pixelbufs\n","sig":null,"attributes":[{"value":"/ Public only because of Rust bug:","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/mod.rs","byte_start":16948,"byte_end":16984,"line_start":52,"line_end":52,"column_start":1,"column_end":37}},{"value":"/ https://github.com/rust-lang/rust/issues/18241","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/mod.rs","byte_start":16985,"byte_end":17035,"line_start":53,"line_end":53,"column_start":1,"column_end":51}},{"value":"/ Functions for altering and converting the color of pixelbufs","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/colorops.rs","byte_start":26929,"byte_end":26993,"line_start":1,"line_end":1,"column_start":1,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":377},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/colorops.rs","byte_start":27250,"byte_end":27259,"line_start":13,"line_end":13,"column_start":8,"column_end":17},"name":"grayscale","qualname":"::imageops::colorops::grayscale","value":"pub fn grayscale<'a, I: GenericImage>(&I)\n->\n    ImageBuffer<Luma<<I::Pixel as Pixel>::Subpixel>,\n                Vec<<I::Pixel as Pixel>::Subpixel>> where\n<I::Pixel as Pixel>::Subpixel: 'static,\n<<I::Pixel as Pixel>::Subpixel as Num>::FromStrRadixErr: 'static","parent":null,"children":[],"decl_id":null,"docs":" Convert the supplied image to grayscale\n","sig":null,"attributes":[{"value":"/ Convert the supplied image to grayscale","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/colorops.rs","byte_start":27199,"byte_end":27242,"line_start":12,"line_end":12,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":380},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/colorops.rs","byte_start":27872,"byte_end":27878,"line_start":32,"line_end":32,"column_start":8,"column_end":14},"name":"invert","qualname":"::imageops::colorops::invert","value":"pub fn invert<I: GenericImage>(&mut I)","parent":null,"children":[],"decl_id":null,"docs":" Invert each pixel within the supplied image.\n This function operates in place.\n","sig":null,"attributes":[{"value":"/ Invert each pixel within the supplied image.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/colorops.rs","byte_start":27779,"byte_end":27827,"line_start":30,"line_end":30,"column_start":1,"column_end":49}},{"value":"/ This function operates in place.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/colorops.rs","byte_start":27828,"byte_end":27864,"line_start":31,"line_end":31,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":382},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/colorops.rs","byte_start":28341,"byte_end":28349,"line_start":48,"line_end":48,"column_start":8,"column_end":16},"name":"contrast","qualname":"::imageops::colorops::contrast","value":"pub fn contrast<I, P, S>(&I, f32) -> ImageBuffer<P, Vec<S>> where\nI: GenericImage<Pixel = P>, P: Pixel<Subpixel = S> + 'static, S: Primitive +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Adjust the contrast of the supplied image.\n ```contrast``` is the amount to adjust the contrast by.\n Negative values decrease the contrast and positive values increase the contrast.\n","sig":null,"attributes":[{"value":"/ Adjust the contrast of the supplied image.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/colorops.rs","byte_start":28142,"byte_end":28188,"line_start":45,"line_end":45,"column_start":1,"column_end":47}},{"value":"/ ```contrast``` is the amount to adjust the contrast by.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/colorops.rs","byte_start":28189,"byte_end":28248,"line_start":46,"line_end":46,"column_start":1,"column_end":60}},{"value":"/ Negative values decrease the contrast and positive values increase the contrast.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/colorops.rs","byte_start":28249,"byte_end":28333,"line_start":47,"line_end":47,"column_start":1,"column_end":85}}]},{"kind":"Function","id":{"krate":0,"index":387},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/colorops.rs","byte_start":29333,"byte_end":29341,"line_start":83,"line_end":83,"column_start":8,"column_end":16},"name":"brighten","qualname":"::imageops::colorops::brighten","value":"pub fn brighten<I, P, S>(&I, i32) -> ImageBuffer<P, Vec<S>> where\nI: GenericImage<Pixel = P>, P: Pixel<Subpixel = S> + 'static, S: Primitive +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Brighten the supplied image.\n ```value``` is the amount to brighten each pixel by.\n Negative values decrease the brightness and positive values increase it.\n","sig":null,"attributes":[{"value":"/ Brighten the supplied image.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/colorops.rs","byte_start":29159,"byte_end":29191,"line_start":80,"line_end":80,"column_start":1,"column_end":33}},{"value":"/ ```value``` is the amount to brighten each pixel by.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/colorops.rs","byte_start":29192,"byte_end":29248,"line_start":81,"line_end":81,"column_start":1,"column_end":57}},{"value":"/ Negative values decrease the brightness and positive values increase it.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/colorops.rs","byte_start":29249,"byte_end":29325,"line_start":82,"line_end":82,"column_start":1,"column_end":77}}]},{"kind":"Function","id":{"krate":0,"index":393},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/colorops.rs","byte_start":30272,"byte_end":30281,"line_start":115,"line_end":115,"column_start":8,"column_end":17},"name":"huerotate","qualname":"::imageops::colorops::huerotate","value":"pub fn huerotate<I, P, S>(&I, i32) -> ImageBuffer<P, Vec<S>> where\nI: GenericImage<Pixel = P>, P: Pixel<Subpixel = S> + 'static, S: Primitive +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Hue rotate the supplied image.\n `value` is the degrees to rotate each pixel by.\n 0 and 360 do nothing, the rest rotates by the given degree value.\n just like the css webkit filter hue-rotate(180)\n","sig":null,"attributes":[{"value":"/ Hue rotate the supplied image.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/colorops.rs","byte_start":30056,"byte_end":30090,"line_start":111,"line_end":111,"column_start":1,"column_end":35}},{"value":"/ `value` is the degrees to rotate each pixel by.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/colorops.rs","byte_start":30091,"byte_end":30142,"line_start":112,"line_end":112,"column_start":1,"column_end":52}},{"value":"/ 0 and 360 do nothing, the rest rotates by the given degree value.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/colorops.rs","byte_start":30143,"byte_end":30212,"line_start":113,"line_end":113,"column_start":1,"column_end":70}},{"value":"/ just like the css webkit filter hue-rotate(180)","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/colorops.rs","byte_start":30213,"byte_end":30264,"line_start":114,"line_end":114,"column_start":1,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":398},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/colorops.rs","byte_start":32215,"byte_end":32223,"line_start":173,"line_end":173,"column_start":11,"column_end":19},"name":"ColorMap","qualname":"::imageops::colorops::ColorMap","value":"ColorMap","parent":null,"children":[{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401}],"decl_id":null,"docs":" A color map\n","sig":null,"attributes":[{"value":"/ A color map","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/colorops.rs","byte_start":32189,"byte_end":32204,"line_start":172,"line_end":172,"column_start":1,"column_end":16}}]},{"kind":"Type","id":{"krate":0,"index":399},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/colorops.rs","byte_start":32287,"byte_end":32292,"line_start":175,"line_end":175,"column_start":10,"column_end":15},"name":"Color","qualname":"::imageops::colorops::ColorMap::Color","value":"type Color;","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":" The color type on which the map operates on\n","sig":null,"attributes":[{"value":"/ The color type on which the map operates on","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/colorops.rs","byte_start":32230,"byte_end":32277,"line_start":174,"line_end":174,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/colorops.rs","byte_start":32384,"byte_end":32392,"line_start":178,"line_end":178,"column_start":8,"column_end":16},"name":"index_of","qualname":"::imageops::colorops::ColorMap::index_of","value":"pub fn index_of(&Self, &Self::Color) -> usize","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":" Returns the index of the closed match of `color`\n in the color map.\n","sig":null,"attributes":[{"value":"/ Returns the index of the closed match of `color`","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/colorops.rs","byte_start":32298,"byte_end":32350,"line_start":176,"line_end":176,"column_start":5,"column_end":57}},{"value":"/ in the color map.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/colorops.rs","byte_start":32355,"byte_end":32376,"line_start":177,"line_end":177,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/colorops.rs","byte_start":32498,"byte_end":32507,"line_start":180,"line_end":180,"column_start":8,"column_end":17},"name":"map_color","qualname":"::imageops::colorops::ColorMap::map_color","value":"pub fn map_color(&Self, &mut Self::Color)","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":" Maps `color` to the closest color in the color map.\n","sig":null,"attributes":[{"value":"/ Maps `color` to the closest color in the color map.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/colorops.rs","byte_start":32435,"byte_end":32490,"line_start":179,"line_end":179,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1482},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/colorops.rs","byte_start":32603,"byte_end":32610,"line_start":185,"line_end":185,"column_start":12,"column_end":19},"name":"BiLevel","qualname":"::imageops::colorops::BiLevel","value":"","parent":null,"children":[],"decl_id":null,"docs":" A bi-level color map\n","sig":null,"attributes":[{"value":"/ A bi-level color map","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/colorops.rs","byte_start":32544,"byte_end":32568,"line_start":183,"line_end":183,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":414},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/colorops.rs","byte_start":34486,"byte_end":34492,"line_start":256,"line_end":256,"column_start":8,"column_end":14},"name":"dither","qualname":"::imageops::colorops::dither","value":"pub fn dither<Pix, Map>(&mut ImageBuffer<Pix, Vec<u8>>, &Map) where\nMap: ColorMap<Color = Pix>, Pix: Pixel<Subpixel = u8> + 'static","parent":null,"children":[],"decl_id":null,"docs":" Reduces the colors of the image using the supplied `color_map` while applying\n Floyd-Steinberg dithering to improve the visual conception\n","sig":null,"attributes":[{"value":"/ Reduces the colors of the image using the supplied `color_map` while applying","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/colorops.rs","byte_start":34334,"byte_end":34415,"line_start":254,"line_end":254,"column_start":1,"column_end":82}},{"value":"/ Floyd-Steinberg dithering to improve the visual conception","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/colorops.rs","byte_start":34416,"byte_end":34478,"line_start":255,"line_end":255,"column_start":1,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":419},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/colorops.rs","byte_start":36003,"byte_end":36015,"line_start":293,"line_end":293,"column_start":8,"column_end":20},"name":"index_colors","qualname":"::imageops::colorops::index_colors","value":"pub fn index_colors<Pix, Map>(&ImageBuffer<Pix, Vec<u8>>, &Map)\n-> ImageBuffer<Luma<u8>, Vec<u8>> where Map: ColorMap<Color = Pix>,\nPix: Pixel<Subpixel = u8> + 'static","parent":null,"children":[],"decl_id":null,"docs":" Reduces the colors using the supplied `color_map` and returns an image of the indices\n","sig":null,"attributes":[{"value":"/ Reduces the colors using the supplied `color_map` and returns an image of the indices","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/colorops.rs","byte_start":35906,"byte_end":35995,"line_start":292,"line_end":292,"column_start":1,"column_end":90}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1488},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/sample.rs","byte_start":37237,"byte_end":37244,"line_start":19,"line_end":19,"column_start":5,"column_end":12},"name":"Nearest","qualname":"::imageops::sample::FilterType::Nearest","value":"FilterType::Nearest","parent":{"krate":0,"index":1487},"children":[],"decl_id":null,"docs":" Nearest Neighbor\n","sig":null,"attributes":[{"value":"/ Nearest Neighbor","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/sample.rs","byte_start":37212,"byte_end":37232,"line_start":18,"line_end":18,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1490},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/sample.rs","byte_start":37273,"byte_end":37281,"line_start":22,"line_end":22,"column_start":5,"column_end":13},"name":"Triangle","qualname":"::imageops::sample::FilterType::Triangle","value":"FilterType::Triangle","parent":{"krate":0,"index":1487},"children":[],"decl_id":null,"docs":" Linear Filter\n","sig":null,"attributes":[{"value":"/ Linear Filter","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/sample.rs","byte_start":37251,"byte_end":37268,"line_start":21,"line_end":21,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1492},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/sample.rs","byte_start":37309,"byte_end":37319,"line_start":25,"line_end":25,"column_start":5,"column_end":15},"name":"CatmullRom","qualname":"::imageops::sample::FilterType::CatmullRom","value":"FilterType::CatmullRom","parent":{"krate":0,"index":1487},"children":[],"decl_id":null,"docs":" Cubic Filter\n","sig":null,"attributes":[{"value":"/ Cubic Filter","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/sample.rs","byte_start":37288,"byte_end":37304,"line_start":24,"line_end":24,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1494},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/sample.rs","byte_start":37350,"byte_end":37358,"line_start":28,"line_end":28,"column_start":5,"column_end":13},"name":"Gaussian","qualname":"::imageops::sample::FilterType::Gaussian","value":"FilterType::Gaussian","parent":{"krate":0,"index":1487},"children":[],"decl_id":null,"docs":" Gaussian Filter\n","sig":null,"attributes":[{"value":"/ Gaussian Filter","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/sample.rs","byte_start":37326,"byte_end":37345,"line_start":27,"line_end":27,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1496},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/sample.rs","byte_start":37395,"byte_end":37403,"line_start":31,"line_end":31,"column_start":5,"column_end":13},"name":"Lanczos3","qualname":"::imageops::sample::FilterType::Lanczos3","value":"FilterType::Lanczos3","parent":{"krate":0,"index":1487},"children":[],"decl_id":null,"docs":" Lanczos with window 3\n","sig":null,"attributes":[{"value":"/ Lanczos with window 3","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/sample.rs","byte_start":37365,"byte_end":37390,"line_start":30,"line_end":30,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1487},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/sample.rs","byte_start":37195,"byte_end":37205,"line_start":17,"line_end":17,"column_start":10,"column_end":20},"name":"FilterType","qualname":"::imageops::sample::FilterType","value":"pub enum FilterType { Nearest, Triangle, CatmullRom, Gaussian, Lanczos3, }","parent":null,"children":[{"krate":0,"index":1488},{"krate":0,"index":1490},{"krate":0,"index":1492},{"krate":0,"index":1494},{"krate":0,"index":1496}],"decl_id":null,"docs":" Available Sampling Filters\n","sig":null,"attributes":[{"value":"/ Available Sampling Filters","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/sample.rs","byte_start":37132,"byte_end":37162,"line_start":15,"line_end":15,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":466},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/sample.rs","byte_start":45230,"byte_end":45239,"line_start":290,"line_end":290,"column_start":8,"column_end":17},"name":"filter3x3","qualname":"::imageops::sample::filter3x3","value":"pub fn filter3x3<I, P, S>(&I, &[f32]) -> ImageBuffer<P, Vec<S>> where\nI: GenericImage<Pixel = P> + 'static, P: Pixel<Subpixel = S> + 'static,\nS: Primitive + 'static","parent":null,"children":[],"decl_id":null,"docs":" Perform a 3x3 box filter on the supplied image.\n ```kernel``` is an array of the filter weights of length 9.\n","sig":null,"attributes":[{"value":"/ Perform a 3x3 box filter on the supplied image.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/sample.rs","byte_start":45037,"byte_end":45088,"line_start":287,"line_end":287,"column_start":1,"column_end":52}},{"value":"/ ```kernel``` is an array of the filter weights of length 9.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/sample.rs","byte_start":45089,"byte_end":45152,"line_start":288,"line_end":288,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":471},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/sample.rs","byte_start":47672,"byte_end":47678,"line_start":364,"line_end":364,"column_start":8,"column_end":14},"name":"resize","qualname":"::imageops::sample::resize","value":"pub fn resize<I: GenericImage + 'static>(&I, u32, u32, FilterType)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static, <I::Pixel as Pixel>::Subpixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Resize the supplied image to the specified dimensions.\n ```nwidth``` and ```nheight``` are the new dimensions.\n ```filter``` is the sampling filter to use.\n","sig":null,"attributes":[{"value":"/ Resize the supplied image to the specified dimensions.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/sample.rs","byte_start":47429,"byte_end":47487,"line_start":360,"line_end":360,"column_start":1,"column_end":59}},{"value":"/ ```nwidth``` and ```nheight``` are the new dimensions.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/sample.rs","byte_start":47488,"byte_end":47546,"line_start":361,"line_end":361,"column_start":1,"column_end":59}},{"value":"/ ```filter``` is the sampling filter to use.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/sample.rs","byte_start":47547,"byte_end":47594,"line_start":362,"line_end":362,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":473},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/sample.rs","byte_start":48914,"byte_end":48918,"line_start":400,"line_end":400,"column_start":8,"column_end":12},"name":"blur","qualname":"::imageops::sample::blur","value":"pub fn blur<I: GenericImage + 'static>(&I, f32)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static, <I::Pixel as Pixel>::Subpixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Performs a Gaussian blur on the supplied image.\n ```sigma``` is a measure of how much to blur by.\n","sig":null,"attributes":[{"value":"/ Performs a Gaussian blur on the supplied image.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/sample.rs","byte_start":48732,"byte_end":48783,"line_start":397,"line_end":397,"column_start":1,"column_end":52}},{"value":"/ ```sigma``` is a measure of how much to blur by.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/sample.rs","byte_start":48784,"byte_end":48836,"line_start":398,"line_end":398,"column_start":1,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":476},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/sample.rs","byte_start":49881,"byte_end":49890,"line_start":430,"line_end":430,"column_start":8,"column_end":17},"name":"unsharpen","qualname":"::imageops::sample::unsharpen","value":"pub fn unsharpen<I, P, S>(&I, f32, i32) -> ImageBuffer<P, Vec<S>> where\nI: GenericImage<Pixel = P> + 'static, P: Pixel<Subpixel = S> + 'static,\nS: Primitive + 'static","parent":null,"children":[],"decl_id":null,"docs":" Performs an unsharpen mask on the supplied image.\n ```sigma``` is the amount to blur the image by.\n ```threshold``` is the threshold for the difference between","sig":null,"attributes":[{"value":"/ Performs an unsharpen mask on the supplied image.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/sample.rs","byte_start":49552,"byte_end":49605,"line_start":424,"line_end":424,"column_start":1,"column_end":54}},{"value":"/ ```sigma``` is the amount to blur the image by.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/sample.rs","byte_start":49606,"byte_end":49657,"line_start":425,"line_end":425,"column_start":1,"column_end":52}},{"value":"/ ```threshold``` is the threshold for the difference between","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/sample.rs","byte_start":49658,"byte_end":49721,"line_start":426,"line_end":426,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/sample.rs","byte_start":49722,"byte_end":49725,"line_start":427,"line_end":427,"column_start":1,"column_end":4}},{"value":"/ See https://en.wikipedia.org/wiki/Unsharp_masking#Digital_unsharp_masking","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/sample.rs","byte_start":49726,"byte_end":49803,"line_start":428,"line_end":428,"column_start":1,"column_end":78}}]},{"kind":"Function","id":{"krate":0,"index":481},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/mod.rs","byte_start":17183,"byte_end":17187,"line_start":59,"line_end":59,"column_start":8,"column_end":12},"name":"crop","qualname":"::imageops::crop","value":"pub fn crop<I: GenericImage + 'static>(&mut I, u32, u32, u32, u32)\n-> SubImage<, I> where I::Pixel: 'static,\n<I::Pixel as Pixel>::Subpixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable view into an image\n","sig":null,"attributes":[{"value":"/ Return a mutable view into an image","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/mod.rs","byte_start":17067,"byte_end":17106,"line_start":57,"line_end":57,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":483},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/mod.rs","byte_start":17763,"byte_end":17770,"line_start":77,"line_end":77,"column_start":8,"column_end":15},"name":"overlay","qualname":"::imageops::overlay","value":"pub fn overlay<I: GenericImage>(&mut I, &I, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Overlay an image at a given coordinate (x, y)\n","sig":null,"attributes":[{"value":"/ Overlay an image at a given coordinate (x, y)","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/mod.rs","byte_start":17706,"byte_end":17755,"line_start":76,"line_end":76,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":485},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/mod.rs","byte_start":18636,"byte_end":18643,"line_start":106,"line_end":106,"column_start":8,"column_end":15},"name":"replace","qualname":"::imageops::replace","value":"pub fn replace<I: GenericImage>(&mut I, &I, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Replace the contents of an image at a given coordinate (x, y)\n","sig":null,"attributes":[{"value":"/ Replace the contents of an image at a given coordinate (x, y)","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/mod.rs","byte_start":18563,"byte_end":18628,"line_start":105,"line_end":105,"column_start":1,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":487},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/jpeg/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"jpeg","qualname":"::jpeg","value":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/jpeg/mod.rs","parent":null,"children":[{"krate":0,"index":488},{"krate":0,"index":491},{"krate":0,"index":494},{"krate":0,"index":608},{"krate":0,"index":655},{"krate":0,"index":658}],"decl_id":null,"docs":" Decoding and Encoding of JPEG Images","sig":null,"attributes":[{"value":"cfg(feature = \"jpeg\")","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":1796,"byte_end":1820,"line_start":121,"line_end":121,"column_start":1,"column_end":25}},{"value":"/ Decoding and Encoding of JPEG Images","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/jpeg/mod.rs","byte_start":51520,"byte_end":51560,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/jpeg/mod.rs","byte_start":51561,"byte_end":51564,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ JPEG (Joint Photographic Experts Group) is an image format that supports lossy compression.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/jpeg/mod.rs","byte_start":51565,"byte_end":51660,"line_start":3,"line_end":3,"column_start":1,"column_end":96}},{"value":"/ This module implements the Baseline JPEG standard.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/jpeg/mod.rs","byte_start":51661,"byte_end":51715,"line_start":4,"line_end":4,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/jpeg/mod.rs","byte_start":51716,"byte_end":51719,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ #Related Links","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/jpeg/mod.rs","byte_start":51720,"byte_end":51738,"line_start":6,"line_end":6,"column_start":1,"column_end":19}},{"value":"/ * http://www.w3.org/Graphics/JPEG/itu-t81.pdf - The JPEG specification","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/jpeg/mod.rs","byte_start":51739,"byte_end":51813,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/jpeg/mod.rs","byte_start":51814,"byte_end":51817,"line_start":8,"line_end":8,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":560},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/jpeg/encoder.rs","byte_start":57451,"byte_end":57462,"line_start":162,"line_end":162,"column_start":12,"column_end":23},"name":"JPEGEncoder","qualname":"::jpeg::encoder::JPEGEncoder","value":"JPEGEncoder {  }","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":571}],"decl_id":null,"docs":" The representation of a JPEG encoder\n","sig":null,"attributes":[{"value":"/ The representation of a JPEG encoder","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/jpeg/encoder.rs","byte_start":57399,"byte_end":57439,"line_start":161,"line_end":161,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":575},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/jpeg/encoder.rs","byte_start":57844,"byte_end":57847,"line_start":179,"line_end":179,"column_start":12,"column_end":15},"name":"new","qualname":"<JPEGEncoder>::new","value":"pub fn new(&mut W) -> JPEGEncoder<, W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/jpeg/encoder.rs","byte_start":57774,"byte_end":57832,"line_start":178,"line_end":178,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":576},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/jpeg/encoder.rs","byte_start":58148,"byte_end":58164,"line_start":186,"line_end":186,"column_start":12,"column_end":28},"name":"new_with_quality","qualname":"<JPEGEncoder>::new_with_quality","value":"pub fn new_with_quality(&mut W, u8) -> JPEGEncoder<, W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```, and has\n the quality parameter ```quality``` with a value in the range 1-100\n where 1 is the worst and 100 is the best.\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```, and has","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/jpeg/encoder.rs","byte_start":57943,"byte_end":58010,"line_start":183,"line_end":183,"column_start":5,"column_end":72}},{"value":"/ the quality parameter ```quality``` with a value in the range 1-100","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/jpeg/encoder.rs","byte_start":58015,"byte_end":58086,"line_start":184,"line_end":184,"column_start":5,"column_end":76}},{"value":"/ where 1 is the worst and 100 is the best.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/jpeg/encoder.rs","byte_start":58091,"byte_end":58136,"line_start":185,"line_end":185,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/jpeg/encoder.rs","byte_start":60167,"byte_end":60173,"line_start":239,"line_end":239,"column_start":12,"column_end":18},"name":"encode","qualname":"<JPEGEncoder>::encode","value":"pub fn encode(&mut Self, &[u8], u32, u32, color::ColorType) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```image```\n that has dimensions ```width``` and ```height```\n and ```ColorType``` ```c```","sig":null,"attributes":[{"value":"/ Encodes the image ```image```","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/jpeg/encoder.rs","byte_start":59963,"byte_end":59996,"line_start":234,"line_end":234,"column_start":5,"column_end":38}},{"value":"/ that has dimensions ```width``` and ```height```","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/jpeg/encoder.rs","byte_start":60001,"byte_end":60053,"line_start":235,"line_end":235,"column_start":5,"column_end":57}},{"value":"/ and ```ColorType``` ```c```","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/jpeg/encoder.rs","byte_start":60058,"byte_end":60089,"line_start":236,"line_end":236,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/jpeg/encoder.rs","byte_start":60094,"byte_end":60097,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ The Image in encoded with subsampling ratio 4:2:2","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/jpeg/encoder.rs","byte_start":60102,"byte_end":60155,"line_start":238,"line_end":238,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":633},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/jpeg/decoder.rs","byte_start":73547,"byte_end":73558,"line_start":9,"line_end":9,"column_start":12,"column_end":23},"name":"JPEGDecoder","qualname":"::jpeg::decoder::JPEGDecoder","value":"JPEGDecoder {  }","parent":null,"children":[{"krate":0,"index":635},{"krate":0,"index":636}],"decl_id":null,"docs":" JPEG decoder\n","sig":null,"attributes":[{"value":"/ JPEG decoder","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/jpeg/decoder.rs","byte_start":73519,"byte_end":73535,"line_start":8,"line_end":8,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/jpeg/decoder.rs","byte_start":73761,"byte_end":73764,"line_start":16,"line_end":16,"column_start":12,"column_end":15},"name":"new","qualname":"<JPEGDecoder<R>>::new","value":"pub fn new(R) -> JPEGDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[{"value":"/ Create a new decoder that decodes from the stream ```r```","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/jpeg/decoder.rs","byte_start":73688,"byte_end":73749,"line_start":15,"line_end":15,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1513},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":86636,"byte_end":86647,"line_start":17,"line_end":17,"column_start":5,"column_end":16},"name":"FormatError","qualname":"::image::ImageError::FormatError","value":"ImageError::FormatError(String)","parent":{"krate":0,"index":1512},"children":[],"decl_id":null,"docs":" The Image is not formatted properly\n","sig":null,"attributes":[{"value":"/ The Image is not formatted properly","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":86592,"byte_end":86631,"line_start":16,"line_end":16,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1516},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":86727,"byte_end":86741,"line_start":20,"line_end":20,"column_start":5,"column_end":19},"name":"DimensionError","qualname":"::image::ImageError::DimensionError","value":"ImageError::DimensionError","parent":{"krate":0,"index":1512},"children":[],"decl_id":null,"docs":" The Image's dimensions are either too small or too large\n","sig":null,"attributes":[{"value":"/ The Image's dimensions are either too small or too large","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":86662,"byte_end":86722,"line_start":19,"line_end":19,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1518},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":86803,"byte_end":86819,"line_start":23,"line_end":23,"column_start":5,"column_end":21},"name":"UnsupportedError","qualname":"::image::ImageError::UnsupportedError","value":"ImageError::UnsupportedError(String)","parent":{"krate":0,"index":1512},"children":[],"decl_id":null,"docs":" The Decoder does not support this image format\n","sig":null,"attributes":[{"value":"/ The Decoder does not support this image format","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":86748,"byte_end":86798,"line_start":22,"line_end":22,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1521},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":86887,"byte_end":86903,"line_start":26,"line_end":26,"column_start":5,"column_end":21},"name":"UnsupportedColor","qualname":"::image::ImageError::UnsupportedColor","value":"ImageError::UnsupportedColor(ColorType)","parent":{"krate":0,"index":1512},"children":[],"decl_id":null,"docs":" The Decoder does not support this color type\n","sig":null,"attributes":[{"value":"/ The Decoder does not support this color type","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":86834,"byte_end":86882,"line_start":25,"line_end":25,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1524},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":87001,"byte_end":87014,"line_start":30,"line_end":30,"column_start":5,"column_end":18},"name":"NotEnoughData","qualname":"::image::ImageError::NotEnoughData","value":"ImageError::NotEnoughData","parent":{"krate":0,"index":1512},"children":[],"decl_id":null,"docs":" Not enough data was provided to the Decoder\n to decode the image\n","sig":null,"attributes":[{"value":"/ Not enough data was provided to the Decoder","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":86921,"byte_end":86968,"line_start":28,"line_end":28,"column_start":5,"column_end":52}},{"value":"/ to decode the image","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":86973,"byte_end":86996,"line_start":29,"line_end":29,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1526},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":87076,"byte_end":87083,"line_start":33,"line_end":33,"column_start":5,"column_end":12},"name":"IoError","qualname":"::image::ImageError::IoError","value":"ImageError::IoError(io::Error)","parent":{"krate":0,"index":1512},"children":[],"decl_id":null,"docs":" An I/O Error occurred while decoding the image\n","sig":null,"attributes":[{"value":"/ An I/O Error occurred while decoding the image","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":87021,"byte_end":87071,"line_start":32,"line_end":32,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1529},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":87147,"byte_end":87155,"line_start":36,"line_end":36,"column_start":5,"column_end":13},"name":"ImageEnd","qualname":"::image::ImageError::ImageEnd","value":"ImageError::ImageEnd","parent":{"krate":0,"index":1512},"children":[],"decl_id":null,"docs":" The end of the image has been reached\n","sig":null,"attributes":[{"value":"/ The end of the image has been reached","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":87101,"byte_end":87142,"line_start":35,"line_end":35,"column_start":5,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":1512},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":86575,"byte_end":86585,"line_start":15,"line_end":15,"column_start":10,"column_end":20},"name":"ImageError","qualname":"::image::ImageError","value":"pub enum ImageError {\n    FormatError(String),\n    DimensionError,\n    UnsupportedError(String),\n    UnsupportedColor(ColorType),\n    NotEnoughData,\n    IoError(io::Error),\n    ImageEnd,\n}","parent":null,"children":[{"krate":0,"index":1513},{"krate":0,"index":1516},{"krate":0,"index":1518},{"krate":0,"index":1521},{"krate":0,"index":1524},{"krate":0,"index":1526},{"krate":0,"index":1529}],"decl_id":null,"docs":" An enumeration of Image errors\n","sig":null,"attributes":[{"value":"/ An enumeration of Image errors","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":86514,"byte_end":86548,"line_start":13,"line_end":13,"column_start":1,"column_end":35}}]},{"kind":"Type","id":{"krate":0,"index":717},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":89131,"byte_end":89142,"line_start":86,"line_end":86,"column_start":10,"column_end":21},"name":"ImageResult","qualname":"::image::ImageResult","value":"Result<T, ImageError>","parent":null,"children":[],"decl_id":null,"docs":" Result of an image decoding/encoding process\n","sig":null,"attributes":[{"value":"/ Result of an image decoding/encoding process","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":89073,"byte_end":89121,"line_start":85,"line_end":85,"column_start":1,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":720},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":89270,"byte_end":89272,"line_start":91,"line_end":91,"column_start":5,"column_end":7},"name":"U8","qualname":"::image::DecodingResult::U8","value":"DecodingResult::U8(Vec<u8>)","parent":{"krate":0,"index":719},"children":[],"decl_id":null,"docs":" A vector of unsigned bytes\n","sig":null,"attributes":[{"value":"/ A vector of unsigned bytes","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":89235,"byte_end":89265,"line_start":90,"line_end":90,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":723},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":89322,"byte_end":89325,"line_start":93,"line_end":93,"column_start":5,"column_end":8},"name":"U16","qualname":"::image::DecodingResult::U16","value":"DecodingResult::U16(Vec<u16>)","parent":{"krate":0,"index":719},"children":[],"decl_id":null,"docs":" A vector of unsigned words\n","sig":null,"attributes":[{"value":"/ A vector of unsigned words","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":89287,"byte_end":89317,"line_start":92,"line_end":92,"column_start":5,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":719},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":89214,"byte_end":89228,"line_start":89,"line_end":89,"column_start":10,"column_end":24},"name":"DecodingResult","qualname":"::image::DecodingResult","value":"pub enum DecodingResult { U8(Vec<u8>), U16(Vec<u16>), }","parent":null,"children":[{"krate":0,"index":720},{"krate":0,"index":723}],"decl_id":null,"docs":" Result of a decoding process\n","sig":null,"attributes":[{"value":"/ Result of a decoding process","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":89172,"byte_end":89204,"line_start":88,"line_end":88,"column_start":1,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1534},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":89722,"byte_end":89725,"line_start":109,"line_end":109,"column_start":5,"column_end":8},"name":"PNG","qualname":"::image::ImageFormat::PNG","value":"ImageFormat::PNG","parent":{"krate":0,"index":1533},"children":[],"decl_id":null,"docs":" An Image in PNG Format\n","sig":null,"attributes":[{"value":"/ An Image in PNG Format","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":89691,"byte_end":89717,"line_start":108,"line_end":108,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1536},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":89764,"byte_end":89768,"line_start":112,"line_end":112,"column_start":5,"column_end":9},"name":"JPEG","qualname":"::image::ImageFormat::JPEG","value":"ImageFormat::JPEG","parent":{"krate":0,"index":1533},"children":[],"decl_id":null,"docs":" An Image in JPEG Format\n","sig":null,"attributes":[{"value":"/ An Image in JPEG Format","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":89732,"byte_end":89759,"line_start":111,"line_end":111,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1538},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":89806,"byte_end":89809,"line_start":115,"line_end":115,"column_start":5,"column_end":8},"name":"GIF","qualname":"::image::ImageFormat::GIF","value":"ImageFormat::GIF","parent":{"krate":0,"index":1533},"children":[],"decl_id":null,"docs":" An Image in GIF Format\n","sig":null,"attributes":[{"value":"/ An Image in GIF Format","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":89775,"byte_end":89801,"line_start":114,"line_end":114,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1540},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":89848,"byte_end":89852,"line_start":118,"line_end":118,"column_start":5,"column_end":9},"name":"WEBP","qualname":"::image::ImageFormat::WEBP","value":"ImageFormat::WEBP","parent":{"krate":0,"index":1533},"children":[],"decl_id":null,"docs":" An Image in WEBP Format\n","sig":null,"attributes":[{"value":"/ An Image in WEBP Format","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":89816,"byte_end":89843,"line_start":117,"line_end":117,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1542},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":89890,"byte_end":89893,"line_start":121,"line_end":121,"column_start":5,"column_end":8},"name":"PPM","qualname":"::image::ImageFormat::PPM","value":"ImageFormat::PPM","parent":{"krate":0,"index":1533},"children":[],"decl_id":null,"docs":" An Image in PPM Format\n","sig":null,"attributes":[{"value":"/ An Image in PPM Format","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":89859,"byte_end":89885,"line_start":120,"line_end":120,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1544},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":89932,"byte_end":89936,"line_start":124,"line_end":124,"column_start":5,"column_end":9},"name":"TIFF","qualname":"::image::ImageFormat::TIFF","value":"ImageFormat::TIFF","parent":{"krate":0,"index":1533},"children":[],"decl_id":null,"docs":" An Image in TIFF Format\n","sig":null,"attributes":[{"value":"/ An Image in TIFF Format","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":89900,"byte_end":89927,"line_start":123,"line_end":123,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1546},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":89974,"byte_end":89977,"line_start":127,"line_end":127,"column_start":5,"column_end":8},"name":"TGA","qualname":"::image::ImageFormat::TGA","value":"ImageFormat::TGA","parent":{"krate":0,"index":1533},"children":[],"decl_id":null,"docs":" An Image in TGA Format\n","sig":null,"attributes":[{"value":"/ An Image in TGA Format","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":89943,"byte_end":89969,"line_start":126,"line_end":126,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1548},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":90015,"byte_end":90018,"line_start":130,"line_end":130,"column_start":5,"column_end":8},"name":"BMP","qualname":"::image::ImageFormat::BMP","value":"ImageFormat::BMP","parent":{"krate":0,"index":1533},"children":[],"decl_id":null,"docs":" An Image in BMP Format\n","sig":null,"attributes":[{"value":"/ An Image in BMP Format","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":89984,"byte_end":90010,"line_start":129,"line_end":129,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1550},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":90056,"byte_end":90059,"line_start":133,"line_end":133,"column_start":5,"column_end":8},"name":"ICO","qualname":"::image::ImageFormat::ICO","value":"ImageFormat::ICO","parent":{"krate":0,"index":1533},"children":[],"decl_id":null,"docs":" An Image in ICO Format\n","sig":null,"attributes":[{"value":"/ An Image in ICO Format","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":90025,"byte_end":90051,"line_start":132,"line_end":132,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1552},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":90106,"byte_end":90109,"line_start":136,"line_end":136,"column_start":5,"column_end":8},"name":"HDR","qualname":"::image::ImageFormat::HDR","value":"ImageFormat::HDR","parent":{"krate":0,"index":1533},"children":[],"decl_id":null,"docs":" An Image in Radiance HDR Format\n","sig":null,"attributes":[{"value":"/ An Image in Radiance HDR Format","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":90066,"byte_end":90101,"line_start":135,"line_end":135,"column_start":5,"column_end":40}}]},{"kind":"Enum","id":{"krate":0,"index":1533},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":89673,"byte_end":89684,"line_start":107,"line_end":107,"column_start":10,"column_end":21},"name":"ImageFormat","qualname":"::image::ImageFormat","value":"pub enum ImageFormat { PNG, JPEG, GIF, WEBP, PPM, TIFF, TGA, BMP, ICO, HDR, }","parent":null,"children":[{"krate":0,"index":1534},{"krate":0,"index":1536},{"krate":0,"index":1538},{"krate":0,"index":1540},{"krate":0,"index":1542},{"krate":0,"index":1544},{"krate":0,"index":1546},{"krate":0,"index":1548},{"krate":0,"index":1550},{"krate":0,"index":1552}],"decl_id":null,"docs":" An enumeration of supported image formats.\n Not all formats support both encoding and decoding.\n","sig":null,"attributes":[{"value":"/ An enumeration of supported image formats.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":89516,"byte_end":89562,"line_start":104,"line_end":104,"column_start":1,"column_end":47}},{"value":"/ Not all formats support both encoding and decoding.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":89563,"byte_end":89618,"line_start":105,"line_end":105,"column_start":1,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":734},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":90166,"byte_end":90178,"line_start":140,"line_end":140,"column_start":11,"column_end":23},"name":"ImageDecoder","qualname":"::image::ImageDecoder","value":"ImageDecoder: Sized","parent":null,"children":[{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":739},{"krate":0,"index":740},{"krate":0,"index":741},{"krate":0,"index":742}],"decl_id":null,"docs":" The trait that all decoders implement\n","sig":null,"attributes":[{"value":"/ The trait that all decoders implement","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":90114,"byte_end":90155,"line_start":139,"line_end":139,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":90264,"byte_end":90274,"line_start":142,"line_end":142,"column_start":8,"column_end":18},"name":"dimensions","qualname":"::image::ImageDecoder::dimensions","value":"pub fn dimensions(&mut Self) -> ImageResult<(u32, u32)>","parent":{"krate":0,"index":734},"children":[],"decl_id":null,"docs":" Returns a tuple containing the width and height of the image\n","sig":null,"attributes":[{"value":"/ Returns a tuple containing the width and height of the image","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":90192,"byte_end":90256,"line_start":141,"line_end":141,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":736},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":90389,"byte_end":90398,"line_start":145,"line_end":145,"column_start":8,"column_end":17},"name":"colortype","qualname":"::image::ImageDecoder::colortype","value":"pub fn colortype(&mut Self) -> ImageResult<ColorType>","parent":{"krate":0,"index":734},"children":[],"decl_id":null,"docs":" Returns the color type of the image e.g. RGB(8) (8bit RGB)\n","sig":null,"attributes":[{"value":"/ Returns the color type of the image e.g. RGB(8) (8bit RGB)","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":90319,"byte_end":90381,"line_start":144,"line_end":144,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":737},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":90513,"byte_end":90520,"line_start":148,"line_end":148,"column_start":8,"column_end":15},"name":"row_len","qualname":"::image::ImageDecoder::row_len","value":"pub fn row_len(&mut Self) -> ImageResult<usize>","parent":{"krate":0,"index":734},"children":[],"decl_id":null,"docs":" Returns the length in bytes of one decoded row of the image\n","sig":null,"attributes":[{"value":"/ Returns the length in bytes of one decoded row of the image","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":90442,"byte_end":90505,"line_start":147,"line_end":147,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":738},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":90641,"byte_end":90654,"line_start":151,"line_end":151,"column_start":8,"column_end":21},"name":"read_scanline","qualname":"::image::ImageDecoder::read_scanline","value":"pub fn read_scanline(&mut Self, &mut [u8]) -> ImageResult<u32>","parent":{"krate":0,"index":734},"children":[],"decl_id":null,"docs":" Reads one row from the image into ```buf``` and returns the row index\n","sig":null,"attributes":[{"value":"/ Reads one row from the image into ```buf``` and returns the row index","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":90560,"byte_end":90633,"line_start":150,"line_end":150,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":739},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":90770,"byte_end":90780,"line_start":154,"line_end":154,"column_start":8,"column_end":18},"name":"read_image","qualname":"::image::ImageDecoder::read_image","value":"pub fn read_image(&mut Self) -> ImageResult<DecodingResult>","parent":{"krate":0,"index":734},"children":[],"decl_id":null,"docs":" Decodes the entire image and return it as a Vector\n","sig":null,"attributes":[{"value":"/ Decodes the entire image and return it as a Vector","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":90708,"byte_end":90762,"line_start":153,"line_end":153,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":740},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":90878,"byte_end":90889,"line_start":157,"line_end":157,"column_start":8,"column_end":19},"name":"is_animated","qualname":"::image::ImageDecoder::is_animated","value":"pub fn is_animated(&mut Self) -> ImageResult<bool>","parent":{"krate":0,"index":734},"children":[],"decl_id":null,"docs":" Returns true if the image is animated\n","sig":null,"attributes":[{"value":"/ Returns true if the image is animated","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":90829,"byte_end":90870,"line_start":156,"line_end":156,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":741},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":91175,"byte_end":91186,"line_start":166,"line_end":166,"column_start":8,"column_end":19},"name":"into_frames","qualname":"::image::ImageDecoder::into_frames","value":"pub fn into_frames(Self) -> ImageResult<Frames>","parent":{"krate":0,"index":734},"children":[],"decl_id":null,"docs":" Returns the frames of the image","sig":null,"attributes":[{"value":"/ Returns the frames of the image","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":91061,"byte_end":91096,"line_start":163,"line_end":163,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":91101,"byte_end":91104,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ If the image is not animated it returns a single frame","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":91109,"byte_end":91167,"line_start":165,"line_end":165,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":742},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":91495,"byte_end":91504,"line_start":174,"line_end":174,"column_start":8,"column_end":17},"name":"load_rect","qualname":"::image::ImageDecoder::load_rect","value":"pub fn load_rect(&mut Self, u32, u32, u32, u32) -> ImageResult<Vec<u8>>","parent":{"krate":0,"index":734},"children":[],"decl_id":null,"docs":" Decodes a specific region of the image, represented by the rectangle\n starting from ```x``` and ```y``` and having ```length``` and ```width```\n","sig":null,"attributes":[{"value":"/ Decodes a specific region of the image, represented by the rectangle","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":91333,"byte_end":91405,"line_start":172,"line_end":172,"column_start":5,"column_end":77}},{"value":"/ starting from ```x``` and ```y``` and having ```length``` and ```width```","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":91410,"byte_end":91487,"line_start":173,"line_end":173,"column_start":5,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":743},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":92549,"byte_end":92555,"line_start":216,"line_end":216,"column_start":12,"column_end":18},"name":"Pixels","qualname":"::image::Pixels","value":"Pixels {  }","parent":null,"children":[{"krate":0,"index":746},{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":750}],"decl_id":null,"docs":" Immutable pixel iterator\n","sig":null,"attributes":[{"value":"/ Immutable pixel iterator","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":92509,"byte_end":92537,"line_start":215,"line_end":215,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":756},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":93336,"byte_end":93345,"line_start":249,"line_end":249,"column_start":12,"column_end":21},"name":"MutPixels","qualname":"::image::MutPixels","value":"MutPixels {  }","parent":null,"children":[{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":763}],"decl_id":null,"docs":" Mutable pixel iterator","sig":null,"attributes":[{"value":"/ Mutable pixel iterator","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":93146,"byte_end":93172,"line_start":246,"line_end":246,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":93173,"byte_end":93176,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/ DEPRECATED: It is currently not possible to create a safe iterator for this in Rust. You have to use an iterator over the image buffer instead.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":93177,"byte_end":93324,"line_start":248,"line_end":248,"column_start":1,"column_end":148}}]},{"kind":"Trait","id":{"krate":0,"index":769},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":94389,"byte_end":94401,"line_start":290,"line_end":290,"column_start":11,"column_end":23},"name":"GenericImage","qualname":"::image::GenericImage","value":"GenericImage: Sized","parent":null,"children":[{"krate":0,"index":770},{"krate":0,"index":771},{"krate":0,"index":772},{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":775},{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":778},{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":784},{"krate":0,"index":786}],"decl_id":null,"docs":" A trait for manipulating images.\n","sig":null,"attributes":[{"value":"/ A trait for manipulating images.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":94342,"byte_end":94378,"line_start":289,"line_end":289,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":770},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":94447,"byte_end":94452,"line_start":292,"line_end":292,"column_start":10,"column_end":15},"name":"Pixel","qualname":"::image::GenericImage::Pixel","value":"type Pixel: Pixel;","parent":{"krate":0,"index":769},"children":[],"decl_id":null,"docs":" The type of pixel.\n","sig":null,"attributes":[{"value":"/ The type of pixel.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":94415,"byte_end":94437,"line_start":291,"line_end":291,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":771},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":94513,"byte_end":94523,"line_start":295,"line_end":295,"column_start":8,"column_end":18},"name":"dimensions","qualname":"::image::GenericImage::dimensions","value":"pub fn dimensions(&Self) -> (u32, u32)","parent":{"krate":0,"index":769},"children":[],"decl_id":null,"docs":" The width and height of this image.\n","sig":null,"attributes":[{"value":"/ The width and height of this image.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":94466,"byte_end":94505,"line_start":294,"line_end":294,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":772},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":94587,"byte_end":94592,"line_start":298,"line_end":298,"column_start":8,"column_end":13},"name":"width","qualname":"::image::GenericImage::width","value":"pub fn width(&Self) -> u32","parent":{"krate":0,"index":769},"children":[],"decl_id":null,"docs":" The width of this image.\n","sig":null,"attributes":[{"value":"/ The width of this image.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":94551,"byte_end":94579,"line_start":297,"line_end":297,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":773},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":94707,"byte_end":94713,"line_start":304,"line_end":304,"column_start":8,"column_end":14},"name":"height","qualname":"::image::GenericImage::height","value":"pub fn height(&Self) -> u32","parent":{"krate":0,"index":769},"children":[],"decl_id":null,"docs":" The height of this image.\n","sig":null,"attributes":[{"value":"/ The height of this image.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":94670,"byte_end":94699,"line_start":303,"line_end":303,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":774},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":94840,"byte_end":94846,"line_start":310,"line_end":310,"column_start":8,"column_end":14},"name":"bounds","qualname":"::image::GenericImage::bounds","value":"pub fn bounds(&Self) -> (u32, u32, u32, u32)","parent":{"krate":0,"index":769},"children":[],"decl_id":null,"docs":" The bounding rectangle of this image.\n","sig":null,"attributes":[{"value":"/ The bounding rectangle of this image.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":94791,"byte_end":94832,"line_start":309,"line_end":309,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":775},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":94963,"byte_end":94972,"line_start":313,"line_end":313,"column_start":8,"column_end":17},"name":"in_bounds","qualname":"::image::GenericImage::in_bounds","value":"pub fn in_bounds(&Self, u32, u32) -> bool","parent":{"krate":0,"index":769},"children":[],"decl_id":null,"docs":" Returns true if this x, y coordinate is contained inside the image.\n","sig":null,"attributes":[{"value":"/ Returns true if this x, y coordinate is contained inside the image.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":94884,"byte_end":94955,"line_start":312,"line_end":312,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":776},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":95397,"byte_end":95406,"line_start":331,"line_end":331,"column_start":8,"column_end":17},"name":"get_pixel","qualname":"::image::GenericImage::get_pixel","value":"pub fn get_pixel(&Self, u32, u32) -> Self::Pixel","parent":{"krate":0,"index":769},"children":[],"decl_id":null,"docs":" Returns the pixel located at (x, y)","sig":null,"attributes":[{"value":"/ Returns the pixel located at (x, y)","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":95222,"byte_end":95261,"line_start":324,"line_end":324,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":95266,"byte_end":95269,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":95274,"byte_end":95286,"line_start":326,"line_end":326,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":95291,"byte_end":95294,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of bounds.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":95299,"byte_end":95339,"line_start":328,"line_end":328,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":95344,"byte_end":95347,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ TODO: change this signature to &P","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":95352,"byte_end":95389,"line_start":330,"line_end":330,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":777},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":95572,"byte_end":95585,"line_start":338,"line_end":338,"column_start":8,"column_end":21},"name":"get_pixel_mut","qualname":"::image::GenericImage::get_pixel_mut","value":"pub fn get_pixel_mut(&mut Self, u32, u32) -> &mut Self::Pixel","parent":{"krate":0,"index":769},"children":[],"decl_id":null,"docs":" Puts a pixel at location (x, y)","sig":null,"attributes":[{"value":"/ Puts a pixel at location (x, y)","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":95451,"byte_end":95486,"line_start":333,"line_end":333,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":95491,"byte_end":95494,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":95499,"byte_end":95511,"line_start":335,"line_end":335,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":95516,"byte_end":95519,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of bounds.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":95524,"byte_end":95564,"line_start":337,"line_end":337,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":778},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":95781,"byte_end":95797,"line_start":343,"line_end":343,"column_start":15,"column_end":31},"name":"unsafe_get_pixel","qualname":"::image::GenericImage::unsafe_get_pixel","value":"pub unsafe fn unsafe_get_pixel(&Self, u32, u32) -> Self::Pixel","parent":{"krate":0,"index":769},"children":[],"decl_id":null,"docs":" Returns the pixel located at (x, y)","sig":null,"attributes":[{"value":"/ Returns the pixel located at (x, y)","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":95639,"byte_end":95678,"line_start":340,"line_end":340,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":95683,"byte_end":95686,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ This function can be implemented in a way that ignores bounds checking.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":95691,"byte_end":95766,"line_start":342,"line_end":342,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":779},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":95998,"byte_end":96007,"line_start":352,"line_end":352,"column_start":8,"column_end":17},"name":"put_pixel","qualname":"::image::GenericImage::put_pixel","value":"pub fn put_pixel(&mut Self, u32, u32, Self::Pixel)","parent":{"krate":0,"index":769},"children":[],"decl_id":null,"docs":" Put a pixel at location (x, y)","sig":null,"attributes":[{"value":"/ Put a pixel at location (x, y)","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":95878,"byte_end":95912,"line_start":347,"line_end":347,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":95917,"byte_end":95920,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":95925,"byte_end":95937,"line_start":349,"line_end":349,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":95942,"byte_end":95945,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of bounds.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":95950,"byte_end":95990,"line_start":351,"line_end":351,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":780},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":96199,"byte_end":96215,"line_start":357,"line_end":357,"column_start":15,"column_end":31},"name":"unsafe_put_pixel","qualname":"::image::GenericImage::unsafe_put_pixel","value":"pub unsafe fn unsafe_put_pixel(&mut Self, u32, u32, Self::Pixel)","parent":{"krate":0,"index":769},"children":[],"decl_id":null,"docs":" Puts a pixel at location (x, y)","sig":null,"attributes":[{"value":"/ Puts a pixel at location (x, y)","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":96061,"byte_end":96096,"line_start":354,"line_end":354,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":96101,"byte_end":96104,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ This function can be implemented in a way that ignores bounds checking.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":96109,"byte_end":96184,"line_start":356,"line_end":356,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":781},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":96482,"byte_end":96493,"line_start":364,"line_end":364,"column_start":8,"column_end":19},"name":"blend_pixel","qualname":"::image::GenericImage::blend_pixel","value":"pub fn blend_pixel(&mut Self, u32, u32, Self::Pixel)","parent":{"krate":0,"index":769},"children":[],"decl_id":null,"docs":" Put a pixel at location (x, y), taking into account alpha channels","sig":null,"attributes":[{"value":"/ Put a pixel at location (x, y), taking into account alpha channels","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":96313,"byte_end":96383,"line_start":361,"line_end":361,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":96388,"byte_end":96391,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ DEPRECATED: This method will be removed. Blend the pixel directly instead.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":96396,"byte_end":96474,"line_start":363,"line_end":363,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":782},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":96698,"byte_end":96704,"line_start":369,"line_end":369,"column_start":8,"column_end":14},"name":"pixels","qualname":"::image::GenericImage::pixels","value":"pub fn pixels(&Self) -> Pixels<, Self>","parent":{"krate":0,"index":769},"children":[],"decl_id":null,"docs":" Returns an Iterator over the pixels of this image.\n The iterator yields the coordinates of each pixel\n along with their value\n","sig":null,"attributes":[{"value":"/ Returns an Iterator over the pixels of this image.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":96547,"byte_end":96601,"line_start":366,"line_end":366,"column_start":5,"column_end":59}},{"value":"/ The iterator yields the coordinates of each pixel","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":96606,"byte_end":96659,"line_start":367,"line_end":367,"column_start":5,"column_end":58}},{"value":"/ along with their value","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":96664,"byte_end":96690,"line_start":368,"line_end":368,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":783},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":97226,"byte_end":97236,"line_start":386,"line_end":386,"column_start":8,"column_end":18},"name":"pixels_mut","qualname":"::image::GenericImage::pixels_mut","value":"pub fn pixels_mut(&mut Self) -> MutPixels<, Self>","parent":{"krate":0,"index":769},"children":[],"decl_id":null,"docs":" Returns an Iterator over mutable pixels of this image.\n The iterator yields the coordinates of each pixel\n along with a mutable reference to them.","sig":null,"attributes":[{"value":"/ Returns an Iterator over mutable pixels of this image.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":96945,"byte_end":97003,"line_start":381,"line_end":381,"column_start":5,"column_end":63}},{"value":"/ The iterator yields the coordinates of each pixel","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":97008,"byte_end":97061,"line_start":382,"line_end":382,"column_start":5,"column_end":58}},{"value":"/ along with a mutable reference to them.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":97066,"byte_end":97109,"line_start":383,"line_end":383,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":97114,"byte_end":97117,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ DEPRECATED: This cannot be implemented safely in Rust. Please use the image buffer directly.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":97122,"byte_end":97218,"line_start":385,"line_end":385,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":784},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":97896,"byte_end":97905,"line_start":408,"line_end":408,"column_start":8,"column_end":17},"name":"copy_from","qualname":"::image::GenericImage::copy_from","value":"pub fn copy_from<O>(&mut Self, &O, u32, u32) -> bool where\nO: GenericImage<Pixel = Self::Pixel>","parent":{"krate":0,"index":769},"children":[],"decl_id":null,"docs":" Copies all of the pixels from another image into this image.","sig":null,"attributes":[{"value":"/ Copies all of the pixels from another image into this image.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":97487,"byte_end":97551,"line_start":398,"line_end":398,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":97556,"byte_end":97559,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ The other image is copied with the top-left corner of the","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":97564,"byte_end":97625,"line_start":400,"line_end":400,"column_start":5,"column_end":66}},{"value":"/ other image placed at (x, y).","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":97630,"byte_end":97663,"line_start":401,"line_end":401,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":97668,"byte_end":97671,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ In order to copy only a pice of the other image, use `sub_image`.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":97676,"byte_end":97745,"line_start":403,"line_end":403,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":97750,"byte_end":97753,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":97758,"byte_end":97771,"line_start":405,"line_end":405,"column_start":5,"column_end":18}},{"value":"/ `true` if the copy was successful, `false` if the image could not","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":97776,"byte_end":97845,"line_start":406,"line_end":406,"column_start":5,"column_end":74}},{"value":"/ be copied due to size constraints.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":97850,"byte_end":97888,"line_start":407,"line_end":407,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":786},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":98627,"byte_end":98636,"line_start":430,"line_end":430,"column_start":8,"column_end":17},"name":"sub_image","qualname":"::image::GenericImage::sub_image","value":"pub fn sub_image<'a>(&'a mut Self, u32, u32, u32, u32) -> SubImage where\nSelf: 'static, <Self::Pixel as Pixel>::Subpixel: 'static, Self::Pixel: 'static","parent":{"krate":0,"index":769},"children":[],"decl_id":null,"docs":" Returns a subimage that is a view into this image.\n","sig":null,"attributes":[{"value":"/ Returns a subimage that is a view into this image.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":98565,"byte_end":98619,"line_start":429,"line_end":429,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":788},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":98916,"byte_end":98924,"line_start":439,"line_end":439,"column_start":12,"column_end":20},"name":"SubImage","qualname":"::image::SubImage","value":"SubImage {  }","parent":null,"children":[{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":793},{"krate":0,"index":794},{"krate":0,"index":795}],"decl_id":null,"docs":" A View into another image\n","sig":null,"attributes":[{"value":"/ A View into another image","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":98875,"byte_end":98904,"line_start":438,"line_end":438,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":799},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":99285,"byte_end":99288,"line_start":453,"line_end":453,"column_start":12,"column_end":15},"name":"new","qualname":"<SubImage>::new","value":"pub fn new(&mut I, u32, u32, u32, u32) -> SubImage<, I>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new subimage\n","sig":null,"attributes":[{"value":"/ Construct a new subimage","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":99245,"byte_end":99273,"line_start":452,"line_end":452,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":800},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":99600,"byte_end":99609,"line_start":464,"line_end":464,"column_start":12,"column_end":21},"name":"inner_mut","qualname":"<SubImage>::inner_mut","value":"pub fn inner_mut(&mut Self) -> &mut I","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the wrapped image.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the wrapped image.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":99535,"byte_end":99588,"line_start":463,"line_end":463,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":801},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":99727,"byte_end":99740,"line_start":469,"line_end":469,"column_start":12,"column_end":25},"name":"change_bounds","qualname":"<SubImage>::change_bounds","value":"pub fn change_bounds(&mut Self, u32, u32, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Change the coordinates of this subimage.\n","sig":null,"attributes":[{"value":"/ Change the coordinates of this subimage.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":99671,"byte_end":99715,"line_start":468,"line_end":468,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":802},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":99974,"byte_end":99982,"line_start":477,"line_end":477,"column_start":12,"column_end":20},"name":"to_image","qualname":"<SubImage>::to_image","value":"pub fn to_image(&Self)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Convert this subimage to an ImageBuffer\n","sig":null,"attributes":[{"value":"/ Convert this subimage to an ImageBuffer","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":99919,"byte_end":99962,"line_start":476,"line_end":476,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1626},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":119165,"byte_end":119175,"line_start":47,"line_end":47,"column_start":5,"column_end":15},"name":"ImageLuma8","qualname":"::dynimage::DynamicImage::ImageLuma8","value":"DynamicImage::ImageLuma8(GrayImage)","parent":{"krate":0,"index":1625},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Luma\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Luma","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":119118,"byte_end":119160,"line_start":46,"line_end":46,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1629},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":119251,"byte_end":119262,"line_start":50,"line_end":50,"column_start":5,"column_end":16},"name":"ImageLumaA8","qualname":"::dynimage::DynamicImage::ImageLumaA8","value":"DynamicImage::ImageLumaA8(GrayAlphaImage)","parent":{"krate":0,"index":1625},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Luma with alpha\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Luma with alpha","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":119193,"byte_end":119246,"line_start":49,"line_end":49,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1632},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":119331,"byte_end":119340,"line_start":53,"line_end":53,"column_start":5,"column_end":14},"name":"ImageRgb8","qualname":"::dynimage::DynamicImage::ImageRgb8","value":"DynamicImage::ImageRgb8(RgbImage)","parent":{"krate":0,"index":1625},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Rgb\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Rgb","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":119285,"byte_end":119326,"line_start":52,"line_end":52,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1635},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":119414,"byte_end":119424,"line_start":56,"line_end":56,"column_start":5,"column_end":15},"name":"ImageRgba8","qualname":"::dynimage::DynamicImage::ImageRgba8","value":"DynamicImage::ImageRgba8(RgbaImage)","parent":{"krate":0,"index":1625},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Rgb with alpha\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Rgb with alpha","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":119357,"byte_end":119409,"line_start":55,"line_end":55,"column_start":5,"column_end":57}}]},{"kind":"Enum","id":{"krate":0,"index":1625},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":119099,"byte_end":119111,"line_start":45,"line_end":45,"column_start":10,"column_end":22},"name":"DynamicImage","qualname":"::dynimage::DynamicImage","value":"pub enum DynamicImage {\n    ImageLuma8(GrayImage),\n    ImageLumaA8(GrayAlphaImage),\n    ImageRgb8(RgbImage),\n    ImageRgba8(RgbaImage),\n}","parent":null,"children":[{"krate":0,"index":1626},{"krate":0,"index":1629},{"krate":0,"index":1632},{"krate":0,"index":1635}],"decl_id":null,"docs":" A Dynamic Image\n","sig":null,"attributes":[{"value":"/ A Dynamic Image","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":119053,"byte_end":119072,"line_start":43,"line_end":43,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1001},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":121507,"byte_end":121516,"line_start":99,"line_end":99,"column_start":12,"column_end":21},"name":"new_luma8","qualname":"<DynamicImage>::new_luma8","value":"pub fn new_luma8(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of grey pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of grey pixels.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":121433,"byte_end":121495,"line_start":98,"line_end":98,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1002},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":121719,"byte_end":121730,"line_start":105,"line_end":105,"column_start":12,"column_end":23},"name":"new_luma_a8","qualname":"<DynamicImage>::new_luma_a8","value":"pub fn new_luma_a8(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of grey\n pixels with transparency.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of grey","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":121619,"byte_end":121673,"line_start":103,"line_end":103,"column_start":5,"column_end":59}},{"value":"/ pixels with transparency.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":121678,"byte_end":121707,"line_start":104,"line_end":104,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1003},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":121907,"byte_end":121915,"line_start":110,"line_end":110,"column_start":12,"column_end":20},"name":"new_rgb8","qualname":"<DynamicImage>::new_rgb8","value":"pub fn new_rgb8(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGB pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of RGB pixels.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":121834,"byte_end":121895,"line_start":109,"line_end":109,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1004},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":122091,"byte_end":122100,"line_start":115,"line_end":115,"column_start":12,"column_end":21},"name":"new_rgba8","qualname":"<DynamicImage>::new_rgba8","value":"pub fn new_rgba8(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGBA pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of RGBA pixels.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":122017,"byte_end":122079,"line_start":114,"line_end":114,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1005},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":122264,"byte_end":122270,"line_start":120,"line_end":120,"column_start":12,"column_end":18},"name":"to_rgb","qualname":"<DynamicImage>::to_rgb","value":"pub fn to_rgb(&Self) -> RgbImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an RGB image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an RGB image.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":122203,"byte_end":122252,"line_start":119,"line_end":119,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1006},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":122439,"byte_end":122446,"line_start":127,"line_end":127,"column_start":12,"column_end":19},"name":"to_rgba","qualname":"<DynamicImage>::to_rgba","value":"pub fn to_rgba(&Self) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an RGBA image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an RGBA image.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":122377,"byte_end":122427,"line_start":126,"line_end":126,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1007},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":122615,"byte_end":122622,"line_start":134,"line_end":134,"column_start":12,"column_end":19},"name":"to_luma","qualname":"<DynamicImage>::to_luma","value":"pub fn to_luma(&Self) -> GrayImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as a Luma image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as a Luma image.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":122554,"byte_end":122603,"line_start":133,"line_end":133,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1008},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":122792,"byte_end":122805,"line_start":141,"line_end":141,"column_start":12,"column_end":25},"name":"to_luma_alpha","qualname":"<DynamicImage>::to_luma_alpha","value":"pub fn to_luma_alpha(&Self) -> GrayAlphaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as a LumaA image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as a LumaA image.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":122730,"byte_end":122780,"line_start":140,"line_end":140,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1009},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":123001,"byte_end":123005,"line_start":148,"line_end":148,"column_start":12,"column_end":16},"name":"crop","qualname":"<DynamicImage>::crop","value":"pub fn crop(&mut Self, u32, u32, u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Return a cut out of this image delimited by the bounding rectangle.\n","sig":null,"attributes":[{"value":"/ Return a cut out of this image delimited by the bounding rectangle.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":122918,"byte_end":122989,"line_start":147,"line_end":147,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1010},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":123299,"byte_end":123306,"line_start":158,"line_end":158,"column_start":12,"column_end":19},"name":"as_rgb8","qualname":"<DynamicImage>::as_rgb8","value":"pub fn as_rgb8(&Self) -> Option<&RgbImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit RGB image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit RGB image","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":123244,"byte_end":123287,"line_start":157,"line_end":157,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1011},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":123549,"byte_end":123560,"line_start":166,"line_end":166,"column_start":12,"column_end":23},"name":"as_mut_rgb8","qualname":"<DynamicImage>::as_mut_rgb8","value":"pub fn as_mut_rgb8(&mut Self) -> Option<&mut RgbImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit RGB image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit RGB image","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":123486,"byte_end":123537,"line_start":165,"line_end":165,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":123812,"byte_end":123820,"line_start":174,"line_end":174,"column_start":12,"column_end":20},"name":"as_rgba8","qualname":"<DynamicImage>::as_rgba8","value":"pub fn as_rgba8(&Self) -> Option<&RgbaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit RGBA image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit RGBA image","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":123756,"byte_end":123800,"line_start":173,"line_end":173,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1013},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":124068,"byte_end":124080,"line_start":182,"line_end":182,"column_start":12,"column_end":24},"name":"as_mut_rgba8","qualname":"<DynamicImage>::as_mut_rgba8","value":"pub fn as_mut_rgba8(&mut Self) -> Option<&mut RgbaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit RGBA image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit RGBA image","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":124004,"byte_end":124056,"line_start":181,"line_end":181,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":124340,"byte_end":124348,"line_start":190,"line_end":190,"column_start":12,"column_end":20},"name":"as_luma8","qualname":"<DynamicImage>::as_luma8","value":"pub fn as_luma8(&Self) -> Option<&GrayImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit Grayscale image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit Grayscale image","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":124279,"byte_end":124328,"line_start":189,"line_end":189,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1015},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":124602,"byte_end":124614,"line_start":198,"line_end":198,"column_start":12,"column_end":24},"name":"as_mut_luma8","qualname":"<DynamicImage>::as_mut_luma8","value":"pub fn as_mut_luma8(&mut Self) -> Option<&mut GrayImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit Grayscale image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit Grayscale image","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":124533,"byte_end":124590,"line_start":197,"line_end":197,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":124896,"byte_end":124910,"line_start":206,"line_end":206,"column_start":12,"column_end":26},"name":"as_luma_alpha8","qualname":"<DynamicImage>::as_luma_alpha8","value":"pub fn as_luma_alpha8(&Self) -> Option<&GrayAlphaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit Grayscale image with an alpha channel\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit Grayscale image with an alpha channel","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":124813,"byte_end":124884,"line_start":205,"line_end":205,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1017},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":125192,"byte_end":125210,"line_start":214,"line_end":214,"column_start":12,"column_end":30},"name":"as_mut_luma_alpha8","qualname":"<DynamicImage>::as_mut_luma_alpha8","value":"pub fn as_mut_luma_alpha8(&mut Self) -> Option<&mut GrayAlphaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit Grayscale image with an alpha channel\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit Grayscale image with an alpha channel","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":125101,"byte_end":125180,"line_start":213,"line_end":213,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1018},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":125476,"byte_end":125486,"line_start":222,"line_end":222,"column_start":12,"column_end":22},"name":"raw_pixels","qualname":"<DynamicImage>::raw_pixels","value":"pub fn raw_pixels(&Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Return this image's pixels as a byte vector.\n","sig":null,"attributes":[{"value":"/ Return this image's pixels as a byte vector.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":125416,"byte_end":125464,"line_start":221,"line_end":221,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1019},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":125594,"byte_end":125599,"line_start":227,"line_end":227,"column_start":12,"column_end":17},"name":"color","qualname":"<DynamicImage>::color","value":"pub fn color(&Self) -> color::ColorType","parent":null,"children":[],"decl_id":null,"docs":" Return this image's color type.\n","sig":null,"attributes":[{"value":"/ Return this image's color type.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":125547,"byte_end":125582,"line_start":226,"line_end":226,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1020},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":126009,"byte_end":126018,"line_start":237,"line_end":237,"column_start":12,"column_end":21},"name":"grayscale","qualname":"<DynamicImage>::grayscale","value":"pub fn grayscale(&Self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Return a grayscale version of this image.\n","sig":null,"attributes":[{"value":"/ Return a grayscale version of this image.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":125952,"byte_end":125997,"line_start":236,"line_end":236,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1021},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":126548,"byte_end":126554,"line_start":248,"line_end":248,"column_start":12,"column_end":18},"name":"invert","qualname":"<DynamicImage>::invert","value":"pub fn invert(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Invert the colors of this image.\n This method operates inplace.\n","sig":null,"attributes":[{"value":"/ Invert the colors of this image.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":126462,"byte_end":126498,"line_start":246,"line_end":246,"column_start":5,"column_end":41}},{"value":"/ This method operates inplace.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":126503,"byte_end":126536,"line_start":247,"line_end":247,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1022},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":126918,"byte_end":126924,"line_start":256,"line_end":256,"column_start":12,"column_end":18},"name":"resize","qualname":"<DynamicImage>::resize","value":"pub fn resize(&Self, u32, u32, imageops::FilterType) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Resize this image using the specified filter algorithm.\n Returns a new image. The image's aspect ratio is preserved.\n The image is scaled to the maximum possible size that fits\n within the bounds specified by ```nwidth``` and ```nheight```.\n","sig":null,"attributes":[{"value":"/ Resize this image using the specified filter algorithm.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":126641,"byte_end":126700,"line_start":252,"line_end":252,"column_start":5,"column_end":64}},{"value":"/ Returns a new image. The image's aspect ratio is preserved.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":126705,"byte_end":126768,"line_start":253,"line_end":253,"column_start":5,"column_end":68}},{"value":"/ The image is scaled to the maximum possible size that fits","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":126773,"byte_end":126835,"line_start":254,"line_end":254,"column_start":5,"column_end":67}},{"value":"/ within the bounds specified by ```nwidth``` and ```nheight```.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":126840,"byte_end":126906,"line_start":255,"line_end":255,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1023},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":127742,"byte_end":127754,"line_start":281,"line_end":281,"column_start":12,"column_end":24},"name":"resize_exact","qualname":"<DynamicImage>::resize_exact","value":"pub fn resize_exact(&Self, u32, u32, imageops::FilterType) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Resize this image using the specified filter algorithm.\n Returns a new image. Does not preserve aspect ratio.\n ```nwidth``` and ```nheight``` are the new image's dimensions\n","sig":null,"attributes":[{"value":"/ Resize this image using the specified filter algorithm.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":127540,"byte_end":127599,"line_start":278,"line_end":278,"column_start":5,"column_end":64}},{"value":"/ Returns a new image. Does not preserve aspect ratio.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":127604,"byte_end":127660,"line_start":279,"line_end":279,"column_start":5,"column_end":61}},{"value":"/ ```nwidth``` and ```nheight``` are the new image's dimensions","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":127665,"byte_end":127730,"line_start":280,"line_end":280,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1024},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":128116,"byte_end":128120,"line_start":291,"line_end":291,"column_start":12,"column_end":16},"name":"blur","qualname":"<DynamicImage>::blur","value":"pub fn blur(&Self, f32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Performs a Gaussian blur on this image.\n ```sigma``` is a measure of how much to blur by.\n","sig":null,"attributes":[{"value":"/ Performs a Gaussian blur on this image.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":128004,"byte_end":128047,"line_start":289,"line_end":289,"column_start":5,"column_end":48}},{"value":"/ ```sigma``` is a measure of how much to blur by.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":128052,"byte_end":128104,"line_start":290,"line_end":290,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1025},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":128496,"byte_end":128505,"line_start":300,"line_end":300,"column_start":12,"column_end":21},"name":"unsharpen","qualname":"<DynamicImage>::unsharpen","value":"pub fn unsharpen(&Self, f32, i32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Performs an unsharpen mask on this image.\n ```sigma``` is the amount to blur the image by.\n ```threshold``` is a control of how much to sharpen.","sig":null,"attributes":[{"value":"/ Performs an unsharpen mask on this image.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":128232,"byte_end":128277,"line_start":295,"line_end":295,"column_start":5,"column_end":50}},{"value":"/ ```sigma``` is the amount to blur the image by.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":128282,"byte_end":128333,"line_start":296,"line_end":296,"column_start":5,"column_end":56}},{"value":"/ ```threshold``` is a control of how much to sharpen.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":128338,"byte_end":128394,"line_start":297,"line_end":297,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":128399,"byte_end":128402,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ See https://en.wikipedia.org/wiki/Unsharp_masking#Digital_unsharp_masking","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":128407,"byte_end":128484,"line_start":299,"line_end":299,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1026},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":128714,"byte_end":128723,"line_start":305,"line_end":305,"column_start":12,"column_end":21},"name":"filter3x3","qualname":"<DynamicImage>::filter3x3","value":"pub fn filter3x3(&Self, &[f32]) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Filters this image with the specified 3x3 kernel.\n","sig":null,"attributes":[{"value":"/ Filters this image with the specified 3x3 kernel.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":128649,"byte_end":128702,"line_start":304,"line_end":304,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1027},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":129133,"byte_end":129148,"line_start":316,"line_end":316,"column_start":12,"column_end":27},"name":"adjust_contrast","qualname":"<DynamicImage>::adjust_contrast","value":"pub fn adjust_contrast(&Self, f32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Adjust the contrast of this image.\n ```contrast``` is the amount to adjust the contrast by.\n Negative values decrease the contrast and positive values increase the contrast.\n","sig":null,"attributes":[{"value":"/ Adjust the contrast of this image.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":128930,"byte_end":128968,"line_start":313,"line_end":313,"column_start":5,"column_end":43}},{"value":"/ ```contrast``` is the amount to adjust the contrast by.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":128973,"byte_end":129032,"line_start":314,"line_end":314,"column_start":5,"column_end":64}},{"value":"/ Negative values decrease the contrast and positive values increase the contrast.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":129037,"byte_end":129121,"line_start":315,"line_end":315,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1028},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":129448,"byte_end":129456,"line_start":323,"line_end":323,"column_start":12,"column_end":20},"name":"brighten","qualname":"<DynamicImage>::brighten","value":"pub fn brighten(&Self, i32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Brighten the pixels of this image.\n ```value``` is the amount to brighten each pixel by.\n Negative values decrease the brightness and positive values increase it.\n","sig":null,"attributes":[{"value":"/ Brighten the pixels of this image.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":129256,"byte_end":129294,"line_start":320,"line_end":320,"column_start":5,"column_end":43}},{"value":"/ ```value``` is the amount to brighten each pixel by.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":129299,"byte_end":129355,"line_start":321,"line_end":321,"column_start":5,"column_end":61}},{"value":"/ Negative values decrease the brightness and positive values increase it.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":129360,"byte_end":129436,"line_start":322,"line_end":322,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1029},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":129804,"byte_end":129812,"line_start":331,"line_end":331,"column_start":12,"column_end":20},"name":"hueroate","qualname":"<DynamicImage>::hueroate","value":"pub fn hueroate(&Self, i32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Hue rotate the supplied image.\n `value` is the degrees to rotate each pixel by.\n 0 and 360 do nothing, the rest rotates by the given degree value.\n just like the css webkit filter hue-rotate(180)\n","sig":null,"attributes":[{"value":"/ Hue rotate the supplied image.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":129572,"byte_end":129606,"line_start":327,"line_end":327,"column_start":5,"column_end":39}},{"value":"/ `value` is the degrees to rotate each pixel by.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":129611,"byte_end":129662,"line_start":328,"line_end":328,"column_start":5,"column_end":56}},{"value":"/ 0 and 360 do nothing, the rest rotates by the given degree value.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":129667,"byte_end":129736,"line_start":329,"line_end":329,"column_start":5,"column_end":74}},{"value":"/ just like the css webkit filter hue-rotate(180)","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":129741,"byte_end":129792,"line_start":330,"line_end":330,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1030},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":129971,"byte_end":129976,"line_start":336,"line_end":336,"column_start":12,"column_end":17},"name":"flipv","qualname":"<DynamicImage>::flipv","value":"pub fn flipv(&Self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Flip this image vertically\n","sig":null,"attributes":[{"value":"/ Flip this image vertically","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":129929,"byte_end":129959,"line_start":335,"line_end":335,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1031},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":130122,"byte_end":130127,"line_start":341,"line_end":341,"column_start":12,"column_end":17},"name":"fliph","qualname":"<DynamicImage>::fliph","value":"pub fn fliph(&Self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Flip this image horizontally\n","sig":null,"attributes":[{"value":"/ Flip this image horizontally","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":130078,"byte_end":130110,"line_start":340,"line_end":340,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1032},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":130286,"byte_end":130294,"line_start":346,"line_end":346,"column_start":12,"column_end":20},"name":"rotate90","qualname":"<DynamicImage>::rotate90","value":"pub fn rotate90(&Self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Rotate this image 90 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate this image 90 degrees clockwise.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":130231,"byte_end":130274,"line_start":345,"line_end":345,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1033},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":130447,"byte_end":130456,"line_start":351,"line_end":351,"column_start":12,"column_end":21},"name":"rotate180","qualname":"<DynamicImage>::rotate180","value":"pub fn rotate180(&Self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Rotate this image 180 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate this image 180 degrees clockwise.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":130391,"byte_end":130435,"line_start":350,"line_end":350,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1034},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":130610,"byte_end":130619,"line_start":356,"line_end":356,"column_start":12,"column_end":21},"name":"rotate270","qualname":"<DynamicImage>::rotate270","value":"pub fn rotate270(&Self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Rotate this image 270 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate this image 270 degrees clockwise.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":130554,"byte_end":130598,"line_start":355,"line_end":355,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1035},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":130774,"byte_end":130778,"line_start":361,"line_end":361,"column_start":12,"column_end":16},"name":"save","qualname":"<DynamicImage>::save","value":"pub fn save<W: Write>(&Self, &mut W, ImageFormat) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encode this image and write it to ```w```\n","sig":null,"attributes":[{"value":"/ Encode this image and write it to ```w```","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":130717,"byte_end":130762,"line_start":360,"line_end":360,"column_start":5,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":1062},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":137113,"byte_end":137117,"line_start":536,"line_end":536,"column_start":8,"column_end":12},"name":"open","qualname":"::dynimage::open","value":"pub fn open<P>(P) -> ImageResult<DynamicImage> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Open the image located at the path specified.\n The image's format is determined from the path's file extension.\n","sig":null,"attributes":[{"value":"/ Open the image located at the path specified.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":136987,"byte_end":137036,"line_start":534,"line_end":534,"column_start":1,"column_end":50}},{"value":"/ The image's format is determined from the path's file extension.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":137037,"byte_end":137105,"line_start":535,"line_end":535,"column_start":1,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":1067},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":138639,"byte_end":138650,"line_start":579,"line_end":579,"column_start":8,"column_end":19},"name":"save_buffer","qualname":"::dynimage::save_buffer","value":"pub fn save_buffer<P>(P, &[u8], u32, u32, color::ColorType) -> io::Result<()>\nwhere P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Saves the supplied buffer to a file at the path specified.","sig":null,"attributes":[{"value":"/ Saves the supplied buffer to a file at the path specified.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":138285,"byte_end":138347,"line_start":572,"line_end":572,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":138348,"byte_end":138351,"line_start":573,"line_end":573,"column_start":1,"column_end":4}},{"value":"/ The image format is derived from the file extension. The buffer is assumed to have","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":138352,"byte_end":138438,"line_start":574,"line_end":574,"column_start":1,"column_end":87}},{"value":"/ the correct format according to the specified color type.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":138439,"byte_end":138500,"line_start":575,"line_end":575,"column_start":1,"column_end":62}},{"value":"/ This will lead to corrupted files if the buffer contains malformed data. Currently only","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":138502,"byte_end":138593,"line_start":577,"line_end":577,"column_start":1,"column_end":92}},{"value":"/ jpeg and png files are supported.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":138594,"byte_end":138631,"line_start":578,"line_end":578,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":1072},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":139969,"byte_end":139973,"line_start":609,"line_end":609,"column_start":8,"column_end":12},"name":"load","qualname":"::dynimage::load","value":"pub fn load<R: BufRead + Seek>(R, ImageFormat) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Create a new image from a Reader\n","sig":null,"attributes":[{"value":"/ Create a new image from a Reader","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":139925,"byte_end":139961,"line_start":608,"line_end":608,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":1076},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":141819,"byte_end":141835,"line_start":650,"line_end":650,"column_start":8,"column_end":24},"name":"load_from_memory","qualname":"::dynimage::load_from_memory","value":"pub fn load_from_memory(&[u8]) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Create a new image from a byte slice","sig":null,"attributes":[{"value":"/ Create a new image from a byte slice","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":141672,"byte_end":141712,"line_start":646,"line_end":646,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":141713,"byte_end":141716,"line_start":647,"line_end":647,"column_start":1,"column_end":4}},{"value":"/ Makes an educated guess about the image format.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":141717,"byte_end":141768,"line_start":648,"line_end":648,"column_start":1,"column_end":52}},{"value":"/ TGA is not supported by this function.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":141769,"byte_end":141811,"line_start":649,"line_end":649,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":1077},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":142021,"byte_end":142049,"line_start":657,"line_end":657,"column_start":8,"column_end":36},"name":"load_from_memory_with_format","qualname":"::dynimage::load_from_memory_with_format","value":"pub fn load_from_memory_with_format(&[u8], ImageFormat)\n-> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Create a new image from a byte slice\n","sig":null,"attributes":[{"value":"/ Create a new image from a byte slice","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":141955,"byte_end":141995,"line_start":655,"line_end":655,"column_start":1,"column_end":41}},{"value":"inline(always)","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":141996,"byte_end":142013,"line_start":656,"line_end":656,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":1078},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":142432,"byte_end":142444,"line_start":667,"line_end":667,"column_start":8,"column_end":20},"name":"guess_format","qualname":"::dynimage::guess_format","value":"pub fn guess_format(&[u8]) -> ImageResult<ImageFormat>","parent":null,"children":[],"decl_id":null,"docs":" Guess image format from memory block","sig":null,"attributes":[{"value":"/ Guess image format from memory block","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":142171,"byte_end":142211,"line_start":662,"line_end":662,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":142212,"byte_end":142215,"line_start":663,"line_end":663,"column_start":1,"column_end":4}},{"value":"/ Makes an educated guess about the image format based on the Magic Bytes at the beginning.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":142216,"byte_end":142309,"line_start":664,"line_end":664,"column_start":1,"column_end":94}},{"value":"/ TGA is not supported by this function.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":142310,"byte_end":142352,"line_start":665,"line_end":665,"column_start":1,"column_end":43}},{"value":"/ This is not to be trusted on the validity of the whole memory block","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":142353,"byte_end":142424,"line_start":666,"line_end":666,"column_start":1,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1641},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":143478,"byte_end":143482,"line_start":12,"line_end":12,"column_start":5,"column_end":9},"name":"Gray","qualname":"::color::ColorType::Gray","value":"ColorType::Gray(u8)","parent":{"krate":0,"index":1640},"children":[],"decl_id":null,"docs":" Pixel is grayscale\n","sig":null,"attributes":[{"value":"/ Pixel is grayscale","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":143451,"byte_end":143473,"line_start":11,"line_end":11,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1644},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":143536,"byte_end":143539,"line_start":15,"line_end":15,"column_start":5,"column_end":8},"name":"RGB","qualname":"::color::ColorType::RGB","value":"ColorType::RGB(u8)","parent":{"krate":0,"index":1640},"children":[],"decl_id":null,"docs":" Pixel contains R, G and B channels\n","sig":null,"attributes":[{"value":"/ Pixel contains R, G and B channels","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":143493,"byte_end":143531,"line_start":14,"line_end":14,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1647},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":143597,"byte_end":143604,"line_start":18,"line_end":18,"column_start":5,"column_end":12},"name":"Palette","qualname":"::color::ColorType::Palette","value":"ColorType::Palette(u8)","parent":{"krate":0,"index":1640},"children":[],"decl_id":null,"docs":" Pixel is an index into a color palette\n","sig":null,"attributes":[{"value":"/ Pixel is an index into a color palette","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":143550,"byte_end":143592,"line_start":17,"line_end":17,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1650},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":143664,"byte_end":143669,"line_start":21,"line_end":21,"column_start":5,"column_end":10},"name":"GrayA","qualname":"::color::ColorType::GrayA","value":"ColorType::GrayA(u8)","parent":{"krate":0,"index":1640},"children":[],"decl_id":null,"docs":" Pixel is grayscale with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is grayscale with an alpha channel","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":143615,"byte_end":143659,"line_start":20,"line_end":20,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1653},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":143723,"byte_end":143727,"line_start":24,"line_end":24,"column_start":5,"column_end":9},"name":"RGBA","qualname":"::color::ColorType::RGBA","value":"ColorType::RGBA(u8)","parent":{"krate":0,"index":1640},"children":[],"decl_id":null,"docs":" Pixel is RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is RGB with an alpha channel","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":143680,"byte_end":143718,"line_start":23,"line_end":23,"column_start":5,"column_end":43}}]},{"kind":"Enum","id":{"krate":0,"index":1640},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":143435,"byte_end":143444,"line_start":10,"line_end":10,"column_start":10,"column_end":19},"name":"ColorType","qualname":"::color::ColorType","value":"pub enum ColorType { Gray(u8), RGB(u8), Palette(u8), GrayA(u8), RGBA(u8), }","parent":null,"children":[{"krate":0,"index":1641},{"krate":0,"index":1644},{"krate":0,"index":1647},{"krate":0,"index":1650},{"krate":0,"index":1653}],"decl_id":null,"docs":" An enumeration over supported color types and their bit depths\n","sig":null,"attributes":[{"value":"/ An enumeration over supported color types and their bit depths","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":143314,"byte_end":143380,"line_start":8,"line_end":8,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":1856},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":148581,"byte_end":148584,"line_start":212,"line_end":212,"column_start":5,"column_end":8},"name":"Rgb","qualname":"::color::Rgb","value":"Rgb { data }","parent":null,"children":[{"krate":0,"index":1858}],"decl_id":null,"docs":"RGB colors\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":144732,"byte_end":144742,"line_start":64,"line_end":64,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":144743,"byte_end":144765,"line_start":65,"line_end":65,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":1668},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":148581,"byte_end":148584,"line_start":212,"line_end":212,"column_start":5,"column_end":8},"name":"Rgb","qualname":"::color::Rgb","value":"pub fn Rgb<T: Primitive>([T; ]) -> Rgb<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case, missing_docs)","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":144827,"byte_end":144865,"line_start":67,"line_end":67,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1884},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":148631,"byte_end":148635,"line_start":213,"line_end":213,"column_start":5,"column_end":9},"name":"Luma","qualname":"::color::Luma","value":"Luma { data }","parent":null,"children":[{"krate":0,"index":1886}],"decl_id":null,"docs":"Grayscale colors\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":144732,"byte_end":144742,"line_start":64,"line_end":64,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":144743,"byte_end":144765,"line_start":65,"line_end":65,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":1715},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":148631,"byte_end":148635,"line_start":213,"line_end":213,"column_start":5,"column_end":9},"name":"Luma","qualname":"::color::Luma","value":"pub fn Luma<T: Primitive>([T; ]) -> Luma<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case, missing_docs)","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":144827,"byte_end":144865,"line_start":67,"line_end":67,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1912},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":148687,"byte_end":148691,"line_start":214,"line_end":214,"column_start":5,"column_end":9},"name":"Rgba","qualname":"::color::Rgba","value":"Rgba { data }","parent":null,"children":[{"krate":0,"index":1914}],"decl_id":null,"docs":"RGB colors + alpha channel\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":144732,"byte_end":144742,"line_start":64,"line_end":64,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":144743,"byte_end":144765,"line_start":65,"line_end":65,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":1762},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":148687,"byte_end":148691,"line_start":214,"line_end":214,"column_start":5,"column_end":9},"name":"Rgba","qualname":"::color::Rgba","value":"pub fn Rgba<T: Primitive>([T; ]) -> Rgba<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case, missing_docs)","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":144827,"byte_end":144865,"line_start":67,"line_end":67,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1940},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":148756,"byte_end":148761,"line_start":215,"line_end":215,"column_start":5,"column_end":10},"name":"LumaA","qualname":"::color::LumaA","value":"LumaA { data }","parent":null,"children":[{"krate":0,"index":1942}],"decl_id":null,"docs":"Grayscale colors + alpha channel\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":144732,"byte_end":144742,"line_start":64,"line_end":64,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":144743,"byte_end":144765,"line_start":65,"line_end":65,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":1809},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":148756,"byte_end":148761,"line_start":215,"line_end":215,"column_start":5,"column_end":10},"name":"LumaA","qualname":"::color::LumaA","value":"pub fn LumaA<T: Primitive>([T; ]) -> LumaA<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case, missing_docs)","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":144827,"byte_end":144865,"line_start":67,"line_end":67,"column_start":1,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":1106},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":148903,"byte_end":148912,"line_start":220,"line_end":220,"column_start":11,"column_end":20},"name":"FromColor","qualname":"::color::FromColor","value":"FromColor<Other>","parent":null,"children":[{"krate":0,"index":1108}],"decl_id":null,"docs":" Provides color conversions for the different pixel types.\n","sig":null,"attributes":[{"value":"/ Provides color conversions for the different pixel types.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":148831,"byte_end":148892,"line_start":219,"line_end":219,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1108},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":149002,"byte_end":149012,"line_start":222,"line_end":222,"column_start":8,"column_end":18},"name":"from_color","qualname":"::color::FromColor::from_color","value":"pub fn from_color(&mut Self, &Other)","parent":{"krate":0,"index":1106},"children":[],"decl_id":null,"docs":" Changes `self` to represent `Other` in the color space of `Self`\n","sig":null,"attributes":[{"value":"/ Changes `self` to represent `Other` in the color space of `Self`","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":148926,"byte_end":148994,"line_start":221,"line_end":221,"column_start":5,"column_end":73}}]},{"kind":"Trait","id":{"krate":0,"index":1240},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":157782,"byte_end":157787,"line_start":17,"line_end":17,"column_start":11,"column_end":16},"name":"Pixel","qualname":"::buffer::Pixel","value":"Pixel: Copy + Clone","parent":null,"children":[{"krate":0,"index":1241},{"krate":0,"index":1242},{"krate":0,"index":1243},{"krate":0,"index":1244},{"krate":0,"index":1245},{"krate":0,"index":1246},{"krate":0,"index":1247},{"krate":0,"index":1248},{"krate":0,"index":1249},{"krate":0,"index":1251},{"krate":0,"index":1253},{"krate":0,"index":1254},{"krate":0,"index":1255},{"krate":0,"index":1256},{"krate":0,"index":1257},{"krate":0,"index":1259},{"krate":0,"index":1261},{"krate":0,"index":1264},{"krate":0,"index":1267},{"krate":0,"index":1269},{"krate":0,"index":1271},{"krate":0,"index":1272}],"decl_id":null,"docs":" A generalized pixel.","sig":null,"attributes":[{"value":"/ A generalized pixel.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":157657,"byte_end":157681,"line_start":14,"line_end":14,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":157682,"byte_end":157685,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ A pixel object is usually not used standalone but as a view into an image buffer.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":157686,"byte_end":157771,"line_start":16,"line_end":16,"column_start":1,"column_end":86}}]},{"kind":"Type","id":{"krate":0,"index":1241},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":157851,"byte_end":157859,"line_start":19,"line_end":19,"column_start":10,"column_end":18},"name":"Subpixel","qualname":"::buffer::Pixel::Subpixel","value":"type Subpixel: Primitive;","parent":{"krate":0,"index":1240},"children":[],"decl_id":null,"docs":" The underlying subpixel type.\n","sig":null,"attributes":[{"value":"/ The underlying subpixel type.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":157808,"byte_end":157841,"line_start":18,"line_end":18,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1242},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":157939,"byte_end":157952,"line_start":22,"line_end":22,"column_start":8,"column_end":21},"name":"channel_count","qualname":"::buffer::Pixel::channel_count","value":"pub fn channel_count() -> u8","parent":{"krate":0,"index":1240},"children":[],"decl_id":null,"docs":" Returns the number of channels of this pixel type.\n","sig":null,"attributes":[{"value":"/ Returns the number of channels of this pixel type.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":157877,"byte_end":157931,"line_start":21,"line_end":21,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1243},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":158013,"byte_end":158021,"line_start":25,"line_end":25,"column_start":8,"column_end":16},"name":"channels","qualname":"::buffer::Pixel::channels","value":"pub fn channels(&Self) -> &[Self::Subpixel]","parent":{"krate":0,"index":1240},"children":[],"decl_id":null,"docs":" Returns the components as a slice.\n","sig":null,"attributes":[{"value":"/ Returns the components as a slice.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":157967,"byte_end":158005,"line_start":24,"line_end":24,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1244},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":158109,"byte_end":158121,"line_start":28,"line_end":28,"column_start":8,"column_end":20},"name":"channels_mut","qualname":"::buffer::Pixel::channels_mut","value":"pub fn channels_mut(&mut Self) -> &mut [Self::Subpixel]","parent":{"krate":0,"index":1240},"children":[],"decl_id":null,"docs":" Returns the components as a mutable slice\n","sig":null,"attributes":[{"value":"/ Returns the components as a mutable slice","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":158056,"byte_end":158101,"line_start":27,"line_end":27,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1245},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":158293,"byte_end":158304,"line_start":32,"line_end":32,"column_start":8,"column_end":19},"name":"color_model","qualname":"::buffer::Pixel::color_model","value":"pub fn color_model() -> &'static str","parent":{"krate":0,"index":1240},"children":[],"decl_id":null,"docs":" Returns a string that can help to interprete the meaning each channel\n See [gimp babl](http://gegl.org/babl/).\n","sig":null,"attributes":[{"value":"/ Returns a string that can help to interprete the meaning each channel","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":158164,"byte_end":158237,"line_start":30,"line_end":30,"column_start":5,"column_end":78}},{"value":"/ See [gimp babl](http://gegl.org/babl/).","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":158242,"byte_end":158285,"line_start":31,"line_end":31,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1246},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":158384,"byte_end":158394,"line_start":35,"line_end":35,"column_start":8,"column_end":18},"name":"color_type","qualname":"::buffer::Pixel::color_type","value":"pub fn color_type() -> ColorType","parent":{"krate":0,"index":1240},"children":[],"decl_id":null,"docs":" Returns the ColorType for this pixel format\n","sig":null,"attributes":[{"value":"/ Returns the ColorType for this pixel format","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":158329,"byte_end":158376,"line_start":34,"line_end":34,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1247},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":158600,"byte_end":158609,"line_start":41,"line_end":41,"column_start":8,"column_end":17},"name":"channels4","qualname":"::buffer::Pixel::channels4","value":"pub fn channels4(&Self)\n-> (Self::Subpixel, Self::Subpixel, Self::Subpixel, Self::Subpixel)","parent":{"krate":0,"index":1240},"children":[],"decl_id":null,"docs":" Returns the channels of this pixel as a 4 tuple. If the pixel\n has less than 4 channels the remainder is filled with the maximum value","sig":null,"attributes":[{"value":"/ Returns the channels of this pixel as a 4 tuple. If the pixel","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":158416,"byte_end":158481,"line_start":37,"line_end":37,"column_start":5,"column_end":70}},{"value":"/ has less than 4 channels the remainder is filled with the maximum value","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":158486,"byte_end":158561,"line_start":38,"line_end":38,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":158566,"byte_end":158569,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ TODO deprecate","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":158574,"byte_end":158592,"line_start":40,"line_end":40,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1248},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":158858,"byte_end":158871,"line_start":47,"line_end":47,"column_start":8,"column_end":21},"name":"from_channels","qualname":"::buffer::Pixel::from_channels","value":"pub fn from_channels(Self::Subpixel, Self::Subpixel, Self::Subpixel,\n                     Self::Subpixel) -> Self","parent":{"krate":0,"index":1240},"children":[],"decl_id":null,"docs":" Construct a pixel from the 4 channels a, b, c and d.\n If the pixel does not contain 4 channels the extra are ignored.","sig":null,"attributes":[{"value":"/ Construct a pixel from the 4 channels a, b, c and d.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":158691,"byte_end":158747,"line_start":43,"line_end":43,"column_start":5,"column_end":61}},{"value":"/ If the pixel does not contain 4 channels the extra are ignored.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":158752,"byte_end":158819,"line_start":44,"line_end":44,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":158824,"byte_end":158827,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ TODO deprecate","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":158832,"byte_end":158850,"line_start":46,"line_end":46,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1249},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":159186,"byte_end":159196,"line_start":53,"line_end":53,"column_start":8,"column_end":18},"name":"from_slice","qualname":"::buffer::Pixel::from_slice","value":"pub fn from_slice<'a>(&'a [Self::Subpixel]) -> &'a Self","parent":{"krate":0,"index":1240},"children":[],"decl_id":null,"docs":" Returns a view into a slice.","sig":null,"attributes":[{"value":"/ Returns a view into a slice.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":158962,"byte_end":158994,"line_start":49,"line_end":49,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":158999,"byte_end":159002,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ Note: The slice length is not checked on creation. Thus the caller has to ensure","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":159007,"byte_end":159091,"line_start":51,"line_end":51,"column_start":5,"column_end":89}},{"value":"/ that the slice is long enough to precent panics if the pixel is used later on.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":159096,"byte_end":159178,"line_start":52,"line_end":52,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":1251},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":159486,"byte_end":159500,"line_start":59,"line_end":59,"column_start":8,"column_end":22},"name":"from_slice_mut","qualname":"::buffer::Pixel::from_slice_mut","value":"pub fn from_slice_mut<'a>(&'a mut [Self::Subpixel]) -> &'a mut Self","parent":{"krate":0,"index":1240},"children":[],"decl_id":null,"docs":" Returns mutable view into a mutable slice.","sig":null,"attributes":[{"value":"/ Returns mutable view into a mutable slice.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":159248,"byte_end":159294,"line_start":55,"line_end":55,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":159299,"byte_end":159302,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ Note: The slice length is not checked on creation. Thus the caller has to ensure","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":159307,"byte_end":159391,"line_start":57,"line_end":57,"column_start":5,"column_end":89}},{"value":"/ that the slice is long enough to precent panics if the pixel is used later on.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":159396,"byte_end":159478,"line_start":58,"line_end":58,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":1253},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":159597,"byte_end":159603,"line_start":62,"line_end":62,"column_start":8,"column_end":14},"name":"to_rgb","qualname":"::buffer::Pixel::to_rgb","value":"pub fn to_rgb(&Self) -> Rgb<Self::Subpixel>","parent":{"krate":0,"index":1240},"children":[],"decl_id":null,"docs":" Convert this pixel to RGB\n","sig":null,"attributes":[{"value":"/ Convert this pixel to RGB","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":159560,"byte_end":159589,"line_start":61,"line_end":61,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1254},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":159699,"byte_end":159706,"line_start":65,"line_end":65,"column_start":8,"column_end":15},"name":"to_rgba","qualname":"::buffer::Pixel::to_rgba","value":"pub fn to_rgba(&Self) -> Rgba<Self::Subpixel>","parent":{"krate":0,"index":1240},"children":[],"decl_id":null,"docs":" Convert this pixel to RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Convert this pixel to RGB with an alpha channel","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":159640,"byte_end":159691,"line_start":64,"line_end":64,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1255},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":159782,"byte_end":159789,"line_start":68,"line_end":68,"column_start":8,"column_end":15},"name":"to_luma","qualname":"::buffer::Pixel::to_luma","value":"pub fn to_luma(&Self) -> Luma<Self::Subpixel>","parent":{"krate":0,"index":1240},"children":[],"decl_id":null,"docs":" Convert this pixel to luma\n","sig":null,"attributes":[{"value":"/ Convert this pixel to luma","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":159744,"byte_end":159774,"line_start":67,"line_end":67,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1256},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":159887,"byte_end":159900,"line_start":71,"line_end":71,"column_start":8,"column_end":21},"name":"to_luma_alpha","qualname":"::buffer::Pixel::to_luma_alpha","value":"pub fn to_luma_alpha(&Self) -> LumaA<Self::Subpixel>","parent":{"krate":0,"index":1240},"children":[],"decl_id":null,"docs":" Convert this pixel to luma with an alpha channel\n","sig":null,"attributes":[{"value":"/ Convert this pixel to luma with an alpha channel","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":159827,"byte_end":159879,"line_start":70,"line_end":70,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1257},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":160008,"byte_end":160011,"line_start":74,"line_end":74,"column_start":8,"column_end":11},"name":"map","qualname":"::buffer::Pixel::map","value":"pub fn map<F>(&Self, F) -> Self where F: Fn(Self::Subpixel) -> Self::Subpixel","parent":{"krate":0,"index":1240},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel of this pixel.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":159939,"byte_end":160000,"line_start":73,"line_end":73,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1259},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":160157,"byte_end":160162,"line_start":77,"line_end":77,"column_start":8,"column_end":13},"name":"apply","qualname":"::buffer::Pixel::apply","value":"pub fn apply<F>(&mut Self, F) where F: Fn(Self::Subpixel) -> Self::Subpixel","parent":{"krate":0,"index":1240},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel of this pixel.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":160088,"byte_end":160149,"line_start":76,"line_end":76,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1261},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":160372,"byte_end":160386,"line_start":81,"line_end":81,"column_start":8,"column_end":22},"name":"map_with_alpha","qualname":"::buffer::Pixel::map_with_alpha","value":"pub fn map_with_alpha<F, G>(&Self, F, G) -> Self where F: Fn(Self::Subpixel)\n-> Self::Subpixel, G: Fn(Self::Subpixel) -> Self::Subpixel","parent":{"krate":0,"index":1240},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel except the alpha channel.\n Apply the function ```g``` to the alpha channel.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel except the alpha channel.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":160235,"byte_end":160307,"line_start":79,"line_end":79,"column_start":5,"column_end":77}},{"value":"/ Apply the function ```g``` to the alpha channel.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":160312,"byte_end":160364,"line_start":80,"line_end":80,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1264},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":160674,"byte_end":160690,"line_start":86,"line_end":86,"column_start":8,"column_end":24},"name":"apply_with_alpha","qualname":"::buffer::Pixel::apply_with_alpha","value":"pub fn apply_with_alpha<F, G>(&mut Self, F, G) where F: Fn(Self::Subpixel) ->\nSelf::Subpixel, G: Fn(Self::Subpixel) -> Self::Subpixel","parent":{"krate":0,"index":1240},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel except the alpha channel.\n Apply the function ```g``` to the alpha channel. Works in-place.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel except the alpha channel.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":160521,"byte_end":160593,"line_start":84,"line_end":84,"column_start":5,"column_end":77}},{"value":"/ Apply the function ```g``` to the alpha channel. Works in-place.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":160598,"byte_end":160666,"line_start":85,"line_end":85,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1267},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":160923,"byte_end":160927,"line_start":91,"line_end":91,"column_start":8,"column_end":12},"name":"map2","qualname":"::buffer::Pixel::map2","value":"pub fn map2<F>(&Self, &Self, F) -> Self where\nF: Fn(Self::Subpixel, Self::Subpixel) -> Self::Subpixel","parent":{"krate":0,"index":1240},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel and\n ```other``` pairwise.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel of this pixel and","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":160821,"byte_end":160885,"line_start":89,"line_end":89,"column_start":5,"column_end":69}},{"value":"/ ```other``` pairwise.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":160890,"byte_end":160915,"line_start":90,"line_end":90,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1269},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":161160,"byte_end":161166,"line_start":96,"line_end":96,"column_start":8,"column_end":14},"name":"apply2","qualname":"::buffer::Pixel::apply2","value":"pub fn apply2<F>(&mut Self, &Self, F) where\nF: Fn(Self::Subpixel, Self::Subpixel) -> Self::Subpixel","parent":{"krate":0,"index":1240},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel and\n ```other``` pairwise. Works in-place.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel of this pixel and","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":161042,"byte_end":161106,"line_start":94,"line_end":94,"column_start":5,"column_end":69}},{"value":"/ ```other``` pairwise. Works in-place.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":161111,"byte_end":161152,"line_start":95,"line_end":95,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1271},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":161306,"byte_end":161312,"line_start":100,"line_end":100,"column_start":8,"column_end":14},"name":"invert","qualname":"::buffer::Pixel::invert","value":"pub fn invert(&mut Self)","parent":{"krate":0,"index":1240},"children":[],"decl_id":null,"docs":" Invert this pixel\n","sig":null,"attributes":[{"value":"/ Invert this pixel","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":161277,"byte_end":161298,"line_start":99,"line_end":99,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1272},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":161423,"byte_end":161428,"line_start":103,"line_end":103,"column_start":8,"column_end":13},"name":"blend","qualname":"::buffer::Pixel::blend","value":"pub fn blend(&mut Self, &Self)","parent":{"krate":0,"index":1240},"children":[],"decl_id":null,"docs":" Blend the color of a given pixel into ourself, taking into account alpha channels\n","sig":null,"attributes":[{"value":"/ Blend the color of a given pixel into ourself, taking into account alpha channels","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":161330,"byte_end":161415,"line_start":102,"line_end":102,"column_start":5,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":1273},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":161498,"byte_end":161504,"line_start":107,"line_end":107,"column_start":12,"column_end":18},"name":"Pixels","qualname":"::buffer::Pixels","value":"Pixels {  }","parent":null,"children":[{"krate":0,"index":1276}],"decl_id":null,"docs":" Iterate over pixel refs.\n","sig":null,"attributes":[{"value":"/ Iterate over pixel refs.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":161458,"byte_end":161486,"line_start":106,"line_end":106,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":1288},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":162147,"byte_end":162156,"line_start":133,"line_end":133,"column_start":12,"column_end":21},"name":"PixelsMut","qualname":"::buffer::PixelsMut","value":"PixelsMut {  }","parent":null,"children":[{"krate":0,"index":1291}],"decl_id":null,"docs":" Iterate over mutable pixel refs.\n","sig":null,"attributes":[{"value":"/ Iterate over mutable pixel refs.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":162099,"byte_end":162135,"line_start":132,"line_end":132,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1303},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":162828,"byte_end":162843,"line_start":158,"line_end":158,"column_start":12,"column_end":27},"name":"EnumeratePixels","qualname":"::buffer::EnumeratePixels","value":"EnumeratePixels {  }","parent":null,"children":[{"krate":0,"index":1306},{"krate":0,"index":1307},{"krate":0,"index":1308},{"krate":0,"index":1309}],"decl_id":null,"docs":" Enumerate the pixels of an image.\n","sig":null,"attributes":[{"value":"/ Enumerate the pixels of an image.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":162779,"byte_end":162816,"line_start":157,"line_end":157,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":1315},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":163496,"byte_end":163514,"line_start":184,"line_end":184,"column_start":12,"column_end":30},"name":"EnumeratePixelsMut","qualname":"::buffer::EnumeratePixelsMut","value":"EnumeratePixelsMut {  }","parent":null,"children":[{"krate":0,"index":1318},{"krate":0,"index":1319},{"krate":0,"index":1320},{"krate":0,"index":1321}],"decl_id":null,"docs":" Enumerate the pixels of an image.\n","sig":null,"attributes":[{"value":"/ Enumerate the pixels of an image.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":163447,"byte_end":163484,"line_start":183,"line_end":183,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":1327},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":164168,"byte_end":164179,"line_start":210,"line_end":210,"column_start":12,"column_end":23},"name":"ImageBuffer","qualname":"::buffer::ImageBuffer","value":"ImageBuffer {  }","parent":null,"children":[{"krate":0,"index":1330},{"krate":0,"index":1331},{"krate":0,"index":1332},{"krate":0,"index":1333}],"decl_id":null,"docs":" Generic image buffer\n","sig":null,"attributes":[{"value":"/ Generic image buffer","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":164132,"byte_end":164156,"line_start":209,"line_end":209,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1337},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":164663,"byte_end":164671,"line_start":227,"line_end":227,"column_start":12,"column_end":20},"name":"from_raw","qualname":"<ImageBuffer<P, Container>>::from_raw","value":"pub fn from_raw(u32, u32, Container) -> Option<ImageBuffer<P, Container>>","parent":null,"children":[],"decl_id":null,"docs":" Contructs a buffer from a generic container\n (for example a `Vec` or a slice)","sig":null,"attributes":[{"value":"/ Contructs a buffer from a generic container","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":164499,"byte_end":164546,"line_start":223,"line_end":223,"column_start":5,"column_end":52}},{"value":"/ (for example a `Vec` or a slice)","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":164551,"byte_end":164587,"line_start":224,"line_end":224,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":164592,"byte_end":164595,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ Returns None if the container is not big enough","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":164600,"byte_end":164651,"line_start":226,"line_end":226,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1338},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":165183,"byte_end":165191,"line_start":245,"line_end":245,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<ImageBuffer<P, Container>>::into_raw","value":"pub fn into_raw(Self) -> Container","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying raw buffer\n","sig":null,"attributes":[{"value":"/ Returns the underlying raw buffer","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":165134,"byte_end":165171,"line_start":244,"line_end":244,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1339},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":165293,"byte_end":165303,"line_start":250,"line_end":250,"column_start":12,"column_end":22},"name":"dimensions","qualname":"<ImageBuffer<P, Container>>::dimensions","value":"pub fn dimensions(&Self) -> (u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" The width and height of this image.\n","sig":null,"attributes":[{"value":"/ The width and height of this image.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":165242,"byte_end":165281,"line_start":249,"line_end":249,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1340},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":165412,"byte_end":165417,"line_start":255,"line_end":255,"column_start":12,"column_end":17},"name":"width","qualname":"<ImageBuffer<P, Container>>::width","value":"pub fn width(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The width of this image.\n","sig":null,"attributes":[{"value":"/ The width of this image.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":165372,"byte_end":165400,"line_start":254,"line_end":254,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1341},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":165505,"byte_end":165511,"line_start":260,"line_end":260,"column_start":12,"column_end":18},"name":"height","qualname":"<ImageBuffer<P, Container>>::height","value":"pub fn height(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The height of this image.\n","sig":null,"attributes":[{"value":"/ The height of this image.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":165464,"byte_end":165493,"line_start":259,"line_end":259,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1342},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":165625,"byte_end":165631,"line_start":265,"line_end":265,"column_start":12,"column_end":18},"name":"pixels","qualname":"<ImageBuffer<P, Container>>::pixels","value":"pub fn pixels<'a>(&'a Self) -> Pixels","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the pixels of this image.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the pixels of this image.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":165559,"byte_end":165613,"line_start":264,"line_end":264,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1344},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":165964,"byte_end":165980,"line_start":276,"line_end":276,"column_start":12,"column_end":28},"name":"enumerate_pixels","qualname":"<ImageBuffer<P, Container>>::enumerate_pixels","value":"pub fn enumerate_pixels<'a>(&'a Self) -> EnumeratePixels","parent":null,"children":[],"decl_id":null,"docs":" Enumerates over the pixels of the image.\n The iterator yields the coordinates of each pixel\n along with a reference to them.\n","sig":null,"attributes":[{"value":"/ Enumerates over the pixels of the image.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":165810,"byte_end":165854,"line_start":273,"line_end":273,"column_start":5,"column_end":49}},{"value":"/ The iterator yields the coordinates of each pixel","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":165859,"byte_end":165912,"line_start":274,"line_end":274,"column_start":5,"column_end":58}},{"value":"/ along with a reference to them.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":165917,"byte_end":165952,"line_start":275,"line_end":275,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1346},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":166337,"byte_end":166346,"line_start":290,"line_end":290,"column_start":12,"column_end":21},"name":"get_pixel","qualname":"<ImageBuffer<P, Container>>::get_pixel","value":"pub fn get_pixel(&Self, u32, u32) -> &P","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the pixel at location `(x, y)`","sig":null,"attributes":[{"value":"/ Gets a reference to the pixel at location `(x, y)`","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":166171,"byte_end":166225,"line_start":285,"line_end":285,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":166230,"byte_end":166233,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":166238,"byte_end":166250,"line_start":287,"line_end":287,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":166255,"byte_end":166258,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of the bounds `(width, height)`.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":166263,"byte_end":166325,"line_start":289,"line_end":289,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1350},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":166962,"byte_end":166972,"line_start":307,"line_end":307,"column_start":12,"column_end":22},"name":"pixels_mut","qualname":"<ImageBuffer<P, Container>>::pixels_mut","value":"pub fn pixels_mut(&mut Self) -> PixelsMut<, P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the mutable pixels of this image.\n The iterator yields the coordinates of each pixel\n along with a mutable reference to them.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the mutable pixels of this image.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":166782,"byte_end":166844,"line_start":304,"line_end":304,"column_start":5,"column_end":67}},{"value":"/ The iterator yields the coordinates of each pixel","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":166849,"byte_end":166902,"line_start":305,"line_end":305,"column_start":5,"column_end":58}},{"value":"/ along with a mutable reference to them.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":166907,"byte_end":166950,"line_start":306,"line_end":306,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1351},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":167210,"byte_end":167230,"line_start":316,"line_end":316,"column_start":12,"column_end":32},"name":"enumerate_pixels_mut","qualname":"<ImageBuffer<P, Container>>::enumerate_pixels_mut","value":"pub fn enumerate_pixels_mut<'a>(&'a mut Self) -> EnumeratePixelsMut","parent":null,"children":[],"decl_id":null,"docs":" Enumerates over the pixels of the image.\n","sig":null,"attributes":[{"value":"/ Enumerates over the pixels of the image.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":167154,"byte_end":167198,"line_start":315,"line_end":315,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1353},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":167636,"byte_end":167649,"line_start":331,"line_end":331,"column_start":12,"column_end":25},"name":"get_pixel_mut","qualname":"<ImageBuffer<P, Container>>::get_pixel_mut","value":"pub fn get_pixel_mut(&mut Self, u32, u32) -> &mut P","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the mutable pixel at location `(x, y)`","sig":null,"attributes":[{"value":"/ Gets a reference to the mutable pixel at location `(x, y)`","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":167462,"byte_end":167524,"line_start":326,"line_end":326,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":167529,"byte_end":167532,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":167537,"byte_end":167549,"line_start":328,"line_end":328,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":167554,"byte_end":167557,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of the bounds `(width, height)`.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":167562,"byte_end":167624,"line_start":330,"line_end":330,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1354},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":168086,"byte_end":168095,"line_start":344,"line_end":344,"column_start":12,"column_end":21},"name":"put_pixel","qualname":"<ImageBuffer<P, Container>>::put_pixel","value":"pub fn put_pixel(&mut Self, u32, u32, P)","parent":null,"children":[],"decl_id":null,"docs":" Puts a pixel at location `(x, y)`","sig":null,"attributes":[{"value":"/ Puts a pixel at location `(x, y)`","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":167937,"byte_end":167974,"line_start":339,"line_end":339,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":167979,"byte_end":167982,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":167987,"byte_end":167999,"line_start":341,"line_end":341,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":168004,"byte_end":168007,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of the bounds `(width, height)`.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":168012,"byte_end":168074,"line_start":343,"line_end":343,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1358},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":168503,"byte_end":168507,"line_start":356,"line_end":356,"column_start":12,"column_end":16},"name":"save","qualname":"<ImageBuffer<P, Container>>::save","value":"pub fn save<Q>(&Self, Q) -> io::Result<()> where Q: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Saves the buffer to a file at the path specified.","sig":null,"attributes":[{"value":"/ Saves the buffer to a file at the path specified.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":168312,"byte_end":168365,"line_start":352,"line_end":352,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":168370,"byte_end":168373,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ The image format is derived from the file extension.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":168378,"byte_end":168434,"line_start":354,"line_end":354,"column_start":5,"column_end":61}},{"value":"/ Currently only jpeg and png files are supported.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":168439,"byte_end":168491,"line_start":355,"line_end":355,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1398},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":172755,"byte_end":172758,"line_start":489,"line_end":489,"column_start":12,"column_end":15},"name":"new","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::new","value":"pub fn new(u32, u32) -> ImageBuffer<P, Vec<P::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new image buffer based on a `Vec<P::Subpixel>`.\n","sig":null,"attributes":[{"value":"/ Creates a new image buffer based on a `Vec<P::Subpixel>`.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":172682,"byte_end":172743,"line_start":488,"line_end":488,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1399},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":173227,"byte_end":173237,"line_start":503,"line_end":503,"column_start":12,"column_end":22},"name":"from_pixel","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::from_pixel","value":"pub fn from_pixel(u32, u32, P) -> ImageBuffer<P, Vec<P::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new ImageBuffer by copying a pixel\n","sig":null,"attributes":[{"value":"/ Constructs a new ImageBuffer by copying a pixel","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":173164,"byte_end":173215,"line_start":502,"line_end":502,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1400},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":173649,"byte_end":173656,"line_start":514,"line_end":514,"column_start":12,"column_end":19},"name":"from_fn","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::from_fn","value":"pub fn from_fn<F>(u32, u32, F) -> ImageBuffer<P, Vec<P::Subpixel>> where\nF: Fn(u32, u32) -> P","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new ImageBuffer by repeated application of the supplied function.\n The arguments to the function are the pixel's x and y coordinates.\n","sig":null,"attributes":[{"value":"/ Constructs a new ImageBuffer by repeated application of the supplied function.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":173480,"byte_end":173562,"line_start":512,"line_end":512,"column_start":5,"column_end":87}},{"value":"/ The arguments to the function are the pixel's x and y coordinates.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":173567,"byte_end":173637,"line_start":513,"line_end":513,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1402},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":174088,"byte_end":174096,"line_start":526,"line_end":526,"column_start":12,"column_end":20},"name":"from_vec","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::from_vec","value":"pub fn from_vec(u32, u32, Vec<P::Subpixel>)\n-> Option<ImageBuffer<P, Vec<P::Subpixel>>>","parent":null,"children":[],"decl_id":null,"docs":" Creates an image buffer out of an existing buffer.\n Returns None if the buffer is not big enough.\n","sig":null,"attributes":[{"value":"/ Creates an image buffer out of an existing buffer.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":173968,"byte_end":174022,"line_start":524,"line_end":524,"column_start":5,"column_end":59}},{"value":"/ Returns None if the buffer is not big enough.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":174027,"byte_end":174076,"line_start":525,"line_end":525,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1403},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":174372,"byte_end":174380,"line_start":533,"line_end":533,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::into_vec","value":"pub fn into_vec(Self) -> Vec<P::Subpixel>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the image buffer and returns the underlying data\n as an owned buffer\n","sig":null,"attributes":[{"value":"/ Consumes the image buffer and returns the underlying data","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":174272,"byte_end":174333,"line_start":531,"line_end":531,"column_start":5,"column_end":66}},{"value":"/ as an owned buffer","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":174338,"byte_end":174360,"line_start":532,"line_end":532,"column_start":5,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":1404},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":174508,"byte_end":174521,"line_start":539,"line_end":539,"column_start":11,"column_end":24},"name":"ConvertBuffer","qualname":"::buffer::ConvertBuffer","value":"ConvertBuffer<T>","parent":null,"children":[{"krate":0,"index":1406}],"decl_id":null,"docs":" Provides color conversions for whole image buffers.\n","sig":null,"attributes":[{"value":"/ Provides color conversions for whole image buffers.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":174442,"byte_end":174497,"line_start":538,"line_end":538,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1406},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":174707,"byte_end":174714,"line_start":544,"line_end":544,"column_start":8,"column_end":15},"name":"convert","qualname":"::buffer::ConvertBuffer::convert","value":"pub fn convert(&Self) -> T","parent":{"krate":0,"index":1404},"children":[],"decl_id":null,"docs":" Converts `self` to a buffer of type T","sig":null,"attributes":[{"value":"/ Converts `self` to a buffer of type T","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":174531,"byte_end":174572,"line_start":540,"line_end":540,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":174577,"byte_end":174580,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ A generic impementation is provided to convert any image buffer to a image buffer","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":174585,"byte_end":174670,"line_start":542,"line_end":542,"column_start":5,"column_end":90}},{"value":"/ based on a `Vec<T>`.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":174675,"byte_end":174699,"line_start":543,"line_end":543,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1408},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":174982,"byte_end":174996,"line_start":552,"line_end":552,"column_start":12,"column_end":26},"name":"expand_palette","qualname":"<GrayImage>::expand_palette","value":"pub fn expand_palette(Self, &[(u8, u8, u8)], Option<u8>) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Expands a color palette by re-using the existing buffer.\n Assumes 8 bit per pixel. Uses an optionally transparent index to\n adjust it's alpha value accordingly.\n","sig":null,"attributes":[{"value":"/ Expands a color palette by re-using the existing buffer.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":174792,"byte_end":174852,"line_start":549,"line_end":549,"column_start":5,"column_end":65}},{"value":"/ Assumes 8 bit per pixel. Uses an optionally transparent index to","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":174857,"byte_end":174925,"line_start":550,"line_end":550,"column_start":5,"column_end":73}},{"value":"/ adjust it's alpha value accordingly.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":174930,"byte_end":174970,"line_start":551,"line_end":551,"column_start":5,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1417},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":176970,"byte_end":176978,"line_start":604,"line_end":604,"column_start":10,"column_end":18},"name":"RgbImage","qualname":"::buffer::RgbImage","value":"ImageBuffer<Rgb<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable Rgb image buffer\n","sig":null,"attributes":[{"value":"/ Sendable Rgb image buffer","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":176931,"byte_end":176960,"line_start":603,"line_end":603,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":1418},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":177067,"byte_end":177076,"line_start":606,"line_end":606,"column_start":10,"column_end":19},"name":"RgbaImage","qualname":"::buffer::RgbaImage","value":"ImageBuffer<Rgba<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable Rgb + alpha channel image buffer\n","sig":null,"attributes":[{"value":"/ Sendable Rgb + alpha channel image buffer","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":177012,"byte_end":177057,"line_start":605,"line_end":605,"column_start":1,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":1419},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":177156,"byte_end":177165,"line_start":608,"line_end":608,"column_start":10,"column_end":19},"name":"GrayImage","qualname":"::buffer::GrayImage","value":"ImageBuffer<Luma<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable grayscale image buffer\n","sig":null,"attributes":[{"value":"/ Sendable grayscale image buffer","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":177111,"byte_end":177146,"line_start":607,"line_end":607,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":1420},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":177261,"byte_end":177275,"line_start":610,"line_end":610,"column_start":10,"column_end":24},"name":"GrayAlphaImage","qualname":"::buffer::GrayAlphaImage","value":"ImageBuffer<LumaA<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable grayscale + alpha channel image buffer\n","sig":null,"attributes":[{"value":"/ Sendable grayscale + alpha channel image buffer","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":177200,"byte_end":177251,"line_start":609,"line_end":609,"column_start":1,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":1432},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/traits.rs","byte_start":178988,"byte_end":178997,"line_start":9,"line_end":9,"column_start":11,"column_end":20},"name":"Primitive","qualname":"::traits::Primitive","value":"Primitive: Copy + NumCast + Num + PartialOrd<Self> + Clone + Bounded","parent":null,"children":[],"decl_id":null,"docs":" Primitive trait from old stdlib\n","sig":null,"attributes":[{"value":"/ Primitive trait from old stdlib","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/traits.rs","byte_start":178942,"byte_end":178977,"line_start":8,"line_end":8,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":1452},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/animation.rs","byte_start":179493,"byte_end":179499,"line_start":6,"line_end":6,"column_start":12,"column_end":18},"name":"Frames","qualname":"::animation::Frames","value":"Frames {  }","parent":null,"children":[{"krate":0,"index":1453},{"krate":0,"index":1454}],"decl_id":null,"docs":" Holds the frames of the animated image\n","sig":null,"attributes":[{"value":"/ Holds the frames of the animated image","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/animation.rs","byte_start":179439,"byte_end":179481,"line_start":5,"line_end":5,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1456},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/animation.rs","byte_start":179619,"byte_end":179622,"line_start":13,"line_end":13,"column_start":12,"column_end":15},"name":"new","qualname":"<Frames>::new","value":"pub fn new(Vec<Frame>) -> Frames","parent":null,"children":[],"decl_id":null,"docs":" Contructs a new frame iterator\n","sig":null,"attributes":[{"value":"/ Contructs a new frame iterator","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/animation.rs","byte_start":179573,"byte_end":179607,"line_start":12,"line_end":12,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1968},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/animation.rs","byte_start":179805,"byte_end":179810,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"name":"Frame","qualname":"::animation::Frame","value":"Frame {  }","parent":null,"children":[{"krate":0,"index":1969},{"krate":0,"index":1970},{"krate":0,"index":1971},{"krate":0,"index":1972}],"decl_id":null,"docs":" A single animation frame\n","sig":null,"attributes":[{"value":"/ A single animation frame","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/animation.rs","byte_start":179748,"byte_end":179776,"line_start":21,"line_end":21,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1458},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/animation.rs","byte_start":180017,"byte_end":180020,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"new","qualname":"<Frame>::new","value":"pub fn new(RgbaImage) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Contructs a new frame\n","sig":null,"attributes":[{"value":"/ Contructs a new frame","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/animation.rs","byte_start":179980,"byte_end":180005,"line_start":34,"line_end":34,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1459},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/animation.rs","byte_start":180236,"byte_end":180246,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Frame>::from_parts","value":"pub fn from_parts(RgbaImage, u32, u32, Ratio<u16>) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Contructs a new frame\n","sig":null,"attributes":[{"value":"/ Contructs a new frame","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/animation.rs","byte_start":180199,"byte_end":180224,"line_start":44,"line_end":44,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1460},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/animation.rs","byte_start":180488,"byte_end":180493,"line_start":55,"line_end":55,"column_start":12,"column_end":17},"name":"delay","qualname":"<Frame>::delay","value":"pub fn delay(&Self) -> Ratio<u16>","parent":null,"children":[],"decl_id":null,"docs":" Delay of this frame\n","sig":null,"attributes":[{"value":"/ Delay of this frame","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/animation.rs","byte_start":180453,"byte_end":180476,"line_start":54,"line_end":54,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1461},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/animation.rs","byte_start":180587,"byte_end":180593,"line_start":60,"line_end":60,"column_start":12,"column_end":18},"name":"buffer","qualname":"<Frame>::buffer","value":"pub fn buffer(&Self) -> &RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns the image buffer\n","sig":null,"attributes":[{"value":"/ Returns the image buffer","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/animation.rs","byte_start":180547,"byte_end":180575,"line_start":59,"line_end":59,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1462},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/animation.rs","byte_start":180689,"byte_end":180700,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"into_buffer","qualname":"<Frame>::into_buffer","value":"pub fn into_buffer(Self) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns the image buffer\n","sig":null,"attributes":[{"value":"/ Returns the image buffer","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/animation.rs","byte_start":180649,"byte_end":180677,"line_start":64,"line_end":64,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1463},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/animation.rs","byte_start":180789,"byte_end":180793,"line_start":70,"line_end":70,"column_start":12,"column_end":16},"name":"left","qualname":"<Frame>::left","value":"pub fn left(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the x offset\n","sig":null,"attributes":[{"value":"/ Returns the x offset","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/animation.rs","byte_start":180753,"byte_end":180777,"line_start":69,"line_end":69,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1464},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/animation.rs","byte_start":180875,"byte_end":180878,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"top","qualname":"<Frame>::top","value":"pub fn top(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the y offset\n","sig":null,"attributes":[{"value":"/ Returns the y offset","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/animation.rs","byte_start":180839,"byte_end":180863,"line_start":74,"line_end":74,"column_start":5,"column_end":29}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/math/nq.rs","byte_start":5232,"byte_end":5240,"line_start":76,"line_end":76,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":224},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/colorops.rs","byte_start":32631,"byte_end":32638,"line_start":187,"line_end":187,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/colorops.rs","byte_start":33088,"byte_end":33096,"line_start":208,"line_end":208,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/jpeg/encoder.rs","byte_start":57749,"byte_end":57760,"line_start":177,"line_end":177,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":587}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/jpeg/decoder.rs","byte_start":73667,"byte_end":73678,"line_start":14,"line_end":14,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":639},{"krate":0,"index":640}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/jpeg/decoder.rs","byte_start":74588,"byte_end":74599,"line_start":42,"line_end":42,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":647}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/jpeg/decoder.rs","byte_start":76297,"byte_end":76306,"line_start":101,"line_end":101,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":650}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/jpeg/decoder.rs","byte_start":76623,"byte_end":76633,"line_start":112,"line_end":112,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":653}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":87181,"byte_end":87191,"line_start":39,"line_end":39,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":711}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":88280,"byte_end":88290,"line_start":57,"line_end":57,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":713},{"krate":0,"index":714}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":88973,"byte_end":88983,"line_start":78,"line_end":78,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":716}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":92697,"byte_end":92703,"line_start":224,"line_end":224,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":754},{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":93496,"byte_end":93505,"line_start":257,"line_end":257,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":767},{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":99144,"byte_end":99152,"line_start":448,"line_end":448,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":802}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":100473,"byte_end":100481,"line_start":493,"line_end":493,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":812}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/utils/bitstream.rs","byte_start":105453,"byte_end":105462,"line_start":78,"line_end":78,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":835}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/utils/bitstream.rs","byte_start":106003,"byte_end":106012,"line_start":99,"line_end":99,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":838}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/utils/bitstream.rs","byte_start":107801,"byte_end":107810,"line_start":178,"line_end":178,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":843}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/utils/bitstream.rs","byte_start":108178,"byte_end":108187,"line_start":194,"line_end":194,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":847}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/utils/lzw.rs","byte_start":110034,"byte_end":110046,"line_start":32,"line_end":32,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/utils/lzw.rs","byte_start":114433,"byte_end":114437,"line_start":174,"line_end":174,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":887}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/utils/lzw.rs","byte_start":114734,"byte_end":114746,"line_start":193,"line_end":193,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":899},{"krate":0,"index":900}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":121414,"byte_end":121426,"line_start":97,"line_end":97,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":1004},{"krate":0,"index":1005},{"krate":0,"index":1006},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1018},{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1025},{"krate":0,"index":1026},{"krate":0,"index":1027},{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":1035}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":132530,"byte_end":132542,"line_start":418,"line_end":418,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1038},{"krate":0,"index":1039},{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1042},{"krate":0,"index":1043},{"krate":0,"index":1044}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":149092,"byte_end":149093,"line_start":226,"line_end":226,"column_start":32,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1111}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":149247,"byte_end":149251,"line_start":234,"line_end":234,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1114}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":149673,"byte_end":149677,"line_start":245,"line_end":245,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1117}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":150100,"byte_end":150104,"line_start":256,"line_end":256,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1120}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":150302,"byte_end":150307,"line_start":265,"line_end":265,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1123}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":150743,"byte_end":150748,"line_start":277,"line_end":277,"column_start":52,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1126}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":151187,"byte_end":151192,"line_start":289,"line_end":289,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1129}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":151449,"byte_end":151453,"line_start":299,"line_end":299,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1132}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":151757,"byte_end":151761,"line_start":311,"line_end":311,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1135}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":152062,"byte_end":152066,"line_start":322,"line_end":322,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1138}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":152389,"byte_end":152392,"line_start":336,"line_end":336,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1141}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":152663,"byte_end":152666,"line_start":347,"line_end":347,"column_start":54,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1144}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":152930,"byte_end":152933,"line_start":357,"line_end":357,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1147}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":153301,"byte_end":153306,"line_start":373,"line_end":373,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1152}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":154189,"byte_end":154193,"line_start":397,"line_end":397,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1155}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":154303,"byte_end":154307,"line_start":403,"line_end":403,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1158}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":156261,"byte_end":156264,"line_start":438,"line_end":438,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1161}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":156475,"byte_end":156480,"line_start":450,"line_end":450,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1166}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":156657,"byte_end":156661,"line_start":460,"line_end":460,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1169}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":156859,"byte_end":156863,"line_start":471,"line_end":471,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1172}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":157078,"byte_end":157081,"line_start":481,"line_end":481,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1175}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":161624,"byte_end":161630,"line_start":111,"line_end":111,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1280},{"krate":0,"index":1281}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":161892,"byte_end":161898,"line_start":122,"line_end":122,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1286}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":162279,"byte_end":162288,"line_start":137,"line_end":137,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1295},{"krate":0,"index":1296}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":162562,"byte_end":162571,"line_start":148,"line_end":148,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1301}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":163015,"byte_end":163030,"line_start":165,"line_end":165,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1313},{"krate":0,"index":1314}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":163689,"byte_end":163707,"line_start":191,"line_end":191,"column_start":38,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1325},{"krate":0,"index":1326}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":164367,"byte_end":164378,"line_start":218,"line_end":218,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1337},{"krate":0,"index":1338},{"krate":0,"index":1339},{"krate":0,"index":1340},{"krate":0,"index":1341},{"krate":0,"index":1342},{"krate":0,"index":1344},{"krate":0,"index":1346}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":166639,"byte_end":166650,"line_start":299,"line_end":299,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1350},{"krate":0,"index":1351},{"krate":0,"index":1353},{"krate":0,"index":1354}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":168205,"byte_end":168216,"line_start":349,"line_end":349,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1358}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":168823,"byte_end":168834,"line_start":366,"line_end":366,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1363},{"krate":0,"index":1364}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":169105,"byte_end":169116,"line_start":377,"line_end":377,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1369}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":169389,"byte_end":169400,"line_start":386,"line_end":386,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1374},{"krate":0,"index":1375}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":169668,"byte_end":169679,"line_start":397,"line_end":397,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1379}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":169938,"byte_end":169949,"line_start":407,"line_end":407,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1383}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":170300,"byte_end":170311,"line_start":421,"line_end":421,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1387},{"krate":0,"index":1388},{"krate":0,"index":1389},{"krate":0,"index":1390},{"krate":0,"index":1391},{"krate":0,"index":1392},{"krate":0,"index":1393},{"krate":0,"index":1394},{"krate":0,"index":1395}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":172615,"byte_end":172626,"line_start":485,"line_end":485,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1398},{"krate":0,"index":1399},{"krate":0,"index":1400},{"krate":0,"index":1402},{"krate":0,"index":1403}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":174776,"byte_end":174785,"line_start":548,"line_end":548,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1408}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":176393,"byte_end":176404,"line_start":587,"line_end":587,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1416}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/animation.rs","byte_start":179560,"byte_end":179566,"line_start":11,"line_end":11,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1456}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/animation.rs","byte_start":179968,"byte_end":179973,"line_start":33,"line_end":33,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1458},{"krate":0,"index":1459},{"krate":0,"index":1460},{"krate":0,"index":1461},{"krate":0,"index":1462},{"krate":0,"index":1463},{"krate":0,"index":1464}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/animation.rs","byte_start":180943,"byte_end":180949,"line_start":80,"line_end":80,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1467},{"krate":0,"index":1468}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":1568,"byte_end":1572,"line_start":107,"line_end":107,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":179}},{"kind":"Mod","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/math/mod.rs","byte_start":2429,"byte_end":2434,"line_start":2,"line_end":2,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":180}},{"kind":"Mod","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/math/mod.rs","byte_start":2444,"byte_end":2446,"line_start":3,"line_end":3,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":183}},{"kind":"Mod","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":1613,"byte_end":1621,"line_start":110,"line_end":110,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":229}},{"kind":"Mod","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/mod.rs","byte_start":17044,"byte_end":17052,"line_start":54,"line_end":54,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":340}},{"kind":"Mod","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/lib.rs","byte_start":1829,"byte_end":1833,"line_start":122,"line_end":122,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":487}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/math/nq.rs","byte_start":5232,"byte_end":5240,"line_start":76,"line_end":76,"column_start":6,"column_end":14},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":205},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/colorops.rs","byte_start":32631,"byte_end":32638,"line_start":187,"line_end":187,"column_start":19,"column_end":26},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1482},"to":{"krate":0,"index":398}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/imageops/colorops.rs","byte_start":33088,"byte_end":33096,"line_start":208,"line_end":208,"column_start":23,"column_end":31},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":205},"to":{"krate":0,"index":398}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/jpeg/encoder.rs","byte_start":57749,"byte_end":57760,"line_start":177,"line_end":177,"column_start":20,"column_end":31},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":560},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/jpeg/decoder.rs","byte_start":73667,"byte_end":73678,"line_start":14,"line_end":14,"column_start":15,"column_end":26},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":633},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/jpeg/decoder.rs","byte_start":74588,"byte_end":74599,"line_start":42,"line_end":42,"column_start":32,"column_end":43},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":633},"to":{"krate":0,"index":734}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/jpeg/decoder.rs","byte_start":76297,"byte_end":76306,"line_start":101,"line_end":101,"column_start":42,"column_end":51},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1640},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/jpeg/decoder.rs","byte_start":76623,"byte_end":76633,"line_start":112,"line_end":112,"column_start":36,"column_end":46},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1512},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":87181,"byte_end":87191,"line_start":39,"line_end":39,"column_start":23,"column_end":33},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1512},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":88280,"byte_end":88290,"line_start":57,"line_end":57,"column_start":16,"column_end":26},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1512},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":88973,"byte_end":88983,"line_start":78,"line_end":78,"column_start":26,"column_end":36},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1512},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":90180,"byte_end":90185,"line_start":140,"line_end":140,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2858},"to":{"krate":0,"index":734}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":92697,"byte_end":92703,"line_start":224,"line_end":224,"column_start":40,"column_end":46},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":743},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":93496,"byte_end":93505,"line_start":257,"line_end":257,"column_start":45,"column_end":54},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":756},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":94403,"byte_end":94408,"line_start":290,"line_end":290,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2858},"to":{"krate":0,"index":769}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":99144,"byte_end":99152,"line_start":448,"line_end":448,"column_start":37,"column_end":45},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":788},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/image.rs","byte_start":100473,"byte_end":100481,"line_start":493,"line_end":493,"column_start":54,"column_end":62},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":788},"to":{"krate":0,"index":769}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/utils/bitstream.rs","byte_start":104011,"byte_end":104015,"line_start":8,"line_end":8,"column_start":22,"column_end":26},"kind":"SuperTrait","from":{"krate":1,"index":4271},"to":{"krate":0,"index":828}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/utils/bitstream.rs","byte_start":104147,"byte_end":104152,"line_start":14,"line_end":14,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":1,"index":4332},"to":{"krate":0,"index":830}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/utils/bitstream.rs","byte_start":105453,"byte_end":105462,"line_start":78,"line_end":78,"column_start":23,"column_end":32},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1565},"to":{"krate":0,"index":828}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/utils/bitstream.rs","byte_start":106003,"byte_end":106012,"line_start":99,"line_end":99,"column_start":23,"column_end":32},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1577},"to":{"krate":0,"index":828}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/utils/bitstream.rs","byte_start":107801,"byte_end":107810,"line_start":178,"line_end":178,"column_start":27,"column_end":36},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1589},"to":{"krate":0,"index":830}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/utils/bitstream.rs","byte_start":108178,"byte_end":108187,"line_start":194,"line_end":194,"column_start":27,"column_end":36},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1604},"to":{"krate":0,"index":830}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/utils/lzw.rs","byte_start":110034,"byte_end":110046,"line_start":32,"line_end":32,"column_start":6,"column_end":18},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":869},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/utils/lzw.rs","byte_start":114433,"byte_end":114437,"line_start":174,"line_end":174,"column_start":6,"column_end":10},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":881},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/utils/lzw.rs","byte_start":114734,"byte_end":114746,"line_start":193,"line_end":193,"column_start":6,"column_end":18},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":888},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":121414,"byte_end":121426,"line_start":97,"line_end":97,"column_start":6,"column_end":18},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1625},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/dynimage.rs","byte_start":132530,"byte_end":132542,"line_start":418,"line_end":418,"column_start":23,"column_end":35},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1625},"to":{"krate":0,"index":769}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":149092,"byte_end":149093,"line_start":226,"line_end":226,"column_start":32,"column_end":33},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1110},"to":{"krate":0,"index":1106}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":149247,"byte_end":149251,"line_start":234,"line_end":234,"column_start":53,"column_end":57},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1884},"to":{"krate":0,"index":1106}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":149673,"byte_end":149677,"line_start":245,"line_end":245,"column_start":52,"column_end":56},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1884},"to":{"krate":0,"index":1106}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":150100,"byte_end":150104,"line_start":256,"line_end":256,"column_start":54,"column_end":58},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1884},"to":{"krate":0,"index":1106}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":150302,"byte_end":150307,"line_start":265,"line_end":265,"column_start":53,"column_end":58},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1940},"to":{"krate":0,"index":1106}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":150743,"byte_end":150748,"line_start":277,"line_end":277,"column_start":52,"column_end":57},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1940},"to":{"krate":0,"index":1106}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":151187,"byte_end":151192,"line_start":289,"line_end":289,"column_start":53,"column_end":58},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1940},"to":{"krate":0,"index":1106}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":151449,"byte_end":151453,"line_start":299,"line_end":299,"column_start":52,"column_end":56},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1912},"to":{"krate":0,"index":1106}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":151757,"byte_end":151761,"line_start":311,"line_end":311,"column_start":54,"column_end":58},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1912},"to":{"krate":0,"index":1106}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":152062,"byte_end":152066,"line_start":322,"line_end":322,"column_start":53,"column_end":57},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1912},"to":{"krate":0,"index":1106}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":152389,"byte_end":152392,"line_start":336,"line_end":336,"column_start":53,"column_end":56},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1856},"to":{"krate":0,"index":1106}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":152663,"byte_end":152666,"line_start":347,"line_end":347,"column_start":54,"column_end":57},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1856},"to":{"krate":0,"index":1106}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":152930,"byte_end":152933,"line_start":357,"line_end":357,"column_start":53,"column_end":56},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1856},"to":{"krate":0,"index":1106}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":153301,"byte_end":153306,"line_start":373,"line_end":373,"column_start":30,"column_end":35},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1940},"to":{"krate":0,"index":1148}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":154189,"byte_end":154193,"line_start":397,"line_end":397,"column_start":30,"column_end":34},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1884},"to":{"krate":0,"index":1148}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":154303,"byte_end":154307,"line_start":403,"line_end":403,"column_start":30,"column_end":34},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1912},"to":{"krate":0,"index":1148}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":156261,"byte_end":156264,"line_start":438,"line_end":438,"column_start":30,"column_end":33},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1856},"to":{"krate":0,"index":1148}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":156475,"byte_end":156480,"line_start":450,"line_end":450,"column_start":31,"column_end":36},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1940},"to":{"krate":0,"index":1162}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":156657,"byte_end":156661,"line_start":460,"line_end":460,"column_start":31,"column_end":35},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1884},"to":{"krate":0,"index":1162}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":156859,"byte_end":156863,"line_start":471,"line_end":471,"column_start":31,"column_end":35},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1912},"to":{"krate":0,"index":1162}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/color.rs","byte_start":157078,"byte_end":157081,"line_start":481,"line_end":481,"column_start":31,"column_end":34},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1856},"to":{"krate":0,"index":1162}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":157789,"byte_end":157793,"line_start":17,"line_end":17,"column_start":18,"column_end":22},"kind":"SuperTrait","from":{"krate":2,"index":2863},"to":{"krate":0,"index":1240}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":157796,"byte_end":157801,"line_start":17,"line_end":17,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2474},"to":{"krate":0,"index":1240}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":161624,"byte_end":161630,"line_start":111,"line_end":111,"column_start":38,"column_end":44},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1273},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":161892,"byte_end":161898,"line_start":122,"line_end":122,"column_start":49,"column_end":55},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1273},"to":{"krate":2,"index":7174}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":162279,"byte_end":162288,"line_start":137,"line_end":137,"column_start":38,"column_end":47},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1288},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":162562,"byte_end":162571,"line_start":148,"line_end":148,"column_start":49,"column_end":58},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1288},"to":{"krate":2,"index":7174}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":163015,"byte_end":163030,"line_start":165,"line_end":165,"column_start":38,"column_end":53},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1303},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":163689,"byte_end":163707,"line_start":191,"line_end":191,"column_start":38,"column_end":56},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1315},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":164367,"byte_end":164378,"line_start":218,"line_end":218,"column_start":20,"column_end":31},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1327},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":166639,"byte_end":166650,"line_start":299,"line_end":299,"column_start":20,"column_end":31},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1327},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":168205,"byte_end":168216,"line_start":349,"line_end":349,"column_start":20,"column_end":31},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1327},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":168823,"byte_end":168834,"line_start":366,"line_end":366,"column_start":30,"column_end":41},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1327},"to":{"krate":2,"index":3064}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":169105,"byte_end":169116,"line_start":377,"line_end":377,"column_start":33,"column_end":44},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1327},"to":{"krate":2,"index":3077}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":169389,"byte_end":169400,"line_start":386,"line_end":386,"column_start":42,"column_end":53},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1327},"to":{"krate":2,"index":3149}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":169668,"byte_end":169679,"line_start":397,"line_end":397,"column_start":45,"column_end":56},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1327},"to":{"krate":2,"index":3153}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":169938,"byte_end":169949,"line_start":407,"line_end":407,"column_start":30,"column_end":41},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1327},"to":{"krate":2,"index":2474}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":170300,"byte_end":170311,"line_start":421,"line_end":421,"column_start":37,"column_end":48},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1327},"to":{"krate":0,"index":769}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":172615,"byte_end":172626,"line_start":485,"line_end":485,"column_start":26,"column_end":37},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1327},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":174776,"byte_end":174785,"line_start":548,"line_end":548,"column_start":6,"column_end":15},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1419},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/buffer.rs","byte_start":176393,"byte_end":176404,"line_start":587,"line_end":587,"column_start":9,"column_end":20},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1327},"to":{"krate":0,"index":1404}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/traits.rs","byte_start":178999,"byte_end":179003,"line_start":9,"line_end":9,"column_start":22,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":2863},"to":{"krate":0,"index":1432}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/traits.rs","byte_start":179006,"byte_end":179013,"line_start":9,"line_end":9,"column_start":29,"column_end":36},"kind":"SuperTrait","from":{"krate":20,"index":345},"to":{"krate":0,"index":1432}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/traits.rs","byte_start":179016,"byte_end":179019,"line_start":9,"line_end":9,"column_start":39,"column_end":42},"kind":"SuperTrait","from":{"krate":20,"index":923},"to":{"krate":0,"index":1432}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/traits.rs","byte_start":179022,"byte_end":179032,"line_start":9,"line_end":9,"column_start":45,"column_end":55},"kind":"SuperTrait","from":{"krate":2,"index":2551},"to":{"krate":0,"index":1432}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/traits.rs","byte_start":179041,"byte_end":179046,"line_start":9,"line_end":9,"column_start":64,"column_end":69},"kind":"SuperTrait","from":{"krate":2,"index":2474},"to":{"krate":0,"index":1432}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/traits.rs","byte_start":179049,"byte_end":179056,"line_start":9,"line_end":9,"column_start":72,"column_end":79},"kind":"SuperTrait","from":{"krate":20,"index":230},"to":{"krate":0,"index":1432}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/animation.rs","byte_start":179560,"byte_end":179566,"line_start":11,"line_end":11,"column_start":6,"column_end":12},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1452},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/animation.rs","byte_start":179968,"byte_end":179973,"line_start":33,"line_end":33,"column_start":6,"column_end":11},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1968},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.10.4/./src/animation.rs","byte_start":180943,"byte_end":180949,"line_start":80,"line_end":80,"column_start":23,"column_end":29},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1452},"to":{"krate":2,"index":7310}}]}