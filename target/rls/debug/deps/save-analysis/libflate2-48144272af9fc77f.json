{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20","program":"/Users/perturbedeagle/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","flate2","/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"miniz-sys\"","-C","metadata=48144272af9fc77f","-C","extra-filename=-48144272af9fc77f","--out-dir","/Users/perturbedeagle/Documents/projects/udemy/ultimate_rust_crash_course/exercise/z_final_project/target/rls/debug/deps","-L","dependency=/Users/perturbedeagle/Documents/projects/udemy/ultimate_rust_crash_course/exercise/z_final_project/target/rls/debug/deps","--extern","libc=/Users/perturbedeagle/Documents/projects/udemy/ultimate_rust_crash_course/exercise/z_final_project/target/rls/debug/deps/liblibc-a151bf01c353d1ba.rmeta","--extern","miniz_sys=/Users/perturbedeagle/Documents/projects/udemy/ultimate_rust_crash_course/exercise/z_final_project/target/rls/debug/deps/libminiz_sys-25c2f3c1e9fae56d.rmeta","--cap-lints","allow","-L","native=/Users/perturbedeagle/Documents/projects/udemy/ultimate_rust_crash_course/exercise/z_final_project/target/rls/debug/build/miniz-sys-57d4fce449bbfe8e/out","--error-format=json","--sysroot","/Users/perturbedeagle/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/perturbedeagle/Documents/projects/udemy/ultimate_rust_crash_course/exercise/z_final_project/target/rls/debug/deps/libflate2-48144272af9fc77f.rmeta"},"prelude":{"crate_id":{"name":"flate2","disambiguator":[293026008790719640,6344447420013196741]},"crate_root":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src","external_crates":[{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[7439535968655576646,17420488833649705410]}},{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[1949116827220114676,2065912148165510692]}},{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6424123809251651324,10791243255933316672]}},{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11089070161906179638,2253832597208660558]}},{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3666879193032761931,4629784602926728112]}},{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[17557414160303111626,7572947572632644954]}},{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[915848953387719454,11341216537588130533]}},{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4285064400235759547,17176111531075018758]}},{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[6997063163517280748,14486342634155193831]}},{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2053070849310045891,9457326657766539472]}},{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[16492367081693084488,12081229032515817188]}},{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[14000704685499991975,15439018228330051001]}},{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[16882152814081891816,2081400005890767566]}},{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[17412809486977561704,10774188040798205111]}},{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[10299009701328497764,8719717191227013711]}},{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","num":16,"id":{"name":"panic_unwind","disambiguator":[13564088873543153286,4566579444635585591]}},{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","num":17,"id":{"name":"libc","disambiguator":[8300402132561354707,2661493467424822882]}},{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/ffi.rs","num":18,"id":{"name":"miniz_sys","disambiguator":[15068830601585573729,2988862044486365509]}}],"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":0,"byte_end":10102,"line_start":1,"line_end":308,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1050},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":3848,"byte_end":3855,"line_start":119,"line_end":119,"column_start":13,"column_end":20},"alias_span":null,"name":"GzBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1039},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":3882,"byte_end":3888,"line_start":120,"line_end":120,"column_start":13,"column_end":19},"alias_span":null,"name":"GzHeader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1067},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":3916,"byte_end":3924,"line_start":121,"line_end":121,"column_start":15,"column_end":23},"alias_span":null,"name":"Compress","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1120},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":3926,"byte_end":3935,"line_start":121,"line_end":121,"column_start":25,"column_end":34},"alias_span":null,"name":"DataError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1071},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":3937,"byte_end":3947,"line_start":121,"line_end":121,"column_start":36,"column_end":46},"alias_span":null,"name":"Decompress","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1090},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":3949,"byte_end":3954,"line_start":121,"line_end":121,"column_start":48,"column_end":53},"alias_span":null,"name":"Flush","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1125},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":3956,"byte_end":3962,"line_start":121,"line_end":121,"column_start":55,"column_end":61},"alias_span":null,"name":"Status","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":937},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":3979,"byte_end":3982,"line_start":122,"line_end":122,"column_start":15,"column_end":18},"alias_span":null,"name":"Crc","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":942},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":3984,"byte_end":3993,"line_start":122,"line_end":122,"column_start":20,"column_end":29},"alias_span":null,"name":"CrcReader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":963},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":4288,"byte_end":4302,"line_start":138,"line_end":138,"column_start":28,"column_end":42},"alias_span":null,"name":"DeflateEncoder","value":"","parent":{"krate":0,"index":855}},{"kind":"Use","ref_id":{"krate":0,"index":969},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":4331,"byte_end":4345,"line_start":139,"line_end":139,"column_start":28,"column_end":42},"alias_span":null,"name":"DeflateDecoder","value":"","parent":{"krate":0,"index":855}},{"kind":"Use","ref_id":{"krate":0,"index":1157},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":4371,"byte_end":4382,"line_start":140,"line_end":140,"column_start":25,"column_end":36},"alias_span":null,"name":"ZlibEncoder","value":"","parent":{"krate":0,"index":855}},{"kind":"Use","ref_id":{"krate":0,"index":1163},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":4408,"byte_end":4419,"line_start":141,"line_end":141,"column_start":25,"column_end":36},"alias_span":null,"name":"ZlibDecoder","value":"","parent":{"krate":0,"index":855}},{"kind":"Use","ref_id":{"krate":0,"index":1012},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":4443,"byte_end":4452,"line_start":142,"line_end":142,"column_start":23,"column_end":32},"alias_span":null,"name":"GzEncoder","value":"","parent":{"krate":0,"index":855}},{"kind":"Use","ref_id":{"krate":0,"index":1018},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":4476,"byte_end":4485,"line_start":143,"line_end":143,"column_start":23,"column_end":32},"alias_span":null,"name":"GzDecoder","value":"","parent":{"krate":0,"index":855}},{"kind":"Use","ref_id":{"krate":0,"index":1024},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":4509,"byte_end":4523,"line_start":144,"line_end":144,"column_start":23,"column_end":37},"alias_span":null,"name":"MultiGzDecoder","value":"","parent":{"krate":0,"index":855}},{"kind":"Use","ref_id":{"krate":0,"index":975},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":4741,"byte_end":4755,"line_start":152,"line_end":152,"column_start":29,"column_end":43},"alias_span":null,"name":"DeflateEncoder","value":"","parent":{"krate":0,"index":877}},{"kind":"Use","ref_id":{"krate":0,"index":981},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":4785,"byte_end":4799,"line_start":153,"line_end":153,"column_start":29,"column_end":43},"alias_span":null,"name":"DeflateDecoder","value":"","parent":{"krate":0,"index":877}},{"kind":"Use","ref_id":{"krate":0,"index":1169},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":4826,"byte_end":4837,"line_start":154,"line_end":154,"column_start":26,"column_end":37},"alias_span":null,"name":"ZlibEncoder","value":"","parent":{"krate":0,"index":877}},{"kind":"Use","ref_id":{"krate":0,"index":1175},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":4864,"byte_end":4875,"line_start":155,"line_end":155,"column_start":26,"column_end":37},"alias_span":null,"name":"ZlibDecoder","value":"","parent":{"krate":0,"index":877}},{"kind":"Use","ref_id":{"krate":0,"index":1030},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":4900,"byte_end":4909,"line_start":156,"line_end":156,"column_start":24,"column_end":33},"alias_span":null,"name":"GzEncoder","value":"","parent":{"krate":0,"index":877}},{"kind":"Use","ref_id":{"krate":0,"index":949},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":5137,"byte_end":5151,"line_start":164,"line_end":164,"column_start":31,"column_end":45},"alias_span":null,"name":"DeflateEncoder","value":"","parent":{"krate":0,"index":893}},{"kind":"Use","ref_id":{"krate":0,"index":956},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":5183,"byte_end":5197,"line_start":165,"line_end":165,"column_start":31,"column_end":45},"alias_span":null,"name":"DeflateDecoder","value":"","parent":{"krate":0,"index":893}},{"kind":"Use","ref_id":{"krate":0,"index":1143},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":5226,"byte_end":5237,"line_start":166,"line_end":166,"column_start":28,"column_end":39},"alias_span":null,"name":"ZlibEncoder","value":"","parent":{"krate":0,"index":893}},{"kind":"Use","ref_id":{"krate":0,"index":1150},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":5266,"byte_end":5277,"line_start":167,"line_end":167,"column_start":28,"column_end":39},"alias_span":null,"name":"ZlibDecoder","value":"","parent":{"krate":0,"index":893}},{"kind":"Use","ref_id":{"krate":0,"index":987},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":5304,"byte_end":5313,"line_start":168,"line_end":168,"column_start":26,"column_end":35},"alias_span":null,"name":"GzEncoder","value":"","parent":{"krate":0,"index":893}},{"kind":"Use","ref_id":{"krate":0,"index":996},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":5340,"byte_end":5349,"line_start":169,"line_end":169,"column_start":26,"column_end":35},"alias_span":null,"name":"GzDecoder","value":"","parent":{"krate":0,"index":893}},{"kind":"Use","ref_id":{"krate":0,"index":1004},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":5376,"byte_end":5390,"line_start":170,"line_end":170,"column_start":26,"column_end":40},"alias_span":null,"name":"MultiGzDecoder","value":"","parent":{"krate":0,"index":893}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":0,"byte_end":10102,"line_start":1,"line_end":308,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":74},{"krate":0,"index":109},{"krate":0,"index":267},{"krate":0,"index":309},{"krate":0,"index":573},{"krate":0,"index":635},{"krate":0,"index":698},{"krate":0,"index":855},{"krate":0,"index":877},{"krate":0,"index":893},{"krate":0,"index":915},{"krate":0,"index":1181},{"krate":0,"index":1194},{"krate":0,"index":1195},{"krate":0,"index":1197},{"krate":0,"index":1198},{"krate":0,"index":1200},{"krate":0,"index":1201},{"krate":0,"index":1203},{"krate":0,"index":918},{"krate":0,"index":920},{"krate":0,"index":927},{"krate":0,"index":933},{"krate":0,"index":935}],"decl_id":null,"docs":" A DEFLATE-based stream compression/decompression library","sig":null,"attributes":[{"value":"/ A DEFLATE-based stream compression/decompression library","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":0,"byte_end":60,"line_start":1,"line_end":1,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":61,"byte_end":64,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This library is meant to supplement/replace the standard distributon's","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":65,"byte_end":139,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"/ libflate library by providing a streaming encoder/decoder rather than purely","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":140,"byte_end":220,"line_start":4,"line_end":4,"column_start":1,"column_end":81}},{"value":"/ an in-memory encoder/decoder.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":221,"byte_end":254,"line_start":5,"line_end":5,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":255,"byte_end":258,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Like with [`libflate`], flate2 is based on [`miniz.c`][1]","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":259,"byte_end":320,"line_start":7,"line_end":7,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":321,"byte_end":324,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [1]: https://code.google.com/p/miniz/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":325,"byte_end":366,"line_start":9,"line_end":9,"column_start":1,"column_end":42}},{"value":"/ [`libflate`]: https://docs.rs/crate/libflate/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":367,"byte_end":416,"line_start":10,"line_end":10,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":417,"byte_end":420,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Organization","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":421,"byte_end":439,"line_start":12,"line_end":12,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":440,"byte_end":443,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This crate consists mainly of two modules, [`read`] and [`write`]. Each","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":444,"byte_end":519,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"/ module contains a number of types used to encode and decode various streams","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":520,"byte_end":599,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ of data. All types in the [`write`] module work on instances of [`Write`],","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":600,"byte_end":678,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ whereas all types in the [`read`] module work on instances of [`Read`].","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":679,"byte_end":754,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":755,"byte_end":758,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":759,"byte_end":766,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ use flate2::write::GzEncoder;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":767,"byte_end":800,"line_start":20,"line_end":20,"column_start":1,"column_end":34}},{"value":"/ use flate2::Compression;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":801,"byte_end":829,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":830,"byte_end":846,"line_start":22,"line_end":22,"column_start":1,"column_end":17}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":847,"byte_end":875,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":876,"byte_end":879,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # fn main() { let _ = run(); }","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":880,"byte_end":914,"line_start":25,"line_end":25,"column_start":1,"column_end":35}},{"value":"/ # fn run() -> io::Result<()> {","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":915,"byte_end":949,"line_start":26,"line_end":26,"column_start":1,"column_end":35}},{"value":"/ let mut encoder = GzEncoder::new(Vec::new(), Compression::Default);","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":950,"byte_end":1021,"line_start":27,"line_end":27,"column_start":1,"column_end":72}},{"value":"/ encoder.write(b\"Example\")?;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":1022,"byte_end":1053,"line_start":28,"line_end":28,"column_start":1,"column_end":32}},{"value":"/ # Ok(())","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":1054,"byte_end":1066,"line_start":29,"line_end":29,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":1067,"byte_end":1074,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":1075,"byte_end":1082,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":1083,"byte_end":1086,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":1087,"byte_end":1090,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Other various types are provided at the top-level of the crate for","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":1091,"byte_end":1161,"line_start":34,"line_end":34,"column_start":1,"column_end":71}},{"value":"/ management and dealing with encoders/decoders.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":1162,"byte_end":1212,"line_start":35,"line_end":35,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":1213,"byte_end":1216,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [`read`]: read/index.html","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":1217,"byte_end":1246,"line_start":37,"line_end":37,"column_start":1,"column_end":30}},{"value":"/ [`write`]: write/index.html","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":1247,"byte_end":1278,"line_start":38,"line_end":38,"column_start":1,"column_end":32}},{"value":"/ [`Read`]: https://doc.rust-lang.org/std/io/trait.Read.html","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":1279,"byte_end":1341,"line_start":39,"line_end":39,"column_start":1,"column_end":63}},{"value":"/ [`Write`]: https://doc.rust-lang.org/std/io/trait.Write.html","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":1342,"byte_end":1406,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":1407,"byte_end":1410,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # Helper traits","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":1411,"byte_end":1430,"line_start":42,"line_end":42,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":1431,"byte_end":1434,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ There are two helper traits provided: [`FlateReadExt`] and [`FlateWriteExt`].","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":1435,"byte_end":1516,"line_start":44,"line_end":44,"column_start":1,"column_end":82}},{"value":"/ These provide convenience methods for creating a decoder/encoder out of an","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":1517,"byte_end":1595,"line_start":45,"line_end":45,"column_start":1,"column_end":79}},{"value":"/ already existing stream to chain construction.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":1596,"byte_end":1646,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":1647,"byte_end":1650,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ [`FlateReadExt`]: trait.FlateReadExt.html","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":1651,"byte_end":1696,"line_start":48,"line_end":48,"column_start":1,"column_end":46}},{"value":"/ [`FlateWriteExt`]: trait.FlateWriteExt.html","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":1697,"byte_end":1744,"line_start":49,"line_end":49,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":1745,"byte_end":1748,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":1749,"byte_end":1756,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/ use flate2::{FlateReadExt, Compression};","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":1757,"byte_end":1801,"line_start":52,"line_end":52,"column_start":1,"column_end":45}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":1802,"byte_end":1830,"line_start":53,"line_end":53,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":1831,"byte_end":1847,"line_start":54,"line_end":54,"column_start":1,"column_end":17}},{"value":"/ use std::fs::File;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":1848,"byte_end":1870,"line_start":55,"line_end":55,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":1871,"byte_end":1874,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":1875,"byte_end":1892,"line_start":57,"line_end":57,"column_start":1,"column_end":18}},{"value":"/ #    println!(\"{}\", run().unwrap());","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":1893,"byte_end":1933,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/ # }","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":1934,"byte_end":1941,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":1942,"byte_end":1947,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ // Read contents of file with a compression stream, then decompress with GZ","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":1948,"byte_end":2027,"line_start":61,"line_end":61,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":2028,"byte_end":2031,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # fn run() -> io::Result<String> {","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":2032,"byte_end":2070,"line_start":63,"line_end":63,"column_start":1,"column_end":39}},{"value":"/ let f = File::open(\"examples/hello_world.txt\")?;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":2071,"byte_end":2123,"line_start":64,"line_end":64,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":2124,"byte_end":2127,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ //gz_encode method comes from FlateReadExt and applies to a std::fs::File","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":2128,"byte_end":2205,"line_start":66,"line_end":66,"column_start":1,"column_end":78}},{"value":"/ let data = f.gz_encode(Compression::Default);","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":2206,"byte_end":2255,"line_start":67,"line_end":67,"column_start":1,"column_end":50}},{"value":"/ let mut buffer = String::new();","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":2256,"byte_end":2291,"line_start":68,"line_end":68,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":2292,"byte_end":2295,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ //gz_decode method comes from FlateReadExt and applies to a &[u8]","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":2296,"byte_end":2365,"line_start":70,"line_end":70,"column_start":1,"column_end":70}},{"value":"/ &data.gz_decode()?.read_to_string(&mut buffer)?;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":2366,"byte_end":2418,"line_start":71,"line_end":71,"column_start":1,"column_end":53}},{"value":"/ # Ok(buffer)","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":2419,"byte_end":2435,"line_start":72,"line_end":72,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":2436,"byte_end":2443,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":2444,"byte_end":2451,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":2452,"byte_end":2455,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ # Async I/O","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":2456,"byte_end":2471,"line_start":76,"line_end":76,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":2472,"byte_end":2475,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ This crate optionally can support async I/O streams with the [Tokio stack] via","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":2476,"byte_end":2558,"line_start":78,"line_end":78,"column_start":1,"column_end":83}},{"value":"/ the `tokio` feature of this crate:","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":2559,"byte_end":2597,"line_start":79,"line_end":79,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":2598,"byte_end":2601,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ [Tokio stack]: https://tokio.rs/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":2602,"byte_end":2638,"line_start":81,"line_end":81,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":2639,"byte_end":2642,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":2643,"byte_end":2654,"line_start":83,"line_end":83,"column_start":1,"column_end":12}},{"value":"/ flate2 = { version = \"0.2\", features = [\"tokio\"] }","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":2655,"byte_end":2709,"line_start":84,"line_end":84,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":2710,"byte_end":2717,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":2718,"byte_end":2721,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ All methods are internally capable of working with streams that may return","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":2722,"byte_end":2800,"line_start":87,"line_end":87,"column_start":1,"column_end":79}},{"value":"/ [`ErrorKind::WouldBlock`] when they're not ready to perform the particular","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":2801,"byte_end":2879,"line_start":88,"line_end":88,"column_start":1,"column_end":79}},{"value":"/ operation.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":2880,"byte_end":2894,"line_start":89,"line_end":89,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":2895,"byte_end":2898,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ [`ErrorKind::WouldBlock`]: https://doc.rust-lang.org/std/io/enum.ErrorKind.html","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":2899,"byte_end":2982,"line_start":91,"line_end":91,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":2983,"byte_end":2986,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ Note that care needs to be taken when using these objects, however. The","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":2987,"byte_end":3062,"line_start":93,"line_end":93,"column_start":1,"column_end":76}},{"value":"/ Tokio runtime, in particular, requires that data is fully flushed before","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":3063,"byte_end":3139,"line_start":94,"line_end":94,"column_start":1,"column_end":77}},{"value":"/ dropping streams. For compatibility with blocking streams all streams are","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":3140,"byte_end":3217,"line_start":95,"line_end":95,"column_start":1,"column_end":78}},{"value":"/ flushed/written when they are dropped, and this is not always a suitable","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":3218,"byte_end":3294,"line_start":96,"line_end":96,"column_start":1,"column_end":77}},{"value":"/ time to perform I/O. If I/O streams are flushed before drop, however, then","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":3295,"byte_end":3373,"line_start":97,"line_end":97,"column_start":1,"column_end":79}},{"value":"/ these operations will be a noop.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":3374,"byte_end":3410,"line_start":98,"line_end":98,"column_start":1,"column_end":37}},{"value":"deny(missing_docs)","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":3465,"byte_end":3487,"line_start":100,"line_end":100,"column_start":1,"column_end":23}},{"value":"deny(missing_debug_implementations)","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":3488,"byte_end":3527,"line_start":101,"line_end":101,"column_start":1,"column_end":40}},{"value":"allow(trivial_numeric_casts)","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":3528,"byte_end":3560,"line_start":102,"line_end":102,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":937},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":13079,"byte_end":13082,"line_start":13,"line_end":13,"column_start":12,"column_end":15},"name":"Crc","qualname":"::crc::Crc","value":"Crc {  }","parent":null,"children":[{"krate":0,"index":938},{"krate":0,"index":939}],"decl_id":null,"docs":" The CRC calculated by a [`CrcReader`].","sig":null,"attributes":[{"value":"/ The CRC calculated by a [`CrcReader`].","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":12963,"byte_end":13005,"line_start":9,"line_end":9,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":13006,"byte_end":13009,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`CrcReader`]: struct.CrcReader.html","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":13010,"byte_end":13050,"line_start":11,"line_end":11,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":942},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":13278,"byte_end":13287,"line_start":22,"line_end":22,"column_start":12,"column_end":21},"name":"CrcReader","qualname":"::crc::CrcReader","value":"CrcReader {  }","parent":null,"children":[{"krate":0,"index":944},{"krate":0,"index":945}],"decl_id":null,"docs":" A wrapper around a [`Read`] that calculates the CRC.","sig":null,"attributes":[{"value":"/ A wrapper around a [`Read`] that calculates the CRC.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":13126,"byte_end":13182,"line_start":18,"line_end":18,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":13183,"byte_end":13186,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`Read`]: https://doc.rust-lang.org/std/io/trait.Read.html","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":13187,"byte_end":13249,"line_start":20,"line_end":20,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":13372,"byte_end":13375,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"new","qualname":"<Crc>::new","value":"pub fn new() -> Crc","parent":null,"children":[],"decl_id":null,"docs":" Create a new CRC.\n","sig":null,"attributes":[{"value":"/ Create a new CRC.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":13339,"byte_end":13360,"line_start":28,"line_end":28,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":13448,"byte_end":13451,"line_start":34,"line_end":34,"column_start":12,"column_end":15},"name":"sum","qualname":"<Crc>::sum","value":"pub fn sum(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" bla\n","sig":null,"attributes":[{"value":"/ bla","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":13429,"byte_end":13436,"line_start":33,"line_end":33,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":13650,"byte_end":13656,"line_start":40,"line_end":40,"column_start":12,"column_end":18},"name":"amount","qualname":"<Crc>::amount","value":"pub fn amount(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The number of bytes that have been used to calculate the CRC.\n This value is only accurate if the amount is lower than 2^32.\n","sig":null,"attributes":[{"value":"/ The number of bytes that have been used to calculate the CRC.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":13503,"byte_end":13568,"line_start":38,"line_end":38,"column_start":5,"column_end":70}},{"value":"/ This value is only accurate if the amount is lower than 2^32.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":13573,"byte_end":13638,"line_start":39,"line_end":39,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":13757,"byte_end":13763,"line_start":45,"line_end":45,"column_start":12,"column_end":18},"name":"update","qualname":"<Crc>::update","value":"pub fn update(&mut Self, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Update the CRC with the bytes in `data`.\n","sig":null,"attributes":[{"value":"/ Update the CRC with the bytes in `data`.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":13701,"byte_end":13745,"line_start":44,"line_end":44,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":14010,"byte_end":14015,"line_start":53,"line_end":53,"column_start":12,"column_end":17},"name":"reset","qualname":"<Crc>::reset","value":"pub fn reset(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Reset the CRC.\n","sig":null,"attributes":[{"value":"/ Reset the CRC.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":13980,"byte_end":13998,"line_start":52,"line_end":52,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":14163,"byte_end":14170,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"combine","qualname":"<Crc>::combine","value":"pub fn combine(&mut Self, &Crc)","parent":null,"children":[],"decl_id":null,"docs":" Combine the CRC with the CRC for the subsequent block of bytes.\n","sig":null,"attributes":[{"value":"/ Combine the CRC with the CRC for the subsequent block of bytes.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":14084,"byte_end":14151,"line_start":58,"line_end":58,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":14573,"byte_end":14576,"line_start":71,"line_end":71,"column_start":12,"column_end":15},"name":"new","qualname":"<CrcReader<R>>::new","value":"pub fn new(R) -> CrcReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new CrcReader.\n","sig":null,"attributes":[{"value":"/ Create a new CrcReader.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":14534,"byte_end":14561,"line_start":70,"line_end":70,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":14765,"byte_end":14768,"line_start":81,"line_end":81,"column_start":12,"column_end":15},"name":"crc","qualname":"<CrcReader<R>>::crc","value":"pub fn crc(&Self) -> &Crc","parent":null,"children":[],"decl_id":null,"docs":" Get the Crc for this CrcReader.\n","sig":null,"attributes":[{"value":"/ Get the Crc for this CrcReader.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":14718,"byte_end":14753,"line_start":80,"line_end":80,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":14880,"byte_end":14890,"line_start":86,"line_end":86,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<CrcReader<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Get the reader that is wrapped by this CrcReader.\n","sig":null,"attributes":[{"value":"/ Get the reader that is wrapped by this CrcReader.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":14815,"byte_end":14868,"line_start":85,"line_end":85,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":15012,"byte_end":15019,"line_start":91,"line_end":91,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<CrcReader<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Get the reader that is wrapped by this CrcReader by reference.\n","sig":null,"attributes":[{"value":"/ Get the reader that is wrapped by this CrcReader by reference.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":14934,"byte_end":15000,"line_start":90,"line_end":90,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":15154,"byte_end":15161,"line_start":96,"line_end":96,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<CrcReader<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the reader that is wrapped by this CrcReader.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the reader that is wrapped by this CrcReader.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":15066,"byte_end":15142,"line_start":95,"line_end":95,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":15268,"byte_end":15273,"line_start":101,"line_end":101,"column_start":12,"column_end":17},"name":"reset","qualname":"<CrcReader<R>>::reset","value":"pub fn reset(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Reset the Crc in this CrcReader.\n","sig":null,"attributes":[{"value":"/ Reset the Crc in this CrcReader.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":15220,"byte_end":15256,"line_start":100,"line_end":100,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":949},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":23162,"byte_end":23176,"line_start":45,"line_end":45,"column_start":12,"column_end":26},"name":"DeflateEncoder","qualname":"::deflate::bufread::DeflateEncoder","value":"DeflateEncoder {  }","parent":null,"children":[{"krate":0,"index":951},{"krate":0,"index":952}],"decl_id":null,"docs":" A DEFLATE encoder, or compressor.","sig":null,"attributes":[{"value":"/ A DEFLATE encoder, or compressor.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":22183,"byte_end":22220,"line_start":13,"line_end":13,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":22221,"byte_end":22224,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This structure implements a [`BufRead`] interface and will read uncompressed","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":22225,"byte_end":22305,"line_start":15,"line_end":15,"column_start":1,"column_end":81}},{"value":"/ data from an underlying stream and emit a stream of compressed data.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":22306,"byte_end":22378,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":22379,"byte_end":22382,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`BufRead`]: https://doc.rust-lang.org/std/io/trait.BufRead.html","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":22383,"byte_end":22451,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":22452,"byte_end":22455,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":22456,"byte_end":22470,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":22471,"byte_end":22474,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":22475,"byte_end":22482,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":22483,"byte_end":22511,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":22512,"byte_end":22528,"line_start":24,"line_end":24,"column_start":1,"column_end":17}},{"value":"/ use flate2::Compression;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":22529,"byte_end":22557,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/ use flate2::bufread::DeflateEncoder;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":22558,"byte_end":22598,"line_start":26,"line_end":26,"column_start":1,"column_end":41}},{"value":"/ use std::fs::File;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":22599,"byte_end":22621,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"/ use std::io::BufReader;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":22622,"byte_end":22649,"line_start":28,"line_end":28,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":22650,"byte_end":22653,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":22654,"byte_end":22671,"line_start":30,"line_end":30,"column_start":1,"column_end":18}},{"value":"/ #    println!(\"{:?}\", open_hello_world().unwrap());","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":22672,"byte_end":22727,"line_start":31,"line_end":31,"column_start":1,"column_end":56}},{"value":"/ # }","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":22728,"byte_end":22735,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":22736,"byte_end":22741,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ // Opens sample file, compresses the contents and returns a Vector","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":22742,"byte_end":22812,"line_start":34,"line_end":34,"column_start":1,"column_end":71}},{"value":"/ fn open_hello_world() -> io::Result<Vec<u8>> {","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":22813,"byte_end":22863,"line_start":35,"line_end":35,"column_start":1,"column_end":51}},{"value":"/    let f = File::open(\"examples/hello_world.txt\")?;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":22864,"byte_end":22919,"line_start":36,"line_end":36,"column_start":1,"column_end":56}},{"value":"/    let b = BufReader::new(f);","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":22920,"byte_end":22953,"line_start":37,"line_end":37,"column_start":1,"column_end":34}},{"value":"/    let mut deflater = DeflateEncoder::new(b, Compression::Fast);","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":22954,"byte_end":23022,"line_start":38,"line_end":38,"column_start":1,"column_end":69}},{"value":"/    let mut buffer = Vec::new();","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":23023,"byte_end":23058,"line_start":39,"line_end":39,"column_start":1,"column_end":36}},{"value":"/    deflater.read_to_end(&mut buffer)?;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":23059,"byte_end":23101,"line_start":40,"line_end":40,"column_start":1,"column_end":43}},{"value":"/    Ok(buffer)","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":23102,"byte_end":23119,"line_start":41,"line_end":41,"column_start":1,"column_end":18}},{"value":"/ }","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":23120,"byte_end":23125,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":23126,"byte_end":23133,"line_start":43,"line_end":43,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":23392,"byte_end":23395,"line_start":54,"line_end":54,"column_start":12,"column_end":15},"name":"new","qualname":"<DeflateEncoder<R>>::new","value":"pub fn new(R, ::Compression) -> DeflateEncoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder which will read uncompressed data from the given\n stream and emit the compressed stream.\n","sig":null,"attributes":[{"value":"/ Creates a new encoder which will read uncompressed data from the given","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":23259,"byte_end":23333,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ stream and emit the compressed stream.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":23338,"byte_end":23380,"line_start":53,"line_end":53,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":24056,"byte_end":24061,"line_start":74,"line_end":74,"column_start":12,"column_end":17},"name":"reset","qualname":"<DeflateEncoder<R>>::reset","value":"pub fn reset(&mut Self, R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this encoder entirely, swapping out the input\n stream for another.","sig":null,"attributes":[{"value":"/ Resets the state of this encoder entirely, swapping out the input","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":23677,"byte_end":23746,"line_start":67,"line_end":67,"column_start":5,"column_end":74}},{"value":"/ stream for another.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":23751,"byte_end":23774,"line_start":68,"line_end":68,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":23779,"byte_end":23782,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ This function will reset the internal state of this encoder and replace","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":23787,"byte_end":23862,"line_start":70,"line_end":70,"column_start":5,"column_end":80}},{"value":"/ the input stream with the one provided, returning the previous input","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":23867,"byte_end":23939,"line_start":71,"line_end":71,"column_start":5,"column_end":77}},{"value":"/ stream. Future data read from this encoder will be the compressed","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":23944,"byte_end":24013,"line_start":72,"line_end":72,"column_start":5,"column_end":74}},{"value":"/ version of `r`'s data.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":24018,"byte_end":24044,"line_start":73,"line_end":73,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":24231,"byte_end":24238,"line_start":80,"line_end":80,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<DeflateEncoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying reader","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":24170,"byte_end":24219,"line_start":79,"line_end":79,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":24483,"byte_end":24490,"line_start":88,"line_end":88,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<DeflateEncoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":24283,"byte_end":24340,"line_start":84,"line_end":84,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":24345,"byte_end":24348,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":24353,"byte_end":24425,"line_start":86,"line_end":86,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":24430,"byte_end":24471,"line_start":87,"line_end":87,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":24618,"byte_end":24628,"line_start":93,"line_end":93,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<DeflateEncoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, returning the underlying reader.\n","sig":null,"attributes":[{"value":"/ Consumes this encoder, returning the underlying reader.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":24547,"byte_end":24606,"line_start":92,"line_end":92,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":24899,"byte_end":24907,"line_start":101,"line_end":101,"column_start":12,"column_end":20},"name":"total_in","qualname":"<DeflateEncoder<R>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that have been read into this compressor.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that have been read into this compressor.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":24670,"byte_end":24743,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":24748,"byte_end":24751,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ Note that not all bytes read from the underlying object may be accounted","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":24756,"byte_end":24832,"line_start":99,"line_end":99,"column_start":5,"column_end":81}},{"value":"/ for, there may still be some active buffering.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":24837,"byte_end":24887,"line_start":100,"line_end":100,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":25141,"byte_end":25150,"line_start":109,"line_end":109,"column_start":12,"column_end":21},"name":"total_out","qualname":"<DeflateEncoder<R>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the compressor has produced.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the compressor has produced.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":24964,"byte_end":25029,"line_start":105,"line_end":105,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":25034,"byte_end":25037,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ Note that not all bytes may have been read yet, some may still be","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":25042,"byte_end":25111,"line_start":107,"line_end":107,"column_start":5,"column_end":74}},{"value":"/ buffered.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":25116,"byte_end":25129,"line_start":108,"line_end":108,"column_start":5,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":956},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":26969,"byte_end":26983,"line_start":172,"line_end":172,"column_start":12,"column_end":26},"name":"DeflateDecoder","qualname":"::deflate::bufread::DeflateDecoder","value":"DeflateDecoder {  }","parent":null,"children":[{"krate":0,"index":958},{"krate":0,"index":959}],"decl_id":null,"docs":" A DEFLATE decoder, or decompressor.","sig":null,"attributes":[{"value":"/ A DEFLATE decoder, or decompressor.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":25893,"byte_end":25932,"line_start":140,"line_end":140,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":25933,"byte_end":25936,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ This structure implements a [`BufRead`] interface and takes a stream of","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":25937,"byte_end":26012,"line_start":142,"line_end":142,"column_start":1,"column_end":76}},{"value":"/ compressed data as input, providing the decompressed data when read from.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":26013,"byte_end":26090,"line_start":143,"line_end":143,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":26091,"byte_end":26094,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ [`BufRead`]: https://doc.rust-lang.org/std/io/trait.BufRead.html","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":26095,"byte_end":26163,"line_start":145,"line_end":145,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":26164,"byte_end":26167,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":26168,"byte_end":26182,"line_start":147,"line_end":147,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":26183,"byte_end":26186,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":26187,"byte_end":26194,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":26195,"byte_end":26223,"line_start":150,"line_end":150,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":26224,"byte_end":26240,"line_start":151,"line_end":151,"column_start":1,"column_end":17}},{"value":"/ # use flate2::Compression;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":26241,"byte_end":26271,"line_start":152,"line_end":152,"column_start":1,"column_end":31}},{"value":"/ # use flate2::write::DeflateEncoder;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":26272,"byte_end":26312,"line_start":153,"line_end":153,"column_start":1,"column_end":41}},{"value":"/ use flate2::bufread::DeflateDecoder;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":26313,"byte_end":26353,"line_start":154,"line_end":154,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":26354,"byte_end":26357,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":26358,"byte_end":26375,"line_start":156,"line_end":156,"column_start":1,"column_end":18}},{"value":"/ #    let mut e = DeflateEncoder::new(Vec::new(), Compression::Default);","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":26376,"byte_end":26451,"line_start":157,"line_end":157,"column_start":1,"column_end":76}},{"value":"/ #    e.write(b\"Hello World\").unwrap();","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":26452,"byte_end":26494,"line_start":158,"line_end":158,"column_start":1,"column_end":43}},{"value":"/ #    let bytes = e.finish().unwrap();","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":26495,"byte_end":26536,"line_start":159,"line_end":159,"column_start":1,"column_end":42}},{"value":"/ #    println!(\"{}\", decode_reader(bytes).unwrap());","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":26537,"byte_end":26592,"line_start":160,"line_end":160,"column_start":1,"column_end":56}},{"value":"/ # }","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":26593,"byte_end":26600,"line_start":161,"line_end":161,"column_start":1,"column_end":8}},{"value":"/ // Uncompresses a Deflate Encoded vector of bytes and returns a string or error","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":26601,"byte_end":26684,"line_start":162,"line_end":162,"column_start":1,"column_end":84}},{"value":"/ // Here &[u8] implements Read","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":26685,"byte_end":26718,"line_start":163,"line_end":163,"column_start":1,"column_end":34}},{"value":"/ fn decode_reader(bytes: Vec<u8>) -> io::Result<String> {","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":26719,"byte_end":26779,"line_start":164,"line_end":164,"column_start":1,"column_end":61}},{"value":"/    let mut deflater = DeflateDecoder::new(&bytes[..]);","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":26780,"byte_end":26838,"line_start":165,"line_end":165,"column_start":1,"column_end":59}},{"value":"/    let mut s = String::new();","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":26839,"byte_end":26872,"line_start":166,"line_end":166,"column_start":1,"column_end":34}},{"value":"/    deflater.read_to_string(&mut s)?;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":26873,"byte_end":26913,"line_start":167,"line_end":167,"column_start":1,"column_end":41}},{"value":"/    Ok(s)","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":26914,"byte_end":26926,"line_start":168,"line_end":168,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":26927,"byte_end":26932,"line_start":169,"line_end":169,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":26933,"byte_end":26940,"line_start":170,"line_end":170,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":27271,"byte_end":27274,"line_start":184,"line_end":184,"column_start":12,"column_end":15},"name":"new","qualname":"<DeflateDecoder<R>>::new","value":"pub fn new(R) -> DeflateDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder which will decompress data read from the given\n stream.\n","sig":null,"attributes":[{"value":"/ Creates a new decoder which will decompress data read from the given","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":27171,"byte_end":27243,"line_start":182,"line_end":182,"column_start":5,"column_end":77}},{"value":"/ stream.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":27248,"byte_end":27259,"line_start":183,"line_end":183,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":27814,"byte_end":27819,"line_start":200,"line_end":200,"column_start":12,"column_end":17},"name":"reset","qualname":"<DeflateDecoder<R>>::reset","value":"pub fn reset(&mut Self, R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this decoder entirely, swapping out the input\n stream for another.","sig":null,"attributes":[{"value":"/ Resets the state of this decoder entirely, swapping out the input","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":27442,"byte_end":27511,"line_start":193,"line_end":193,"column_start":5,"column_end":74}},{"value":"/ stream for another.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":27516,"byte_end":27539,"line_start":194,"line_end":194,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":27544,"byte_end":27547,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ This will reset the internal state of this decoder and replace the","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":27552,"byte_end":27622,"line_start":196,"line_end":196,"column_start":5,"column_end":75}},{"value":"/ input stream with the one provided, returning the previous input","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":27627,"byte_end":27695,"line_start":197,"line_end":197,"column_start":5,"column_end":73}},{"value":"/ stream. Future data read from this decoder will be the decompressed","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":27700,"byte_end":27771,"line_start":198,"line_end":198,"column_start":5,"column_end":76}},{"value":"/ version of `r`'s data.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":27776,"byte_end":27802,"line_start":199,"line_end":199,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":28106,"byte_end":28116,"line_start":209,"line_end":209,"column_start":12,"column_end":22},"name":"reset_data","qualname":"<DeflateDecoder<R>>::reset_data","value":"pub fn reset_data(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this decoder's data","sig":null,"attributes":[{"value":"/ Resets the state of this decoder's data","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":27928,"byte_end":27971,"line_start":205,"line_end":205,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":27976,"byte_end":27979,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ This will reset the internal state of this decoder. It will continue","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":27984,"byte_end":28056,"line_start":207,"line_end":207,"column_start":5,"column_end":77}},{"value":"/ reading from the same stream.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":28061,"byte_end":28094,"line_start":208,"line_end":208,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":28236,"byte_end":28243,"line_start":214,"line_end":214,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<DeflateDecoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":28175,"byte_end":28224,"line_start":213,"line_end":213,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":28488,"byte_end":28495,"line_start":222,"line_end":222,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<DeflateDecoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":28288,"byte_end":28345,"line_start":218,"line_end":218,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":28350,"byte_end":28353,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":28358,"byte_end":28430,"line_start":220,"line_end":220,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":28435,"byte_end":28476,"line_start":221,"line_end":221,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":28623,"byte_end":28633,"line_start":227,"line_end":227,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<DeflateDecoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this decoder, returning the underlying reader.\n","sig":null,"attributes":[{"value":"/ Consumes this decoder, returning the underlying reader.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":28552,"byte_end":28611,"line_start":226,"line_end":226,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":28902,"byte_end":28910,"line_start":235,"line_end":235,"column_start":12,"column_end":20},"name":"total_in","qualname":"<DeflateDecoder<R>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has consumed.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has consumed.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":28675,"byte_end":28742,"line_start":231,"line_end":231,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":28747,"byte_end":28750,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ Note that this will likely be smaller than what the decompressor","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":28755,"byte_end":28823,"line_start":233,"line_end":233,"column_start":5,"column_end":73}},{"value":"/ actually read from the underlying stream due to buffering.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":28828,"byte_end":28890,"line_start":234,"line_end":234,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":29046,"byte_end":29055,"line_start":240,"line_end":240,"column_start":12,"column_end":21},"name":"total_out","qualname":"<DeflateDecoder<R>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has produced.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has produced.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":28967,"byte_end":29034,"line_start":239,"line_end":239,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":963},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":30922,"byte_end":30936,"line_start":41,"line_end":41,"column_start":12,"column_end":26},"name":"DeflateEncoder","qualname":"::deflate::read::DeflateEncoder","value":"DeflateEncoder {  }","parent":null,"children":[{"krate":0,"index":965}],"decl_id":null,"docs":" A DEFLATE encoder, or compressor.","sig":null,"attributes":[{"value":"/ A DEFLATE encoder, or compressor.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":29997,"byte_end":30034,"line_start":12,"line_end":12,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":30035,"byte_end":30038,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This structure implements a [`Read`] interface and will read uncompressed","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":30039,"byte_end":30116,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ data from an underlying stream and emit a stream of compressed data.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":30117,"byte_end":30189,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":30190,"byte_end":30193,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`Read`]: https://doc.rust-lang.org/std/io/trait.Read.html","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":30194,"byte_end":30256,"line_start":17,"line_end":17,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":30257,"byte_end":30260,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":30261,"byte_end":30275,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":30276,"byte_end":30279,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":30280,"byte_end":30287,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":30288,"byte_end":30316,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":30317,"byte_end":30333,"line_start":23,"line_end":23,"column_start":1,"column_end":17}},{"value":"/ use flate2::Compression;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":30334,"byte_end":30362,"line_start":24,"line_end":24,"column_start":1,"column_end":29}},{"value":"/ use flate2::read::DeflateEncoder;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":30363,"byte_end":30400,"line_start":25,"line_end":25,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":30401,"byte_end":30404,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":30405,"byte_end":30422,"line_start":27,"line_end":27,"column_start":1,"column_end":18}},{"value":"/ #    println!(\"{:?}\", deflateencoder_read_hello_world().unwrap());","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":30423,"byte_end":30493,"line_start":28,"line_end":28,"column_start":1,"column_end":71}},{"value":"/ # }","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":30494,"byte_end":30501,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":30502,"byte_end":30507,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ // Return a vector containing the Deflate compressed version of hello world","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":30508,"byte_end":30587,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ fn deflateencoder_read_hello_world() -> io::Result<Vec<u8>> {","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":30588,"byte_end":30653,"line_start":32,"line_end":32,"column_start":1,"column_end":66}},{"value":"/    let mut ret_vec = [0;100];","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":30654,"byte_end":30687,"line_start":33,"line_end":33,"column_start":1,"column_end":34}},{"value":"/    let c = b\"hello world\";","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":30688,"byte_end":30718,"line_start":34,"line_end":34,"column_start":1,"column_end":31}},{"value":"/    let mut deflater = DeflateEncoder::new(&c[..], Compression::Fast);","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":30719,"byte_end":30792,"line_start":35,"line_end":35,"column_start":1,"column_end":74}},{"value":"/    let count = deflater.read(&mut ret_vec)?;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":30793,"byte_end":30841,"line_start":36,"line_end":36,"column_start":1,"column_end":49}},{"value":"/    Ok(ret_vec[0..count].to_vec())","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":30842,"byte_end":30879,"line_start":37,"line_end":37,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":30880,"byte_end":30885,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":30886,"byte_end":30893,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":31166,"byte_end":31169,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"new","qualname":"<DeflateEncoder<R>>::new","value":"pub fn new(R, ::Compression) -> DeflateEncoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder which will read uncompressed data from the given\n stream and emit the compressed stream.\n","sig":null,"attributes":[{"value":"/ Creates a new encoder which will read uncompressed data from the given","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":31033,"byte_end":31107,"line_start":46,"line_end":46,"column_start":5,"column_end":79}},{"value":"/ stream and emit the compressed stream.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":31112,"byte_end":31154,"line_start":47,"line_end":47,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":31901,"byte_end":31906,"line_start":66,"line_end":66,"column_start":12,"column_end":17},"name":"reset","qualname":"<DeflateEncoder<R>>::reset","value":"pub fn reset(&mut Self, R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this encoder entirely, swapping out the input\n stream for another.","sig":null,"attributes":[{"value":"/ Resets the state of this encoder entirely, swapping out the input","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":31372,"byte_end":31441,"line_start":56,"line_end":56,"column_start":5,"column_end":74}},{"value":"/ stream for another.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":31446,"byte_end":31469,"line_start":57,"line_end":57,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":31474,"byte_end":31477,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ This function will reset the internal state of this encoder and replace","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":31482,"byte_end":31557,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ the input stream with the one provided, returning the previous input","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":31562,"byte_end":31634,"line_start":60,"line_end":60,"column_start":5,"column_end":77}},{"value":"/ stream. Future data read from this encoder will be the compressed","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":31639,"byte_end":31708,"line_start":61,"line_end":61,"column_start":5,"column_end":74}},{"value":"/ version of `r`'s data.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":31713,"byte_end":31739,"line_start":62,"line_end":62,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":31744,"byte_end":31747,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Note that there may be currently buffered data when this function is","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":31752,"byte_end":31824,"line_start":64,"line_end":64,"column_start":5,"column_end":77}},{"value":"/ called, and in that case the buffered data is discarded.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":31829,"byte_end":31889,"line_start":65,"line_end":65,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":32102,"byte_end":32109,"line_start":72,"line_end":72,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<DeflateEncoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying reader","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":32041,"byte_end":32090,"line_start":71,"line_end":71,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":32375,"byte_end":32382,"line_start":80,"line_end":80,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<DeflateEncoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":32175,"byte_end":32232,"line_start":76,"line_end":76,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":32237,"byte_end":32240,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":32245,"byte_end":32317,"line_start":78,"line_end":78,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":32322,"byte_end":32363,"line_start":79,"line_end":79,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":32723,"byte_end":32733,"line_start":89,"line_end":89,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<DeflateEncoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Consumes this encoder, returning the underlying reader.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":32456,"byte_end":32515,"line_start":84,"line_end":84,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":32520,"byte_end":32523,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ Note that there may be buffered bytes which are not re-acquired as part","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":32528,"byte_end":32603,"line_start":86,"line_end":86,"column_start":5,"column_end":80}},{"value":"/ of this transition. It's recommended to only call this function after","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":32608,"byte_end":32681,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ EOF has been reached.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":32686,"byte_end":32711,"line_start":88,"line_end":88,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":33032,"byte_end":33040,"line_start":97,"line_end":97,"column_start":12,"column_end":20},"name":"total_in","qualname":"<DeflateEncoder<R>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that have been read into this compressor.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that have been read into this compressor.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":32803,"byte_end":32876,"line_start":93,"line_end":93,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":32881,"byte_end":32884,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ Note that not all bytes read from the underlying object may be accounted","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":32889,"byte_end":32965,"line_start":95,"line_end":95,"column_start":5,"column_end":81}},{"value":"/ for, there may still be some active buffering.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":32970,"byte_end":33020,"line_start":96,"line_end":96,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":33275,"byte_end":33284,"line_start":105,"line_end":105,"column_start":12,"column_end":21},"name":"total_out","qualname":"<DeflateEncoder<R>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the compressor has produced.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the compressor has produced.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":33098,"byte_end":33163,"line_start":101,"line_end":101,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":33168,"byte_end":33171,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ Note that not all bytes may have been read yet, some may still be","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":33176,"byte_end":33245,"line_start":103,"line_end":103,"column_start":5,"column_end":74}},{"value":"/ buffered.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":33250,"byte_end":33263,"line_start":104,"line_end":104,"column_start":5,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":969},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":35053,"byte_end":35067,"line_start":168,"line_end":168,"column_start":12,"column_end":26},"name":"DeflateDecoder","qualname":"::deflate::read::DeflateDecoder","value":"DeflateDecoder {  }","parent":null,"children":[{"krate":0,"index":971}],"decl_id":null,"docs":" A DEFLATE decoder, or decompressor.","sig":null,"attributes":[{"value":"/ A DEFLATE decoder, or decompressor.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":33989,"byte_end":34028,"line_start":136,"line_end":136,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":34029,"byte_end":34032,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This structure implements a [`Read`] interface and takes a stream of","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":34033,"byte_end":34105,"line_start":138,"line_end":138,"column_start":1,"column_end":73}},{"value":"/ compressed data as input, providing the decompressed data when read from.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":34106,"byte_end":34183,"line_start":139,"line_end":139,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":34184,"byte_end":34187,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ [`Read`]: https://doc.rust-lang.org/std/io/trait.Read.html","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":34188,"byte_end":34250,"line_start":141,"line_end":141,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":34251,"byte_end":34254,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":34255,"byte_end":34269,"line_start":143,"line_end":143,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":34270,"byte_end":34273,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":34274,"byte_end":34281,"line_start":145,"line_end":145,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":34282,"byte_end":34310,"line_start":146,"line_end":146,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":34311,"byte_end":34327,"line_start":147,"line_end":147,"column_start":1,"column_end":17}},{"value":"/ # use flate2::Compression;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":34328,"byte_end":34358,"line_start":148,"line_end":148,"column_start":1,"column_end":31}},{"value":"/ # use flate2::write::DeflateEncoder;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":34359,"byte_end":34399,"line_start":149,"line_end":149,"column_start":1,"column_end":41}},{"value":"/ use flate2::read::DeflateDecoder;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":34400,"byte_end":34437,"line_start":150,"line_end":150,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":34438,"byte_end":34441,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":34442,"byte_end":34459,"line_start":152,"line_end":152,"column_start":1,"column_end":18}},{"value":"/ #    let mut e = DeflateEncoder::new(Vec::new(), Compression::Default);","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":34460,"byte_end":34535,"line_start":153,"line_end":153,"column_start":1,"column_end":76}},{"value":"/ #    e.write(b\"Hello World\").unwrap();","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":34536,"byte_end":34578,"line_start":154,"line_end":154,"column_start":1,"column_end":43}},{"value":"/ #    let bytes = e.finish().unwrap();","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":34579,"byte_end":34620,"line_start":155,"line_end":155,"column_start":1,"column_end":42}},{"value":"/ #    println!(\"{}\", decode_reader(bytes).unwrap());","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":34621,"byte_end":34676,"line_start":156,"line_end":156,"column_start":1,"column_end":56}},{"value":"/ # }","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":34677,"byte_end":34684,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ // Uncompresses a Deflate Encoded vector of bytes and returns a string or error","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":34685,"byte_end":34768,"line_start":158,"line_end":158,"column_start":1,"column_end":84}},{"value":"/ // Here &[u8] implements Read","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":34769,"byte_end":34802,"line_start":159,"line_end":159,"column_start":1,"column_end":34}},{"value":"/ fn decode_reader(bytes: Vec<u8>) -> io::Result<String> {","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":34803,"byte_end":34863,"line_start":160,"line_end":160,"column_start":1,"column_end":61}},{"value":"/    let mut deflater = DeflateDecoder::new(&bytes[..]);","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":34864,"byte_end":34922,"line_start":161,"line_end":161,"column_start":1,"column_end":59}},{"value":"/    let mut s = String::new();","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":34923,"byte_end":34956,"line_start":162,"line_end":162,"column_start":1,"column_end":34}},{"value":"/    deflater.read_to_string(&mut s)?;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":34957,"byte_end":34997,"line_start":163,"line_end":163,"column_start":1,"column_end":41}},{"value":"/    Ok(s)","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":34998,"byte_end":35010,"line_start":164,"line_end":164,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":35011,"byte_end":35016,"line_start":165,"line_end":165,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":35017,"byte_end":35024,"line_start":166,"line_end":166,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":35266,"byte_end":35269,"line_start":177,"line_end":177,"column_start":12,"column_end":15},"name":"new","qualname":"<DeflateDecoder<R>>::new","value":"pub fn new(R) -> DeflateDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder which will decompress data read from the given\n stream.\n","sig":null,"attributes":[{"value":"/ Creates a new decoder which will decompress data read from the given","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":35166,"byte_end":35238,"line_start":175,"line_end":175,"column_start":5,"column_end":77}},{"value":"/ stream.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":35243,"byte_end":35254,"line_start":176,"line_end":176,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":35587,"byte_end":35599,"line_start":185,"line_end":185,"column_start":12,"column_end":24},"name":"new_with_buf","qualname":"<DeflateDecoder<R>>::new_with_buf","value":"pub fn new_with_buf(R, Vec<u8>) -> DeflateDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Same as `new`, but the intermediate buffer for data is specified.","sig":null,"attributes":[{"value":"/ Same as `new`, but the intermediate buffer for data is specified.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":35370,"byte_end":35439,"line_start":181,"line_end":181,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":35444,"byte_end":35447,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ Note that the capacity of the intermediate buffer is never increased,","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":35452,"byte_end":35525,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ and it is recommended for it to be large.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":35530,"byte_end":35575,"line_start":184,"line_end":184,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":36319,"byte_end":36324,"line_start":203,"line_end":203,"column_start":12,"column_end":17},"name":"reset","qualname":"<DeflateDecoder<R>>::reset","value":"pub fn reset(&mut Self, R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this decoder entirely, swapping out the input\n stream for another.","sig":null,"attributes":[{"value":"/ Resets the state of this decoder entirely, swapping out the input","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":35797,"byte_end":35866,"line_start":193,"line_end":193,"column_start":5,"column_end":74}},{"value":"/ stream for another.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":35871,"byte_end":35894,"line_start":194,"line_end":194,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":35899,"byte_end":35902,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ This will reset the internal state of this decoder and replace the","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":35907,"byte_end":35977,"line_start":196,"line_end":196,"column_start":5,"column_end":75}},{"value":"/ input stream with the one provided, returning the previous input","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":35982,"byte_end":36050,"line_start":197,"line_end":197,"column_start":5,"column_end":73}},{"value":"/ stream. Future data read from this decoder will be the decompressed","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":36055,"byte_end":36126,"line_start":198,"line_end":198,"column_start":5,"column_end":76}},{"value":"/ version of `r`'s data.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":36131,"byte_end":36157,"line_start":199,"line_end":199,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":36162,"byte_end":36165,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Note that there may be currently buffered data when this function is","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":36170,"byte_end":36242,"line_start":201,"line_end":201,"column_start":5,"column_end":77}},{"value":"/ called, and in that case the buffered data is discarded.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":36247,"byte_end":36307,"line_start":202,"line_end":202,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":36520,"byte_end":36527,"line_start":209,"line_end":209,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<DeflateDecoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":36459,"byte_end":36508,"line_start":208,"line_end":208,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":36793,"byte_end":36800,"line_start":217,"line_end":217,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<DeflateDecoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":36593,"byte_end":36650,"line_start":213,"line_end":213,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":36655,"byte_end":36658,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":36663,"byte_end":36735,"line_start":215,"line_end":215,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":36740,"byte_end":36781,"line_start":216,"line_end":216,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":37141,"byte_end":37151,"line_start":226,"line_end":226,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<DeflateDecoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this decoder, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Consumes this decoder, returning the underlying reader.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":36874,"byte_end":36933,"line_start":221,"line_end":221,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":36938,"byte_end":36941,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ Note that there may be buffered bytes which are not re-acquired as part","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":36946,"byte_end":37021,"line_start":223,"line_end":223,"column_start":5,"column_end":80}},{"value":"/ of this transition. It's recommended to only call this function after","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":37026,"byte_end":37099,"line_start":224,"line_end":224,"column_start":5,"column_end":78}},{"value":"/ EOF has been reached.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":37104,"byte_end":37129,"line_start":225,"line_end":225,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":37448,"byte_end":37456,"line_start":234,"line_end":234,"column_start":12,"column_end":20},"name":"total_in","qualname":"<DeflateDecoder<R>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has consumed.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has consumed.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":37221,"byte_end":37288,"line_start":230,"line_end":230,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":37293,"byte_end":37296,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ Note that this will likely be smaller than what the decompressor","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":37301,"byte_end":37369,"line_start":232,"line_end":232,"column_start":5,"column_end":73}},{"value":"/ actually read from the underlying stream due to buffering.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":37374,"byte_end":37436,"line_start":233,"line_end":233,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":37593,"byte_end":37602,"line_start":239,"line_end":239,"column_start":12,"column_end":21},"name":"total_out","qualname":"<DeflateDecoder<R>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has produced.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has produced.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":37514,"byte_end":37581,"line_start":238,"line_end":238,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":975},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":39185,"byte_end":39199,"line_start":35,"line_end":35,"column_start":12,"column_end":26},"name":"DeflateEncoder","qualname":"::deflate::write::DeflateEncoder","value":"DeflateEncoder {  }","parent":null,"children":[{"krate":0,"index":977}],"decl_id":null,"docs":" A DEFLATE encoder, or compressor.","sig":null,"attributes":[{"value":"/ A DEFLATE encoder, or compressor.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":38497,"byte_end":38534,"line_start":12,"line_end":12,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":38535,"byte_end":38538,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This structure implements a [`Write`] interface and takes a stream of","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":38539,"byte_end":38612,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/ uncompressed data, writing the compressed data to the wrapped writer.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":38613,"byte_end":38686,"line_start":15,"line_end":15,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":38687,"byte_end":38690,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`Write`]: https://doc.rust-lang.org/std/io/trait.Write.html","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":38691,"byte_end":38755,"line_start":17,"line_end":17,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":38756,"byte_end":38759,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":38760,"byte_end":38774,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":38775,"byte_end":38778,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":38779,"byte_end":38786,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":38787,"byte_end":38815,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ use flate2::Compression;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":38816,"byte_end":38844,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/ use flate2::write::DeflateEncoder;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":38845,"byte_end":38883,"line_start":24,"line_end":24,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":38884,"byte_end":38887,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ // Vec<u8> implements Write to print the compressed bytes of sample string","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":38888,"byte_end":38966,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ # fn main() {","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":38967,"byte_end":38984,"line_start":27,"line_end":27,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":38985,"byte_end":38988,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ let mut e = DeflateEncoder::new(Vec::new(), Compression::Default);","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":38989,"byte_end":39059,"line_start":29,"line_end":29,"column_start":1,"column_end":71}},{"value":"/ e.write(b\"Hello World\").unwrap();","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":39060,"byte_end":39097,"line_start":30,"line_end":30,"column_start":1,"column_end":38}},{"value":"/ println!(\"{:?}\", e.finish().unwrap());","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":39098,"byte_end":39140,"line_start":31,"line_end":31,"column_start":1,"column_end":43}},{"value":"/ # }","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":39141,"byte_end":39148,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":39149,"byte_end":39156,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":39529,"byte_end":39532,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<DeflateEncoder<W>>::new","value":"pub fn new(W, ::Compression) -> DeflateEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder which will write compressed data to the stream\n given at the given compression level.","sig":null,"attributes":[{"value":"/ Creates a new encoder which will write compressed data to the stream","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":39291,"byte_end":39363,"line_start":40,"line_end":40,"column_start":5,"column_end":77}},{"value":"/ given at the given compression level.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":39368,"byte_end":39409,"line_start":41,"line_end":41,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":39414,"byte_end":39417,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ When this encoder is dropped or unwrapped the final pieces of data will","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":39422,"byte_end":39497,"line_start":43,"line_end":43,"column_start":5,"column_end":80}},{"value":"/ be flushed.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":39502,"byte_end":39517,"line_start":44,"line_end":44,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":39761,"byte_end":39768,"line_start":52,"line_end":52,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<DeflateEncoder<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying writer.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":39699,"byte_end":39749,"line_start":51,"line_end":51,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":40045,"byte_end":40052,"line_start":60,"line_end":60,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<DeflateEncoder<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying writer.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":39824,"byte_end":39882,"line_start":56,"line_end":56,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":39887,"byte_end":39890,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ Note that mutating the output/input state of the stream may corrupt this","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":39895,"byte_end":39971,"line_start":58,"line_end":58,"column_start":5,"column_end":81}},{"value":"/ object, so care must be taken when using this method.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":39976,"byte_end":40033,"line_start":59,"line_end":59,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":40930,"byte_end":40935,"line_start":80,"line_end":80,"column_start":12,"column_end":17},"name":"reset","qualname":"<DeflateEncoder<W>>::reset","value":"pub fn reset(&mut Self, W) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this encoder entirely, swapping out the output\n stream for another.","sig":null,"attributes":[{"value":"/ Resets the state of this encoder entirely, swapping out the output","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":40116,"byte_end":40186,"line_start":64,"line_end":64,"column_start":5,"column_end":75}},{"value":"/ stream for another.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":40191,"byte_end":40214,"line_start":65,"line_end":65,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":40219,"byte_end":40222,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ This function will finish encoding the current stream into the current","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":40227,"byte_end":40301,"line_start":67,"line_end":67,"column_start":5,"column_end":79}},{"value":"/ output stream before swapping out the two output streams. If the stream","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":40306,"byte_end":40381,"line_start":68,"line_end":68,"column_start":5,"column_end":80}},{"value":"/ cannot be finished an error is returned.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":40386,"byte_end":40430,"line_start":69,"line_end":69,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":40435,"byte_end":40438,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ After the current stream has been finished, this will reset the internal","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":40443,"byte_end":40519,"line_start":71,"line_end":71,"column_start":5,"column_end":81}},{"value":"/ state of this encoder and replace the output stream with the one","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":40524,"byte_end":40592,"line_start":72,"line_end":72,"column_start":5,"column_end":73}},{"value":"/ provided, returning the previous output stream. Future data written to","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":40597,"byte_end":40671,"line_start":73,"line_end":73,"column_start":5,"column_end":79}},{"value":"/ this encoder will be the compressed into the stream `w` provided.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":40676,"byte_end":40745,"line_start":74,"line_end":74,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":40750,"byte_end":40753,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":40758,"byte_end":40770,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":40775,"byte_end":40778,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to complete this stream, and any I/O","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":40783,"byte_end":40854,"line_start":78,"line_end":78,"column_start":5,"column_end":76}},{"value":"/ errors which occur will be returned from this function.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":40859,"byte_end":40918,"line_start":79,"line_end":79,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":41700,"byte_end":41710,"line_start":101,"line_end":101,"column_start":12,"column_end":22},"name":"try_finish","qualname":"<DeflateEncoder<W>>::try_finish","value":"pub fn try_finish(&mut Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to finish this output stream, writing out final chunks of data.","sig":null,"attributes":[{"value":"/ Attempt to finish this output stream, writing out final chunks of data.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":41085,"byte_end":41160,"line_start":86,"line_end":86,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":41165,"byte_end":41168,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Note that this function can only be used once data has finished being","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":41173,"byte_end":41246,"line_start":88,"line_end":88,"column_start":5,"column_end":78}},{"value":"/ written to the output stream. After this function is called then further","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":41251,"byte_end":41327,"line_start":89,"line_end":89,"column_start":5,"column_end":81}},{"value":"/ calls to `write` may result in a panic.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":41332,"byte_end":41375,"line_start":90,"line_end":90,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":41380,"byte_end":41383,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":41388,"byte_end":41400,"line_start":92,"line_end":92,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":41405,"byte_end":41408,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Attempts to write data to this stream may result in a panic after this","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":41413,"byte_end":41487,"line_start":94,"line_end":94,"column_start":5,"column_end":79}},{"value":"/ function is called.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":41492,"byte_end":41515,"line_start":95,"line_end":95,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":41520,"byte_end":41523,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":41528,"byte_end":41540,"line_start":97,"line_end":97,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":41545,"byte_end":41548,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to complete this stream, and any I/O","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":41553,"byte_end":41624,"line_start":99,"line_end":99,"column_start":5,"column_end":76}},{"value":"/ errors which occur will be returned from this function.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":41629,"byte_end":41688,"line_start":100,"line_end":100,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":42545,"byte_end":42551,"line_start":120,"line_end":120,"column_start":12,"column_end":18},"name":"finish","qualname":"<DeflateEncoder<W>>::finish","value":"pub fn finish(Self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, flushing the output stream.","sig":null,"attributes":[{"value":"/ Consumes this encoder, flushing the output stream.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":41781,"byte_end":41835,"line_start":105,"line_end":105,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":41840,"byte_end":41843,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ This will flush the underlying data stream, close off the compressed","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":41848,"byte_end":41920,"line_start":107,"line_end":107,"column_start":5,"column_end":77}},{"value":"/ stream and, if successful, return the contained writer.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":41925,"byte_end":41984,"line_start":108,"line_end":108,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":41989,"byte_end":41992,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ Note that this function may not be suitable to call in a situation where","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":41997,"byte_end":42073,"line_start":110,"line_end":110,"column_start":5,"column_end":81}},{"value":"/ the underlying stream is an asynchronous I/O stream. To finish a stream","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":42078,"byte_end":42153,"line_start":111,"line_end":111,"column_start":5,"column_end":80}},{"value":"/ the `try_finish` (or `shutdown`) method should be used instead. To","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":42158,"byte_end":42228,"line_start":112,"line_end":112,"column_start":5,"column_end":75}},{"value":"/ re-acquire ownership of a stream it is safe to call this method after","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":42233,"byte_end":42306,"line_start":113,"line_end":113,"column_start":5,"column_end":78}},{"value":"/ `try_finish` or `shutdown` has returned `Ok`.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":42311,"byte_end":42360,"line_start":114,"line_end":114,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":42365,"byte_end":42368,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":42373,"byte_end":42385,"line_start":116,"line_end":116,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":42390,"byte_end":42393,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to complete this stream, and any I/O","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":42398,"byte_end":42469,"line_start":118,"line_end":118,"column_start":5,"column_end":76}},{"value":"/ errors which occur will be returned from this function.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":42474,"byte_end":42533,"line_start":119,"line_end":119,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":43241,"byte_end":43253,"line_start":137,"line_end":137,"column_start":12,"column_end":24},"name":"flush_finish","qualname":"<DeflateEncoder<W>>::flush_finish","value":"pub fn flush_finish(Self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, flushing the output stream.","sig":null,"attributes":[{"value":"/ Consumes this encoder, flushing the output stream.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":42663,"byte_end":42717,"line_start":125,"line_end":125,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":42722,"byte_end":42725,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This will flush the underlying data stream and then return the contained","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":42730,"byte_end":42806,"line_start":127,"line_end":127,"column_start":5,"column_end":81}},{"value":"/ writer if the flush succeeded.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":42811,"byte_end":42845,"line_start":128,"line_end":128,"column_start":5,"column_end":39}},{"value":"/ The compressed stream will not closed but only flushed. This","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":42850,"byte_end":42914,"line_start":129,"line_end":129,"column_start":5,"column_end":69}},{"value":"/ means that obtained byte array can by extended by another deflated","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":42919,"byte_end":42989,"line_start":130,"line_end":130,"column_start":5,"column_end":75}},{"value":"/ stream. To close the stream add the two bytes 0x3 and 0x0.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":42994,"byte_end":43056,"line_start":131,"line_end":131,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":43061,"byte_end":43064,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":43069,"byte_end":43081,"line_start":133,"line_end":133,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":43086,"byte_end":43089,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to complete this stream, and any I/O","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":43094,"byte_end":43165,"line_start":135,"line_end":135,"column_start":5,"column_end":76}},{"value":"/ errors which occur will be returned from this function.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":43170,"byte_end":43229,"line_start":136,"line_end":136,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":43584,"byte_end":43592,"line_start":146,"line_end":146,"column_start":12,"column_end":20},"name":"total_in","qualname":"<DeflateEncoder<W>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that have been written to this compresor.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that have been written to this compresor.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":43364,"byte_end":43437,"line_start":142,"line_end":142,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":43442,"byte_end":43445,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ Note that not all bytes written to this object may be accounted for,","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":43450,"byte_end":43522,"line_start":144,"line_end":144,"column_start":5,"column_end":77}},{"value":"/ there may still be some active buffering.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":43527,"byte_end":43572,"line_start":145,"line_end":145,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":43835,"byte_end":43844,"line_start":154,"line_end":154,"column_start":12,"column_end":21},"name":"total_out","qualname":"<DeflateEncoder<W>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the compressor has produced.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the compressor has produced.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":43655,"byte_end":43720,"line_start":150,"line_end":150,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":43725,"byte_end":43728,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ Note that not all bytes may have been written yet, some may still be","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":43733,"byte_end":43805,"line_start":152,"line_end":152,"column_start":5,"column_end":77}},{"value":"/ buffered.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":43810,"byte_end":43823,"line_start":153,"line_end":153,"column_start":5,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":981},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":45774,"byte_end":45788,"line_start":220,"line_end":220,"column_start":12,"column_end":26},"name":"DeflateDecoder","qualname":"::deflate::write::DeflateDecoder","value":"DeflateDecoder {  }","parent":null,"children":[{"krate":0,"index":983}],"decl_id":null,"docs":" A DEFLATE decoder, or decompressor.","sig":null,"attributes":[{"value":"/ A DEFLATE decoder, or decompressor.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":44602,"byte_end":44641,"line_start":186,"line_end":186,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":44642,"byte_end":44645,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ This structure implements a [`Write`] and will emit a stream of decompressed","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":44646,"byte_end":44726,"line_start":188,"line_end":188,"column_start":1,"column_end":81}},{"value":"/ data when fed a stream of compressed data.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":44727,"byte_end":44773,"line_start":189,"line_end":189,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":44774,"byte_end":44777,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ [`Write`]: https://doc.rust-lang.org/std/io/trait.Read.html","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":44778,"byte_end":44841,"line_start":191,"line_end":191,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":44842,"byte_end":44845,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":44846,"byte_end":44860,"line_start":193,"line_end":193,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":44861,"byte_end":44864,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":44865,"byte_end":44872,"line_start":195,"line_end":195,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":44873,"byte_end":44901,"line_start":196,"line_end":196,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":44902,"byte_end":44918,"line_start":197,"line_end":197,"column_start":1,"column_end":17}},{"value":"/ # use flate2::Compression;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":44919,"byte_end":44949,"line_start":198,"line_end":198,"column_start":1,"column_end":31}},{"value":"/ # use flate2::write::DeflateEncoder;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":44950,"byte_end":44990,"line_start":199,"line_end":199,"column_start":1,"column_end":41}},{"value":"/ use flate2::write::DeflateDecoder;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":44991,"byte_end":45029,"line_start":200,"line_end":200,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":45030,"byte_end":45033,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":45034,"byte_end":45051,"line_start":202,"line_end":202,"column_start":1,"column_end":18}},{"value":"/ #    let mut e = DeflateEncoder::new(Vec::new(), Compression::Default);","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":45052,"byte_end":45127,"line_start":203,"line_end":203,"column_start":1,"column_end":76}},{"value":"/ #    e.write(b\"Hello World\").unwrap();","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":45128,"byte_end":45170,"line_start":204,"line_end":204,"column_start":1,"column_end":43}},{"value":"/ #    let bytes = e.finish().unwrap();","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":45171,"byte_end":45212,"line_start":205,"line_end":205,"column_start":1,"column_end":42}},{"value":"/ #    println!(\"{}\", decode_writer(bytes).unwrap());","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":45213,"byte_end":45268,"line_start":206,"line_end":206,"column_start":1,"column_end":56}},{"value":"/ # }","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":45269,"byte_end":45276,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"/ // Uncompresses a Deflate Encoded vector of bytes and returns a string or error","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":45277,"byte_end":45360,"line_start":208,"line_end":208,"column_start":1,"column_end":84}},{"value":"/ // Here Vec<u8> implements Write","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":45361,"byte_end":45397,"line_start":209,"line_end":209,"column_start":1,"column_end":37}},{"value":"/ fn decode_writer(bytes: Vec<u8>) -> io::Result<String> {","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":45398,"byte_end":45458,"line_start":210,"line_end":210,"column_start":1,"column_end":61}},{"value":"/    let mut writer = Vec::new();","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":45459,"byte_end":45494,"line_start":211,"line_end":211,"column_start":1,"column_end":36}},{"value":"/    let mut deflater = DeflateDecoder::new(writer);","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":45495,"byte_end":45549,"line_start":212,"line_end":212,"column_start":1,"column_end":55}},{"value":"/    deflater.write(&bytes[..])?;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":45550,"byte_end":45585,"line_start":213,"line_end":213,"column_start":1,"column_end":36}},{"value":"/    writer = deflater.finish()?;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":45586,"byte_end":45621,"line_start":214,"line_end":214,"column_start":1,"column_end":36}},{"value":"/    let return_string = String::from_utf8(writer).expect(\"String parsing error\");","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":45622,"byte_end":45706,"line_start":215,"line_end":215,"column_start":1,"column_end":85}},{"value":"/    Ok(return_string)","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":45707,"byte_end":45731,"line_start":216,"line_end":216,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":45732,"byte_end":45737,"line_start":217,"line_end":217,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":45738,"byte_end":45745,"line_start":218,"line_end":218,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":46078,"byte_end":46081,"line_start":230,"line_end":230,"column_start":12,"column_end":15},"name":"new","qualname":"<DeflateDecoder<W>>::new","value":"pub fn new(W) -> DeflateDecoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder which will write uncompressed data to the stream.","sig":null,"attributes":[{"value":"/ Creates a new decoder which will write uncompressed data to the stream.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":45883,"byte_end":45958,"line_start":226,"line_end":226,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":45963,"byte_end":45966,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ When this encoder is dropped or unwrapped the final pieces of data will","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":45971,"byte_end":46046,"line_start":228,"line_end":228,"column_start":5,"column_end":80}},{"value":"/ be flushed.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":46051,"byte_end":46066,"line_start":229,"line_end":229,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":46283,"byte_end":46290,"line_start":237,"line_end":237,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<DeflateDecoder<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying writer.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":46221,"byte_end":46271,"line_start":236,"line_end":236,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":46567,"byte_end":46574,"line_start":245,"line_end":245,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<DeflateDecoder<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying writer.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":46346,"byte_end":46404,"line_start":241,"line_end":241,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":46409,"byte_end":46412,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ Note that mutating the output/input state of the stream may corrupt this","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":46417,"byte_end":46493,"line_start":243,"line_end":243,"column_start":5,"column_end":81}},{"value":"/ object, so care must be taken when using this method.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":46498,"byte_end":46555,"line_start":244,"line_end":244,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":47355,"byte_end":47360,"line_start":264,"line_end":264,"column_start":12,"column_end":17},"name":"reset","qualname":"<DeflateDecoder<W>>::reset","value":"pub fn reset(&mut Self, W) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this decoder entirely, swapping out the output\n stream for another.","sig":null,"attributes":[{"value":"/ Resets the state of this decoder entirely, swapping out the output","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":46638,"byte_end":46708,"line_start":249,"line_end":249,"column_start":5,"column_end":75}},{"value":"/ stream for another.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":46713,"byte_end":46736,"line_start":250,"line_end":250,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":46741,"byte_end":46744,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ This function will finish encoding the current stream into the current","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":46749,"byte_end":46823,"line_start":252,"line_end":252,"column_start":5,"column_end":79}},{"value":"/ output stream before swapping out the two output streams.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":46828,"byte_end":46889,"line_start":253,"line_end":253,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":46894,"byte_end":46897,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ This will then reset the internal state of this decoder and replace the","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":46902,"byte_end":46977,"line_start":255,"line_end":255,"column_start":5,"column_end":80}},{"value":"/ output stream with the one provided, returning the previous output","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":46982,"byte_end":47052,"line_start":256,"line_end":256,"column_start":5,"column_end":75}},{"value":"/ stream. Future data written to this decoder will be decompressed into","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":47057,"byte_end":47130,"line_start":257,"line_end":257,"column_start":5,"column_end":78}},{"value":"/ the output stream `w`.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":47135,"byte_end":47161,"line_start":258,"line_end":258,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":47166,"byte_end":47169,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":47174,"byte_end":47186,"line_start":260,"line_end":260,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":47191,"byte_end":47194,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to finish the stream, and if that I/O","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":47199,"byte_end":47271,"line_start":262,"line_end":262,"column_start":5,"column_end":77}},{"value":"/ returns an error then that will be returned from this function.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":47276,"byte_end":47343,"line_start":263,"line_end":263,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":48106,"byte_end":48116,"line_start":285,"line_end":285,"column_start":12,"column_end":22},"name":"try_finish","qualname":"<DeflateDecoder<W>>::try_finish","value":"pub fn try_finish(&mut Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to finish this output stream, writing out final chunks of data.","sig":null,"attributes":[{"value":"/ Attempt to finish this output stream, writing out final chunks of data.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":47527,"byte_end":47602,"line_start":270,"line_end":270,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":47607,"byte_end":47610,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ Note that this function can only be used once data has finished being","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":47615,"byte_end":47688,"line_start":272,"line_end":272,"column_start":5,"column_end":78}},{"value":"/ written to the output stream. After this function is called then further","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":47693,"byte_end":47769,"line_start":273,"line_end":273,"column_start":5,"column_end":81}},{"value":"/ calls to `write` may result in a panic.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":47774,"byte_end":47817,"line_start":274,"line_end":274,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":47822,"byte_end":47825,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":47830,"byte_end":47842,"line_start":276,"line_end":276,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":47847,"byte_end":47850,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Attempts to write data to this stream may result in a panic after this","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":47855,"byte_end":47929,"line_start":278,"line_end":278,"column_start":5,"column_end":79}},{"value":"/ function is called.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":47934,"byte_end":47957,"line_start":279,"line_end":279,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":47962,"byte_end":47965,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":47970,"byte_end":47982,"line_start":281,"line_end":281,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":47987,"byte_end":47990,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to finish the stream, returning any","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":47995,"byte_end":48065,"line_start":283,"line_end":283,"column_start":5,"column_end":75}},{"value":"/ errors which happen.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":48070,"byte_end":48094,"line_start":284,"line_end":284,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":48930,"byte_end":48936,"line_start":304,"line_end":304,"column_start":12,"column_end":18},"name":"finish","qualname":"<DeflateDecoder<W>>::finish","value":"pub fn finish(Self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, flushing the output stream.","sig":null,"attributes":[{"value":"/ Consumes this encoder, flushing the output stream.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":48187,"byte_end":48241,"line_start":289,"line_end":289,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":48246,"byte_end":48249,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ This will flush the underlying data stream and then return the contained","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":48254,"byte_end":48330,"line_start":291,"line_end":291,"column_start":5,"column_end":81}},{"value":"/ writer if the flush succeeded.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":48335,"byte_end":48369,"line_start":292,"line_end":292,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":48374,"byte_end":48377,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ Note that this function may not be suitable to call in a situation where","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":48382,"byte_end":48458,"line_start":294,"line_end":294,"column_start":5,"column_end":81}},{"value":"/ the underlying stream is an asynchronous I/O stream. To finish a stream","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":48463,"byte_end":48538,"line_start":295,"line_end":295,"column_start":5,"column_end":80}},{"value":"/ the `try_finish` (or `shutdown`) method should be used instead. To","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":48543,"byte_end":48613,"line_start":296,"line_end":296,"column_start":5,"column_end":75}},{"value":"/ re-acquire ownership of a stream it is safe to call this method after","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":48618,"byte_end":48691,"line_start":297,"line_end":297,"column_start":5,"column_end":78}},{"value":"/ `try_finish` or `shutdown` has returned `Ok`.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":48696,"byte_end":48745,"line_start":298,"line_end":298,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":48750,"byte_end":48753,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":48758,"byte_end":48770,"line_start":300,"line_end":300,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":48775,"byte_end":48778,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to complete this stream, and any I/O","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":48783,"byte_end":48854,"line_start":302,"line_end":302,"column_start":5,"column_end":76}},{"value":"/ errors which occur will be returned from this function.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":48859,"byte_end":48918,"line_start":303,"line_end":303,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":49303,"byte_end":49311,"line_start":314,"line_end":314,"column_start":12,"column_end":20},"name":"total_in","qualname":"<DeflateDecoder<W>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has consumed for\n decompression.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has consumed for","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":49048,"byte_end":49118,"line_start":309,"line_end":309,"column_start":5,"column_end":75}},{"value":"/ decompression.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":49123,"byte_end":49141,"line_start":310,"line_end":310,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":49146,"byte_end":49149,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ Note that this will likely be smaller than the number of bytes","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":49154,"byte_end":49220,"line_start":312,"line_end":312,"column_start":5,"column_end":71}},{"value":"/ successfully written to this stream due to internal buffering.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":49225,"byte_end":49291,"line_start":313,"line_end":313,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":49481,"byte_end":49490,"line_start":320,"line_end":320,"column_start":12,"column_end":21},"name":"total_out","qualname":"<DeflateDecoder<W>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has written to its\n output stream.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has written to its","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":49374,"byte_end":49446,"line_start":318,"line_end":318,"column_start":5,"column_end":77}},{"value":"/ output stream.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":49451,"byte_end":49469,"line_start":319,"line_end":319,"column_start":5,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":987},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":71711,"byte_end":71720,"line_start":143,"line_end":143,"column_start":12,"column_end":21},"name":"GzEncoder","qualname":"::gz::bufread::GzEncoder","value":"GzEncoder {  }","parent":null,"children":[{"krate":0,"index":989},{"krate":0,"index":990},{"krate":0,"index":991},{"krate":0,"index":992}],"decl_id":null,"docs":" A gzip streaming encoder","sig":null,"attributes":[{"value":"/ A gzip streaming encoder","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":70751,"byte_end":70779,"line_start":112,"line_end":112,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":70780,"byte_end":70783,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ This structure exposes a [`BufRead`] interface that will read uncompressed data","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":70784,"byte_end":70867,"line_start":114,"line_end":114,"column_start":1,"column_end":84}},{"value":"/ from the underlying reader and expose the compressed version as a [`BufRead`]","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":70868,"byte_end":70949,"line_start":115,"line_end":115,"column_start":1,"column_end":82}},{"value":"/ interface.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":70950,"byte_end":70964,"line_start":116,"line_end":116,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":70965,"byte_end":70968,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ [`BufRead`]: https://doc.rust-lang.org/std/io/trait.BufRead.html","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":70969,"byte_end":71037,"line_start":118,"line_end":118,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":71038,"byte_end":71041,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":71042,"byte_end":71056,"line_start":120,"line_end":120,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":71057,"byte_end":71060,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":71061,"byte_end":71068,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":71069,"byte_end":71097,"line_start":123,"line_end":123,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":71098,"byte_end":71114,"line_start":124,"line_end":124,"column_start":1,"column_end":17}},{"value":"/ use flate2::Compression;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":71115,"byte_end":71143,"line_start":125,"line_end":125,"column_start":1,"column_end":29}},{"value":"/ use flate2::bufread::GzEncoder;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":71144,"byte_end":71179,"line_start":126,"line_end":126,"column_start":1,"column_end":36}},{"value":"/ use std::fs::File;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":71180,"byte_end":71202,"line_start":127,"line_end":127,"column_start":1,"column_end":23}},{"value":"/ use std::io::BufReader;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":71203,"byte_end":71230,"line_start":128,"line_end":128,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":71231,"byte_end":71234,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ // Opens sample file, compresses the contents and returns a Vector or error","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":71235,"byte_end":71314,"line_start":130,"line_end":130,"column_start":1,"column_end":80}},{"value":"/ // File wrapped in a BufReader implements BufRead","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":71315,"byte_end":71368,"line_start":131,"line_end":131,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":71369,"byte_end":71372,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ fn open_hello_world() -> io::Result<Vec<u8>> {","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":71373,"byte_end":71423,"line_start":133,"line_end":133,"column_start":1,"column_end":51}},{"value":"/     let f = File::open(\"examples/hello_world.txt\")?;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":71424,"byte_end":71480,"line_start":134,"line_end":134,"column_start":1,"column_end":57}},{"value":"/     let b = BufReader::new(f);","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":71481,"byte_end":71515,"line_start":135,"line_end":135,"column_start":1,"column_end":35}},{"value":"/     let mut gz = GzEncoder::new(b, Compression::Fast);","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":71516,"byte_end":71574,"line_start":136,"line_end":136,"column_start":1,"column_end":59}},{"value":"/     let mut buffer = Vec::new();","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":71575,"byte_end":71611,"line_start":137,"line_end":137,"column_start":1,"column_end":37}},{"value":"/     gz.read_to_end(&mut buffer)?;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":71612,"byte_end":71649,"line_start":138,"line_end":138,"column_start":1,"column_end":38}},{"value":"/     Ok(buffer)","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":71650,"byte_end":71668,"line_start":139,"line_end":139,"column_start":1,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":71669,"byte_end":71674,"line_start":140,"line_end":140,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":71675,"byte_end":71682,"line_start":141,"line_end":141,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":72490,"byte_end":72493,"line_start":170,"line_end":170,"column_start":12,"column_end":15},"name":"new","qualname":"<GzEncoder<R>>::new","value":"pub fn new(R, Compression) -> GzEncoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder which will use the given compression level.","sig":null,"attributes":[{"value":"/ Creates a new encoder which will use the given compression level.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":72151,"byte_end":72220,"line_start":163,"line_end":163,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":72225,"byte_end":72228,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ The encoder is not configured specially for the emitted header. For","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":72233,"byte_end":72304,"line_start":165,"line_end":165,"column_start":5,"column_end":76}},{"value":"/ header configuration, see the `Builder` type.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":72309,"byte_end":72358,"line_start":166,"line_end":166,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":72363,"byte_end":72366,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ The data read from the stream `r` will be compressed and available","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":72371,"byte_end":72441,"line_start":168,"line_end":168,"column_start":5,"column_end":75}},{"value":"/ through the returned reader.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":72446,"byte_end":72478,"line_start":169,"line_end":169,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":73246,"byte_end":73253,"line_start":195,"line_end":195,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<GzEncoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying reader.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":73184,"byte_end":73234,"line_start":194,"line_end":194,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":73520,"byte_end":73527,"line_start":203,"line_end":203,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<GzEncoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying reader.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":73319,"byte_end":73377,"line_start":199,"line_end":199,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":73382,"byte_end":73385,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the reader may result in surprising results if","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":73390,"byte_end":73462,"line_start":201,"line_end":201,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":73467,"byte_end":73508,"line_start":202,"line_end":202,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":73670,"byte_end":73680,"line_start":208,"line_end":208,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<GzEncoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying stream, consuming this encoder\n","sig":null,"attributes":[{"value":"/ Returns the underlying stream, consuming this encoder","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":73601,"byte_end":73658,"line_start":207,"line_end":207,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":996},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":75701,"byte_end":75710,"line_start":282,"line_end":282,"column_start":12,"column_end":21},"name":"GzDecoder","qualname":"::gz::bufread::GzDecoder","value":"GzDecoder {  }","parent":null,"children":[{"krate":0,"index":998},{"krate":0,"index":999},{"krate":0,"index":1000}],"decl_id":null,"docs":" A gzip streaming decoder","sig":null,"attributes":[{"value":"/ A gzip streaming decoder","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":74673,"byte_end":74701,"line_start":248,"line_end":248,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":74702,"byte_end":74705,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ This structure exposes a [`ReadBuf`] interface that will consume compressed","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":74706,"byte_end":74785,"line_start":250,"line_end":250,"column_start":1,"column_end":80}},{"value":"/ data from the underlying reader and emit uncompressed data.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":74786,"byte_end":74849,"line_start":251,"line_end":251,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":74850,"byte_end":74853,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ [`ReadBuf`]: https://doc.rust-lang.org/std/io/trait.BufRead.html","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":74854,"byte_end":74922,"line_start":253,"line_end":253,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":74923,"byte_end":74926,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":74927,"byte_end":74941,"line_start":255,"line_end":255,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":74942,"byte_end":74945,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":74946,"byte_end":74953,"line_start":257,"line_end":257,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":74954,"byte_end":74982,"line_start":258,"line_end":258,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":74983,"byte_end":74999,"line_start":259,"line_end":259,"column_start":1,"column_end":17}},{"value":"/ # use flate2::Compression;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":75000,"byte_end":75030,"line_start":260,"line_end":260,"column_start":1,"column_end":31}},{"value":"/ # use flate2::write::GzEncoder;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":75031,"byte_end":75066,"line_start":261,"line_end":261,"column_start":1,"column_end":36}},{"value":"/ use flate2::bufread::GzDecoder;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":75067,"byte_end":75102,"line_start":262,"line_end":262,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":75103,"byte_end":75106,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":75107,"byte_end":75124,"line_start":264,"line_end":264,"column_start":1,"column_end":18}},{"value":"/ #   let mut e = GzEncoder::new(Vec::new(), Compression::Default);","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":75125,"byte_end":75194,"line_start":265,"line_end":265,"column_start":1,"column_end":70}},{"value":"/ #   e.write(b\"Hello World\").unwrap();","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":75195,"byte_end":75236,"line_start":266,"line_end":266,"column_start":1,"column_end":42}},{"value":"/ #   let bytes = e.finish().unwrap();","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":75237,"byte_end":75277,"line_start":267,"line_end":267,"column_start":1,"column_end":41}},{"value":"/ #   println!(\"{}\", decode_reader(bytes).unwrap());","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":75278,"byte_end":75332,"line_start":268,"line_end":268,"column_start":1,"column_end":55}},{"value":"/ # }","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":75333,"byte_end":75340,"line_start":269,"line_end":269,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":75341,"byte_end":75346,"line_start":270,"line_end":270,"column_start":1,"column_end":6}},{"value":"/ // Uncompresses a Gz Encoded vector of bytes and returns a string or error","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":75347,"byte_end":75425,"line_start":271,"line_end":271,"column_start":1,"column_end":79}},{"value":"/ // Here &[u8] implements BufRead","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":75426,"byte_end":75462,"line_start":272,"line_end":272,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":75463,"byte_end":75466,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ fn decode_reader(bytes: Vec<u8>) -> io::Result<String> {","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":75467,"byte_end":75527,"line_start":274,"line_end":274,"column_start":1,"column_end":61}},{"value":"/    let mut gz = GzDecoder::new(&bytes[..])?;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":75528,"byte_end":75576,"line_start":275,"line_end":275,"column_start":1,"column_end":49}},{"value":"/    let mut s = String::new();","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":75577,"byte_end":75610,"line_start":276,"line_end":276,"column_start":1,"column_end":34}},{"value":"/    gz.read_to_string(&mut s)?;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":75611,"byte_end":75645,"line_start":277,"line_end":277,"column_start":1,"column_end":35}},{"value":"/    Ok(s)","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":75646,"byte_end":75658,"line_start":278,"line_end":278,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":75659,"byte_end":75664,"line_start":279,"line_end":279,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":75665,"byte_end":75672,"line_start":280,"line_end":280,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":76088,"byte_end":76091,"line_start":297,"line_end":297,"column_start":12,"column_end":15},"name":"new","qualname":"<GzDecoder<R>>::new","value":"pub fn new(R) -> io::Result<GzDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder from the given reader, immediately parsing the\n gzip header.","sig":null,"attributes":[{"value":"/ Creates a new decoder from the given reader, immediately parsing the","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":75855,"byte_end":75927,"line_start":290,"line_end":290,"column_start":5,"column_end":77}},{"value":"/ gzip header.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":75932,"byte_end":75948,"line_start":291,"line_end":291,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":75953,"byte_end":75956,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":75961,"byte_end":75973,"line_start":293,"line_end":293,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":75978,"byte_end":75981,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ If an error is encountered when parsing the gzip header, an error is","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":75986,"byte_end":76058,"line_start":295,"line_end":295,"column_start":5,"column_end":77}},{"value":"/ returned.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":76063,"byte_end":76076,"line_start":296,"line_end":296,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":77416,"byte_end":77422,"line_start":341,"line_end":341,"column_start":12,"column_end":18},"name":"header","qualname":"<GzDecoder<R>>::header","value":"pub fn header(&Self) -> &Header","parent":null,"children":[],"decl_id":null,"docs":" Returns the header associated with this stream.\n","sig":null,"attributes":[{"value":"/ Returns the header associated with this stream.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":77353,"byte_end":77404,"line_start":340,"line_end":340,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":77537,"byte_end":77544,"line_start":346,"line_end":346,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<GzDecoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying reader.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":77475,"byte_end":77525,"line_start":345,"line_end":345,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":77811,"byte_end":77818,"line_start":354,"line_end":354,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<GzDecoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":77610,"byte_end":77668,"line_start":350,"line_end":350,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":77673,"byte_end":77676,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":77681,"byte_end":77753,"line_start":352,"line_end":352,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":77758,"byte_end":77799,"line_start":353,"line_end":353,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":77963,"byte_end":77973,"line_start":359,"line_end":359,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<GzDecoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this decoder, returning the underlying reader.\n","sig":null,"attributes":[{"value":"/ Consumes this decoder, returning the underlying reader.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":77892,"byte_end":77951,"line_start":358,"line_end":358,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":1004},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":80093,"byte_end":80107,"line_start":429,"line_end":429,"column_start":12,"column_end":26},"name":"MultiGzDecoder","qualname":"::gz::bufread::MultiGzDecoder","value":"MultiGzDecoder {  }","parent":null,"children":[{"krate":0,"index":1006},{"krate":0,"index":1007},{"krate":0,"index":1008}],"decl_id":null,"docs":" A gzip streaming decoder that decodes all members of a multistream","sig":null,"attributes":[{"value":"/ A gzip streaming decoder that decodes all members of a multistream","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":78560,"byte_end":78630,"line_start":388,"line_end":388,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":78631,"byte_end":78634,"line_start":389,"line_end":389,"column_start":1,"column_end":4}},{"value":"/ A gzip member consists of a header, compressed data and a trailer. The [gzip","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":78635,"byte_end":78715,"line_start":390,"line_end":390,"column_start":1,"column_end":81}},{"value":"/ specification](https://tools.ietf.org/html/rfc1952), however, allows multiple","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":78716,"byte_end":78797,"line_start":391,"line_end":391,"column_start":1,"column_end":82}},{"value":"/ gzip members to be joined in a single stream. `MultiGzDecoder` will","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":78798,"byte_end":78869,"line_start":392,"line_end":392,"column_start":1,"column_end":72}},{"value":"/ decode all consecutive members while `GzDecoder` will only decompress","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":78870,"byte_end":78943,"line_start":393,"line_end":393,"column_start":1,"column_end":74}},{"value":"/ the first gzip member. The multistream format is commonly used in","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":78944,"byte_end":79013,"line_start":394,"line_end":394,"column_start":1,"column_end":70}},{"value":"/ bioinformatics, for example when using the BGZF compressed data.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":79014,"byte_end":79082,"line_start":395,"line_end":395,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":79083,"byte_end":79086,"line_start":396,"line_end":396,"column_start":1,"column_end":4}},{"value":"/ This structure exposes a [`BufRead`] interface that will consume all gzip members","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":79087,"byte_end":79172,"line_start":397,"line_end":397,"column_start":1,"column_end":86}},{"value":"/ from the underlying reader and emit uncompressed data.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":79173,"byte_end":79231,"line_start":398,"line_end":398,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":79232,"byte_end":79235,"line_start":399,"line_end":399,"column_start":1,"column_end":4}},{"value":"/ [`BufRead`]: https://doc.rust-lang.org/std/io/trait.BufRead.html","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":79236,"byte_end":79304,"line_start":400,"line_end":400,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":79305,"byte_end":79308,"line_start":401,"line_end":401,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":79309,"byte_end":79323,"line_start":402,"line_end":402,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":79324,"byte_end":79327,"line_start":403,"line_end":403,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":79328,"byte_end":79335,"line_start":404,"line_end":404,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":79336,"byte_end":79364,"line_start":405,"line_end":405,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":79365,"byte_end":79381,"line_start":406,"line_end":406,"column_start":1,"column_end":17}},{"value":"/ # use flate2::Compression;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":79382,"byte_end":79412,"line_start":407,"line_end":407,"column_start":1,"column_end":31}},{"value":"/ # use flate2::write::GzEncoder;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":79413,"byte_end":79448,"line_start":408,"line_end":408,"column_start":1,"column_end":36}},{"value":"/ use flate2::bufread::MultiGzDecoder;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":79449,"byte_end":79489,"line_start":409,"line_end":409,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":79490,"byte_end":79493,"line_start":410,"line_end":410,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":79494,"byte_end":79511,"line_start":411,"line_end":411,"column_start":1,"column_end":18}},{"value":"/ #   let mut e = GzEncoder::new(Vec::new(), Compression::Default);","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":79512,"byte_end":79581,"line_start":412,"line_end":412,"column_start":1,"column_end":70}},{"value":"/ #   e.write(b\"Hello World\").unwrap();","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":79582,"byte_end":79623,"line_start":413,"line_end":413,"column_start":1,"column_end":42}},{"value":"/ #   let bytes = e.finish().unwrap();","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":79624,"byte_end":79664,"line_start":414,"line_end":414,"column_start":1,"column_end":41}},{"value":"/ #   println!(\"{}\", decode_reader(bytes).unwrap());","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":79665,"byte_end":79719,"line_start":415,"line_end":415,"column_start":1,"column_end":55}},{"value":"/ # }","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":79720,"byte_end":79727,"line_start":416,"line_end":416,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":79728,"byte_end":79733,"line_start":417,"line_end":417,"column_start":1,"column_end":6}},{"value":"/ // Uncompresses a Gz Encoded vector of bytes and returns a string or error","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":79734,"byte_end":79812,"line_start":418,"line_end":418,"column_start":1,"column_end":79}},{"value":"/ // Here &[u8] implements BufRead","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":79813,"byte_end":79849,"line_start":419,"line_end":419,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":79850,"byte_end":79853,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ fn decode_reader(bytes: Vec<u8>) -> io::Result<String> {","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":79854,"byte_end":79914,"line_start":421,"line_end":421,"column_start":1,"column_end":61}},{"value":"/    let mut gz = MultiGzDecoder::new(&bytes[..])?;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":79915,"byte_end":79968,"line_start":422,"line_end":422,"column_start":1,"column_end":54}},{"value":"/    let mut s = String::new();","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":79969,"byte_end":80002,"line_start":423,"line_end":423,"column_start":1,"column_end":34}},{"value":"/    gz.read_to_string(&mut s)?;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":80003,"byte_end":80037,"line_start":424,"line_end":424,"column_start":1,"column_end":35}},{"value":"/    Ok(s)","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":80038,"byte_end":80050,"line_start":425,"line_end":425,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":80051,"byte_end":80056,"line_start":426,"line_end":426,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":80057,"byte_end":80064,"line_start":427,"line_end":427,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":80572,"byte_end":80575,"line_start":445,"line_end":445,"column_start":12,"column_end":15},"name":"new","qualname":"<MultiGzDecoder<R>>::new","value":"pub fn new(R) -> io::Result<MultiGzDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder from the given reader, immediately parsing the\n (first) gzip header. If the gzip stream contains multiple members all will\n be decoded.","sig":null,"attributes":[{"value":"/ Creates a new decoder from the given reader, immediately parsing the","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":80257,"byte_end":80329,"line_start":437,"line_end":437,"column_start":5,"column_end":77}},{"value":"/ (first) gzip header. If the gzip stream contains multiple members all will","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":80334,"byte_end":80412,"line_start":438,"line_end":438,"column_start":5,"column_end":83}},{"value":"/ be decoded.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":80417,"byte_end":80432,"line_start":439,"line_end":439,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":80437,"byte_end":80440,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":80445,"byte_end":80457,"line_start":441,"line_end":441,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":80462,"byte_end":80465,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ If an error is encountered when parsing the gzip header, an error is","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":80470,"byte_end":80542,"line_start":443,"line_end":443,"column_start":5,"column_end":77}},{"value":"/ returned.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":80547,"byte_end":80560,"line_start":444,"line_end":444,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":82404,"byte_end":82410,"line_start":503,"line_end":503,"column_start":12,"column_end":18},"name":"header","qualname":"<MultiGzDecoder<R>>::header","value":"pub fn header(&Self) -> &Header","parent":null,"children":[],"decl_id":null,"docs":" Returns the current header associated with this stream.\n","sig":null,"attributes":[{"value":"/ Returns the current header associated with this stream.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":82333,"byte_end":82392,"line_start":502,"line_end":502,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":82525,"byte_end":82532,"line_start":508,"line_end":508,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<MultiGzDecoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying reader.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":82463,"byte_end":82513,"line_start":507,"line_end":507,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":82799,"byte_end":82806,"line_start":516,"line_end":516,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<MultiGzDecoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":82598,"byte_end":82656,"line_start":512,"line_end":512,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":82661,"byte_end":82664,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":82669,"byte_end":82741,"line_start":514,"line_end":514,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":82746,"byte_end":82787,"line_start":515,"line_end":515,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":82951,"byte_end":82961,"line_start":521,"line_end":521,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<MultiGzDecoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this decoder, returning the underlying reader.\n","sig":null,"attributes":[{"value":"/ Consumes this decoder, returning the underlying reader.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":82880,"byte_end":82939,"line_start":520,"line_end":520,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":1012},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":84592,"byte_end":84601,"line_start":36,"line_end":36,"column_start":12,"column_end":21},"name":"GzEncoder","qualname":"::gz::read::GzEncoder","value":"GzEncoder {  }","parent":null,"children":[{"krate":0,"index":1014}],"decl_id":null,"docs":" A gzip streaming encoder","sig":null,"attributes":[{"value":"/ A gzip streaming encoder","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":83766,"byte_end":83794,"line_start":9,"line_end":9,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":83795,"byte_end":83798,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This structure exposes a [`Read`] interface that will read uncompressed data","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":83799,"byte_end":83879,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ from the underlying reader and expose the compressed version as a [`Read`]","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":83880,"byte_end":83958,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ interface.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":83959,"byte_end":83973,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":83974,"byte_end":83977,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`Read`]: https://doc.rust-lang.org/std/io/trait.Read.html","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":83978,"byte_end":84040,"line_start":15,"line_end":15,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":84041,"byte_end":84044,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":84045,"byte_end":84059,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":84060,"byte_end":84063,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":84064,"byte_end":84071,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":84072,"byte_end":84100,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":84101,"byte_end":84117,"line_start":21,"line_end":21,"column_start":1,"column_end":17}},{"value":"/ use flate2::Compression;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":84118,"byte_end":84146,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ use flate2::read::GzEncoder;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":84147,"byte_end":84179,"line_start":23,"line_end":23,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":84180,"byte_end":84183,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ // Return a vector containing the GZ compressed version of hello world","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":84184,"byte_end":84258,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":84259,"byte_end":84262,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fn gzencode_hello_world() -> io::Result<Vec<u8>> {","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":84263,"byte_end":84317,"line_start":27,"line_end":27,"column_start":1,"column_end":55}},{"value":"/     let mut ret_vec = [0;100];","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":84318,"byte_end":84352,"line_start":28,"line_end":28,"column_start":1,"column_end":35}},{"value":"/     let bytestring = b\"hello world\";","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":84353,"byte_end":84393,"line_start":29,"line_end":29,"column_start":1,"column_end":41}},{"value":"/     let mut gz = GzEncoder::new(&bytestring[..], Compression::Fast);","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":84394,"byte_end":84466,"line_start":30,"line_end":30,"column_start":1,"column_end":73}},{"value":"/     let count = gz.read(&mut ret_vec)?;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":84467,"byte_end":84510,"line_start":31,"line_end":31,"column_start":1,"column_end":44}},{"value":"/     Ok(ret_vec[0..count].to_vec())","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":84511,"byte_end":84549,"line_start":32,"line_end":32,"column_start":1,"column_end":39}},{"value":"/ }","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":84550,"byte_end":84555,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":84556,"byte_end":84563,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":85151,"byte_end":85154,"line_start":54,"line_end":54,"column_start":12,"column_end":15},"name":"new","qualname":"<GzEncoder<R>>::new","value":"pub fn new(R, Compression) -> GzEncoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder which will use the given compression level.","sig":null,"attributes":[{"value":"/ Creates a new encoder which will use the given compression level.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":84812,"byte_end":84881,"line_start":47,"line_end":47,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":84886,"byte_end":84889,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ The encoder is not configured specially for the emitted header. For","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":84894,"byte_end":84965,"line_start":49,"line_end":49,"column_start":5,"column_end":76}},{"value":"/ header configuration, see the `Builder` type.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":84970,"byte_end":85019,"line_start":50,"line_end":50,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":85024,"byte_end":85027,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ The data read from the stream `r` will be compressed and available","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":85032,"byte_end":85102,"line_start":52,"line_end":52,"column_start":5,"column_end":75}},{"value":"/ through the returned reader.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":85107,"byte_end":85139,"line_start":53,"line_end":53,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":85335,"byte_end":85342,"line_start":61,"line_end":61,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<GzEncoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying reader.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":85273,"byte_end":85323,"line_start":60,"line_end":60,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":85609,"byte_end":85616,"line_start":69,"line_end":69,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<GzEncoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying reader.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":85408,"byte_end":85466,"line_start":65,"line_end":65,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":85471,"byte_end":85474,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the reader may result in surprising results if","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":85479,"byte_end":85551,"line_start":67,"line_end":67,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":85556,"byte_end":85597,"line_start":68,"line_end":68,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":85759,"byte_end":85769,"line_start":74,"line_end":74,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<GzEncoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying stream, consuming this encoder\n","sig":null,"attributes":[{"value":"/ Returns the underlying stream, consuming this encoder","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":85690,"byte_end":85747,"line_start":73,"line_end":73,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":1018},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":87229,"byte_end":87238,"line_start":130,"line_end":130,"column_start":12,"column_end":21},"name":"GzDecoder","qualname":"::gz::read::GzDecoder","value":"GzDecoder {  }","parent":null,"children":[{"krate":0,"index":1020}],"decl_id":null,"docs":" A gzip streaming decoder","sig":null,"attributes":[{"value":"/ A gzip streaming decoder","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":86208,"byte_end":86236,"line_start":95,"line_end":95,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":86237,"byte_end":86240,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ This structure exposes a [`Read`] interface that will consume compressed","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":86241,"byte_end":86317,"line_start":97,"line_end":97,"column_start":1,"column_end":77}},{"value":"/ data from the underlying reader and emit uncompressed data.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":86318,"byte_end":86381,"line_start":98,"line_end":98,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":86382,"byte_end":86385,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ [`Read`]: https://doc.rust-lang.org/std/io/trait.Read.html","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":86386,"byte_end":86448,"line_start":100,"line_end":100,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":86449,"byte_end":86452,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":86453,"byte_end":86467,"line_start":102,"line_end":102,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":86468,"byte_end":86471,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":86472,"byte_end":86479,"line_start":104,"line_end":104,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":86480,"byte_end":86483,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":86484,"byte_end":86512,"line_start":106,"line_end":106,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":86513,"byte_end":86529,"line_start":107,"line_end":107,"column_start":1,"column_end":17}},{"value":"/ # use flate2::Compression;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":86530,"byte_end":86560,"line_start":108,"line_end":108,"column_start":1,"column_end":31}},{"value":"/ # use flate2::write::GzEncoder;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":86561,"byte_end":86596,"line_start":109,"line_end":109,"column_start":1,"column_end":36}},{"value":"/ use flate2::read::GzDecoder;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":86597,"byte_end":86629,"line_start":110,"line_end":110,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":86630,"byte_end":86633,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":86634,"byte_end":86651,"line_start":112,"line_end":112,"column_start":1,"column_end":18}},{"value":"/ #    let mut e = GzEncoder::new(Vec::new(), Compression::Default);","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":86652,"byte_end":86722,"line_start":113,"line_end":113,"column_start":1,"column_end":71}},{"value":"/ #    e.write(b\"Hello World\").unwrap();","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":86723,"byte_end":86765,"line_start":114,"line_end":114,"column_start":1,"column_end":43}},{"value":"/ #    let bytes = e.finish().unwrap();","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":86766,"byte_end":86807,"line_start":115,"line_end":115,"column_start":1,"column_end":42}},{"value":"/ #    println!(\"{}\", decode_reader(bytes).unwrap());","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":86808,"byte_end":86863,"line_start":116,"line_end":116,"column_start":1,"column_end":56}},{"value":"/ # }","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":86864,"byte_end":86871,"line_start":117,"line_end":117,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":86872,"byte_end":86877,"line_start":118,"line_end":118,"column_start":1,"column_end":6}},{"value":"/ // Uncompresses a Gz Encoded vector of bytes and returns a string or error","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":86878,"byte_end":86956,"line_start":119,"line_end":119,"column_start":1,"column_end":79}},{"value":"/ // Here &[u8] implements Read","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":86957,"byte_end":86990,"line_start":120,"line_end":120,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":86991,"byte_end":86994,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ fn decode_reader(bytes: Vec<u8>) -> io::Result<String> {","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":86995,"byte_end":87055,"line_start":122,"line_end":122,"column_start":1,"column_end":61}},{"value":"/    let mut gz = GzDecoder::new(&bytes[..])?;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":87056,"byte_end":87104,"line_start":123,"line_end":123,"column_start":1,"column_end":49}},{"value":"/    let mut s = String::new();","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":87105,"byte_end":87138,"line_start":124,"line_end":124,"column_start":1,"column_end":34}},{"value":"/    gz.read_to_string(&mut s)?;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":87139,"byte_end":87173,"line_start":125,"line_end":125,"column_start":1,"column_end":35}},{"value":"/    Ok(s)","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":87174,"byte_end":87186,"line_start":126,"line_end":126,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":87187,"byte_end":87192,"line_start":127,"line_end":127,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":87193,"byte_end":87200,"line_start":128,"line_end":128,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":87558,"byte_end":87561,"line_start":142,"line_end":142,"column_start":12,"column_end":15},"name":"new","qualname":"<GzDecoder<R>>::new","value":"pub fn new(R) -> io::Result<GzDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder from the given reader, immediately parsing the\n gzip header.","sig":null,"attributes":[{"value":"/ Creates a new decoder from the given reader, immediately parsing the","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":87325,"byte_end":87397,"line_start":135,"line_end":135,"column_start":5,"column_end":77}},{"value":"/ gzip header.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":87402,"byte_end":87418,"line_start":136,"line_end":136,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":87423,"byte_end":87426,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":87431,"byte_end":87443,"line_start":138,"line_end":138,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":87448,"byte_end":87451,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ If an error is encountered when parsing the gzip header, an error is","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":87456,"byte_end":87528,"line_start":140,"line_end":140,"column_start":5,"column_end":77}},{"value":"/ returned.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":87533,"byte_end":87546,"line_start":141,"line_end":141,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":87780,"byte_end":87786,"line_start":149,"line_end":149,"column_start":12,"column_end":18},"name":"header","qualname":"<GzDecoder<R>>::header","value":"pub fn header(&Self) -> &Header","parent":null,"children":[],"decl_id":null,"docs":" Returns the header associated with this stream.\n","sig":null,"attributes":[{"value":"/ Returns the header associated with this stream.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":87717,"byte_end":87768,"line_start":148,"line_end":148,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":87908,"byte_end":87915,"line_start":154,"line_end":154,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<GzDecoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying reader.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":87846,"byte_end":87896,"line_start":153,"line_end":153,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":88182,"byte_end":88189,"line_start":162,"line_end":162,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<GzDecoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":87981,"byte_end":88039,"line_start":158,"line_end":158,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":88044,"byte_end":88047,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":88052,"byte_end":88124,"line_start":160,"line_end":160,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":88129,"byte_end":88170,"line_start":161,"line_end":161,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":88334,"byte_end":88344,"line_start":167,"line_end":167,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<GzDecoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this decoder, returning the underlying reader.\n","sig":null,"attributes":[{"value":"/ Consumes this decoder, returning the underlying reader.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":88263,"byte_end":88322,"line_start":166,"line_end":166,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":1024},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":90306,"byte_end":90320,"line_start":229,"line_end":229,"column_start":12,"column_end":26},"name":"MultiGzDecoder","qualname":"::gz::read::MultiGzDecoder","value":"MultiGzDecoder {  }","parent":null,"children":[{"krate":0,"index":1026}],"decl_id":null,"docs":" A gzip streaming decoder that decodes all members of a multistream","sig":null,"attributes":[{"value":"/ A gzip streaming decoder that decodes all members of a multistream","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":88783,"byte_end":88853,"line_start":188,"line_end":188,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":88854,"byte_end":88857,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ A gzip member consists of a header, compressed data and a trailer. The [gzip","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":88858,"byte_end":88938,"line_start":190,"line_end":190,"column_start":1,"column_end":81}},{"value":"/ specification](https://tools.ietf.org/html/rfc1952), however, allows multiple","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":88939,"byte_end":89020,"line_start":191,"line_end":191,"column_start":1,"column_end":82}},{"value":"/ gzip members to be joined in a single stream.  `MultiGzDecoder` will","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":89021,"byte_end":89093,"line_start":192,"line_end":192,"column_start":1,"column_end":73}},{"value":"/ decode all consecutive members while `GzDecoder` will only decompress the","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":89094,"byte_end":89171,"line_start":193,"line_end":193,"column_start":1,"column_end":78}},{"value":"/ first gzip member. The multistream format is commonly used in bioinformatics,","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":89172,"byte_end":89253,"line_start":194,"line_end":194,"column_start":1,"column_end":82}},{"value":"/ for example when using the BGZF compressed data.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":89254,"byte_end":89306,"line_start":195,"line_end":195,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":89307,"byte_end":89310,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ This structure exposes a [`Read`] interface that will consume all gzip members","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":89311,"byte_end":89393,"line_start":197,"line_end":197,"column_start":1,"column_end":83}},{"value":"/ from the underlying reader and emit uncompressed data.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":89394,"byte_end":89452,"line_start":198,"line_end":198,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":89453,"byte_end":89456,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ [`Read`]: https://doc.rust-lang.org/std/io/trait.Read.html","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":89457,"byte_end":89519,"line_start":200,"line_end":200,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":89520,"byte_end":89523,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":89524,"byte_end":89538,"line_start":202,"line_end":202,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":89539,"byte_end":89542,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":89543,"byte_end":89550,"line_start":204,"line_end":204,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":89551,"byte_end":89579,"line_start":205,"line_end":205,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":89580,"byte_end":89596,"line_start":206,"line_end":206,"column_start":1,"column_end":17}},{"value":"/ # use flate2::Compression;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":89597,"byte_end":89627,"line_start":207,"line_end":207,"column_start":1,"column_end":31}},{"value":"/ # use flate2::write::GzEncoder;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":89628,"byte_end":89663,"line_start":208,"line_end":208,"column_start":1,"column_end":36}},{"value":"/ use flate2::read::MultiGzDecoder;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":89664,"byte_end":89701,"line_start":209,"line_end":209,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":89702,"byte_end":89705,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":89706,"byte_end":89723,"line_start":211,"line_end":211,"column_start":1,"column_end":18}},{"value":"/ #    let mut e = GzEncoder::new(Vec::new(), Compression::Default);","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":89724,"byte_end":89794,"line_start":212,"line_end":212,"column_start":1,"column_end":71}},{"value":"/ #    e.write(b\"Hello World\").unwrap();","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":89795,"byte_end":89837,"line_start":213,"line_end":213,"column_start":1,"column_end":43}},{"value":"/ #    let bytes = e.finish().unwrap();","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":89838,"byte_end":89879,"line_start":214,"line_end":214,"column_start":1,"column_end":42}},{"value":"/ #    println!(\"{}\", decode_reader(bytes).unwrap());","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":89880,"byte_end":89935,"line_start":215,"line_end":215,"column_start":1,"column_end":56}},{"value":"/ # }","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":89936,"byte_end":89943,"line_start":216,"line_end":216,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":89944,"byte_end":89949,"line_start":217,"line_end":217,"column_start":1,"column_end":6}},{"value":"/ // Uncompresses a Gz Encoded vector of bytes and returns a string or error","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":89950,"byte_end":90028,"line_start":218,"line_end":218,"column_start":1,"column_end":79}},{"value":"/ // Here &[u8] implements Read","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":90029,"byte_end":90062,"line_start":219,"line_end":219,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":90063,"byte_end":90066,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ fn decode_reader(bytes: Vec<u8>) -> io::Result<String> {","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":90067,"byte_end":90127,"line_start":221,"line_end":221,"column_start":1,"column_end":61}},{"value":"/    let mut gz = MultiGzDecoder::new(&bytes[..])?;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":90128,"byte_end":90181,"line_start":222,"line_end":222,"column_start":1,"column_end":54}},{"value":"/    let mut s = String::new();","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":90182,"byte_end":90215,"line_start":223,"line_end":223,"column_start":1,"column_end":34}},{"value":"/    gz.read_to_string(&mut s)?;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":90216,"byte_end":90250,"line_start":224,"line_end":224,"column_start":1,"column_end":35}},{"value":"/    Ok(s)","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":90251,"byte_end":90263,"line_start":225,"line_end":225,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":90264,"byte_end":90269,"line_start":226,"line_end":226,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":90270,"byte_end":90277,"line_start":227,"line_end":227,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":90732,"byte_end":90735,"line_start":242,"line_end":242,"column_start":12,"column_end":15},"name":"new","qualname":"<MultiGzDecoder<R>>::new","value":"pub fn new(R) -> io::Result<MultiGzDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder from the given reader, immediately parsing the\n (first) gzip header. If the gzip stream contains multiple members all will\n be decoded.","sig":null,"attributes":[{"value":"/ Creates a new decoder from the given reader, immediately parsing the","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":90417,"byte_end":90489,"line_start":234,"line_end":234,"column_start":5,"column_end":77}},{"value":"/ (first) gzip header. If the gzip stream contains multiple members all will","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":90494,"byte_end":90572,"line_start":235,"line_end":235,"column_start":5,"column_end":83}},{"value":"/ be decoded.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":90577,"byte_end":90592,"line_start":236,"line_end":236,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":90597,"byte_end":90600,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":90605,"byte_end":90617,"line_start":238,"line_end":238,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":90622,"byte_end":90625,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ If an error is encountered when parsing the gzip header, an error is","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":90630,"byte_end":90702,"line_start":240,"line_end":240,"column_start":5,"column_end":77}},{"value":"/ returned.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":90707,"byte_end":90720,"line_start":241,"line_end":241,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":90982,"byte_end":90988,"line_start":249,"line_end":249,"column_start":12,"column_end":18},"name":"header","qualname":"<MultiGzDecoder<R>>::header","value":"pub fn header(&Self) -> &Header","parent":null,"children":[],"decl_id":null,"docs":" Returns the current header associated with this stream.\n","sig":null,"attributes":[{"value":"/ Returns the current header associated with this stream.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":90911,"byte_end":90970,"line_start":248,"line_end":248,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":91110,"byte_end":91117,"line_start":254,"line_end":254,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<MultiGzDecoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying reader.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":91048,"byte_end":91098,"line_start":253,"line_end":253,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":91384,"byte_end":91391,"line_start":262,"line_end":262,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<MultiGzDecoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":91183,"byte_end":91241,"line_start":258,"line_end":258,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":91246,"byte_end":91249,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":91254,"byte_end":91326,"line_start":260,"line_end":260,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":91331,"byte_end":91372,"line_start":261,"line_end":261,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":91536,"byte_end":91546,"line_start":267,"line_end":267,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<MultiGzDecoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this decoder, returning the underlying reader.\n","sig":null,"attributes":[{"value":"/ Consumes this decoder, returning the underlying reader.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":91465,"byte_end":91524,"line_start":266,"line_end":266,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":1030},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":92853,"byte_end":92862,"line_start":37,"line_end":37,"column_start":12,"column_end":21},"name":"GzEncoder","qualname":"::gz::write::GzEncoder","value":"GzEncoder {  }","parent":null,"children":[{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":1035}],"decl_id":null,"docs":" A gzip streaming encoder","sig":null,"attributes":[{"value":"/ A gzip streaming encoder","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":92218,"byte_end":92246,"line_start":14,"line_end":14,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":92247,"byte_end":92250,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This structure exposes a [`Write`] interface that will emit compressed data","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":92251,"byte_end":92330,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ to the underlying writer `W`.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":92331,"byte_end":92364,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":92365,"byte_end":92368,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`Write`]: https://doc.rust-lang.org/std/io/trait.Write.html","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":92369,"byte_end":92433,"line_start":19,"line_end":19,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":92434,"byte_end":92437,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":92438,"byte_end":92452,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":92453,"byte_end":92456,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":92457,"byte_end":92464,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":92465,"byte_end":92493,"line_start":24,"line_end":24,"column_start":1,"column_end":29}},{"value":"/ use flate2::Compression;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":92494,"byte_end":92522,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/ use flate2::write::GzEncoder;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":92523,"byte_end":92556,"line_start":26,"line_end":26,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":92557,"byte_end":92560,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ // Vec<u8> implements Write to print the compressed bytes of sample string","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":92561,"byte_end":92639,"line_start":28,"line_end":28,"column_start":1,"column_end":79}},{"value":"/ # fn main() {","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":92640,"byte_end":92657,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":92658,"byte_end":92661,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let mut e = GzEncoder::new(Vec::new(), Compression::Default);","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":92662,"byte_end":92727,"line_start":31,"line_end":31,"column_start":1,"column_end":66}},{"value":"/ e.write(b\"Hello World\").unwrap();","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":92728,"byte_end":92765,"line_start":32,"line_end":32,"column_start":1,"column_end":38}},{"value":"/ println!(\"{:?}\", e.finish().unwrap());","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":92766,"byte_end":92808,"line_start":33,"line_end":33,"column_start":1,"column_end":43}},{"value":"/ # }","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":92809,"byte_end":92816,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":92817,"byte_end":92824,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":530},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":93607,"byte_end":93610,"line_start":61,"line_end":61,"column_start":12,"column_end":15},"name":"new","qualname":"<GzEncoder<W>>::new","value":"pub fn new(W, Compression) -> GzEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder which will use the given compression level.","sig":null,"attributes":[{"value":"/ Creates a new encoder which will use the given compression level.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":93268,"byte_end":93337,"line_start":54,"line_end":54,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":93342,"byte_end":93345,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ The encoder is not configured specially for the emitted header. For","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":93350,"byte_end":93421,"line_start":56,"line_end":56,"column_start":5,"column_end":76}},{"value":"/ header configuration, see the `Builder` type.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":93426,"byte_end":93475,"line_start":57,"line_end":57,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":93480,"byte_end":93483,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ The data written to the returned encoder will be compressed and then","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":93488,"byte_end":93560,"line_start":59,"line_end":59,"column_start":5,"column_end":77}},{"value":"/ written to the stream `w`.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":93565,"byte_end":93595,"line_start":60,"line_end":60,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":531},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":93767,"byte_end":93774,"line_start":66,"line_end":66,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<GzEncoder<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying writer.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":93705,"byte_end":93755,"line_start":65,"line_end":65,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":532},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":94031,"byte_end":94038,"line_start":74,"line_end":74,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<GzEncoder<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying writer.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":93830,"byte_end":93888,"line_start":70,"line_end":70,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":93893,"byte_end":93896,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the writer may result in surprising results if","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":93901,"byte_end":93973,"line_start":72,"line_end":72,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":93978,"byte_end":94019,"line_start":73,"line_end":73,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":533},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":94717,"byte_end":94727,"line_start":93,"line_end":93,"column_start":12,"column_end":22},"name":"try_finish","qualname":"<GzEncoder<W>>::try_finish","value":"pub fn try_finish(&mut Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to finish this output stream, writing out final chunks of data.","sig":null,"attributes":[{"value":"/ Attempt to finish this output stream, writing out final chunks of data.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":94102,"byte_end":94177,"line_start":78,"line_end":78,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":94182,"byte_end":94185,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Note that this function can only be used once data has finished being","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":94190,"byte_end":94263,"line_start":80,"line_end":80,"column_start":5,"column_end":78}},{"value":"/ written to the output stream. After this function is called then further","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":94268,"byte_end":94344,"line_start":81,"line_end":81,"column_start":5,"column_end":81}},{"value":"/ calls to `write` may result in a panic.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":94349,"byte_end":94392,"line_start":82,"line_end":82,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":94397,"byte_end":94400,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":94405,"byte_end":94417,"line_start":84,"line_end":84,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":94422,"byte_end":94425,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ Attempts to write data to this stream may result in a panic after this","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":94430,"byte_end":94504,"line_start":86,"line_end":86,"column_start":5,"column_end":79}},{"value":"/ function is called.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":94509,"byte_end":94532,"line_start":87,"line_end":87,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":94537,"byte_end":94540,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":94545,"byte_end":94557,"line_start":89,"line_end":89,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":94562,"byte_end":94565,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to complete this stream, and any I/O","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":94570,"byte_end":94641,"line_start":91,"line_end":91,"column_start":5,"column_end":76}},{"value":"/ errors which occur will be returned from this function.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":94646,"byte_end":94705,"line_start":92,"line_end":92,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":534},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":96115,"byte_end":96121,"line_start":129,"line_end":129,"column_start":12,"column_end":18},"name":"finish","qualname":"<GzEncoder<W>>::finish","value":"pub fn finish(Self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Finish encoding this stream, returning the underlying writer once the\n encoding is done.","sig":null,"attributes":[{"value":"/ Finish encoding this stream, returning the underlying writer once the","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":95455,"byte_end":95528,"line_start":116,"line_end":116,"column_start":5,"column_end":78}},{"value":"/ encoding is done.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":95533,"byte_end":95554,"line_start":117,"line_end":117,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":95559,"byte_end":95562,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ Note that this function may not be suitable to call in a situation where","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":95567,"byte_end":95643,"line_start":119,"line_end":119,"column_start":5,"column_end":81}},{"value":"/ the underlying stream is an asynchronous I/O stream. To finish a stream","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":95648,"byte_end":95723,"line_start":120,"line_end":120,"column_start":5,"column_end":80}},{"value":"/ the `try_finish` (or `shutdown`) method should be used instead. To","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":95728,"byte_end":95798,"line_start":121,"line_end":121,"column_start":5,"column_end":75}},{"value":"/ re-acquire ownership of a stream it is safe to call this method after","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":95803,"byte_end":95876,"line_start":122,"line_end":122,"column_start":5,"column_end":78}},{"value":"/ `try_finish` or `shutdown` has returned `Ok`.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":95881,"byte_end":95930,"line_start":123,"line_end":123,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":95935,"byte_end":95938,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":95943,"byte_end":95955,"line_start":125,"line_end":125,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":95960,"byte_end":95963,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to complete this stream, and any I/O","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":95968,"byte_end":96039,"line_start":127,"line_end":127,"column_start":5,"column_end":76}},{"value":"/ errors which occur will be returned from this function.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":96044,"byte_end":96103,"line_start":128,"line_end":128,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":1039},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":57765,"byte_end":57771,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"name":"Header","qualname":"::gz::Header","value":"Header {  }","parent":null,"children":[{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1042},{"krate":0,"index":1043}],"decl_id":null,"docs":" A structure representing the header of a gzip stream.","sig":null,"attributes":[{"value":"/ A structure representing the header of a gzip stream.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":57576,"byte_end":57633,"line_start":19,"line_end":19,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":57634,"byte_end":57637,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The header can contain metadata about the file that was compressed, if","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":57638,"byte_end":57712,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ present.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":57713,"byte_end":57725,"line_start":22,"line_end":22,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":547},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":57986,"byte_end":57994,"line_start":33,"line_end":33,"column_start":12,"column_end":20},"name":"filename","qualname":"<Header>::filename","value":"pub fn filename(&Self) -> Option<&[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `filename` field of this gzip stream's header, if present.\n","sig":null,"attributes":[{"value":"/ Returns the `filename` field of this gzip stream's header, if present.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":57900,"byte_end":57974,"line_start":32,"line_end":32,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":58162,"byte_end":58167,"line_start":38,"line_end":38,"column_start":12,"column_end":17},"name":"extra","qualname":"<Header>::extra","value":"pub fn extra(&Self) -> Option<&[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `extra` field of this gzip stream's header, if present.\n","sig":null,"attributes":[{"value":"/ Returns the `extra` field of this gzip stream's header, if present.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":58079,"byte_end":58150,"line_start":37,"line_end":37,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":58334,"byte_end":58341,"line_start":43,"line_end":43,"column_start":12,"column_end":19},"name":"comment","qualname":"<Header>::comment","value":"pub fn comment(&Self) -> Option<&[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `comment` field of this gzip stream's header, if present.\n","sig":null,"attributes":[{"value":"/ Returns the `comment` field of this gzip stream's header, if present.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":58249,"byte_end":58322,"line_start":42,"line_end":42,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":553},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":58990,"byte_end":58995,"line_start":56,"line_end":56,"column_start":12,"column_end":17},"name":"mtime","qualname":"<Header>::mtime","value":"pub fn mtime(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" This gives the most recent modification time of the original file being compressed.","sig":null,"attributes":[{"value":"/ This gives the most recent modification time of the original file being compressed.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":58425,"byte_end":58512,"line_start":47,"line_end":47,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":58517,"byte_end":58520,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ The time is in Unix format, i.e., seconds since 00:00:00 GMT, Jan. 1, 1970.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":58525,"byte_end":58604,"line_start":49,"line_end":49,"column_start":5,"column_end":84}},{"value":"/ (Note that this may cause problems for MS-DOS and other systems that use local","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":58609,"byte_end":58691,"line_start":50,"line_end":50,"column_start":5,"column_end":87}},{"value":"/ rather than Universal time.) If the compressed data did not come from a file,","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":58696,"byte_end":58777,"line_start":51,"line_end":51,"column_start":5,"column_end":86}},{"value":"/ `mtime` is set to the time at which compression started.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":58782,"byte_end":58842,"line_start":52,"line_end":52,"column_start":5,"column_end":65}},{"value":"/ `mtime` = 0 means no time stamp is available.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":58847,"byte_end":58896,"line_start":53,"line_end":53,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":58901,"byte_end":58904,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ The usage of `mtime` is discouraged because of Year 2038 problem.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":58909,"byte_end":58978,"line_start":55,"line_end":55,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":59390,"byte_end":59407,"line_start":67,"line_end":67,"column_start":12,"column_end":29},"name":"mtime_as_datetime","qualname":"<Header>::mtime_as_datetime","value":"pub fn mtime_as_datetime(&Self) -> Option<time::SystemTime>","parent":null,"children":[],"decl_id":null,"docs":" Returns the most recent modification time represented by a date-time type.\n Returns `None` if the value of the underlying counter is 0,\n indicating no time stamp is available.","sig":null,"attributes":[{"value":"/ Returns the most recent modification time represented by a date-time type.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":59042,"byte_end":59120,"line_start":60,"line_end":60,"column_start":5,"column_end":83}},{"value":"/ Returns `None` if the value of the underlying counter is 0,","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":59125,"byte_end":59188,"line_start":61,"line_end":61,"column_start":5,"column_end":68}},{"value":"/ indicating no time stamp is available.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":59193,"byte_end":59235,"line_start":62,"line_end":62,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":59240,"byte_end":59243,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":59248,"byte_end":59251,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ The time is measured as seconds since 00:00:00 GMT, Jan. 1 1970.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":59256,"byte_end":59324,"line_start":65,"line_end":65,"column_start":5,"column_end":73}},{"value":"/ See [`mtime`](#method.mtime) for more detail.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":59329,"byte_end":59378,"line_start":66,"line_end":66,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":1050},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":60472,"byte_end":60479,"line_start":105,"line_end":105,"column_start":12,"column_end":19},"name":"Builder","qualname":"::gz::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":1051},{"krate":0,"index":1052},{"krate":0,"index":1053},{"krate":0,"index":1054}],"decl_id":null,"docs":" A builder structure to create a new gzip Encoder.","sig":null,"attributes":[{"value":"/ A builder structure to create a new gzip Encoder.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":59684,"byte_end":59737,"line_start":78,"line_end":78,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":59738,"byte_end":59741,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ This structure controls header configuration options such as the filename.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":59742,"byte_end":59820,"line_start":80,"line_end":80,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":59821,"byte_end":59824,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":59825,"byte_end":59839,"line_start":82,"line_end":82,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":59840,"byte_end":59843,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":59844,"byte_end":59851,"line_start":84,"line_end":84,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":59852,"byte_end":59880,"line_start":85,"line_end":85,"column_start":1,"column_end":29}},{"value":"/ # use std::io;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":59881,"byte_end":59899,"line_start":86,"line_end":86,"column_start":1,"column_end":19}},{"value":"/ use std::fs::File;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":59900,"byte_end":59922,"line_start":87,"line_end":87,"column_start":1,"column_end":23}},{"value":"/ use flate2::GzBuilder;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":59923,"byte_end":59949,"line_start":88,"line_end":88,"column_start":1,"column_end":27}},{"value":"/ use flate2::Compression;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":59950,"byte_end":59978,"line_start":89,"line_end":89,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":59979,"byte_end":59982,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ // GzBuilder opens a file and writes a sample string using Builder pattern","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":59983,"byte_end":60061,"line_start":91,"line_end":91,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":60062,"byte_end":60065,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ # fn sample_builder() -> Result<(), io::Error> {","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":60066,"byte_end":60118,"line_start":93,"line_end":93,"column_start":1,"column_end":53}},{"value":"/ let f = File::create(\"examples/hello_world.gz\")?;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":60119,"byte_end":60172,"line_start":94,"line_end":94,"column_start":1,"column_end":54}},{"value":"/ let mut gz = GzBuilder::new()","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":60173,"byte_end":60206,"line_start":95,"line_end":95,"column_start":1,"column_end":34}},{"value":"/                 .filename(\"hello_world.txt\")","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":60207,"byte_end":60255,"line_start":96,"line_end":96,"column_start":1,"column_end":49}},{"value":"/                 .comment(\"test file, please delete\")","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":60256,"byte_end":60312,"line_start":97,"line_end":97,"column_start":1,"column_end":57}},{"value":"/                 .write(f, Compression::Default);","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":60313,"byte_end":60365,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/ gz.write(b\"hello world\")?;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":60366,"byte_end":60396,"line_start":99,"line_end":99,"column_start":1,"column_end":31}},{"value":"/ gz.finish()?;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":60397,"byte_end":60414,"line_start":100,"line_end":100,"column_start":1,"column_end":18}},{"value":"/ # Ok(())","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":60415,"byte_end":60427,"line_start":101,"line_end":101,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":60428,"byte_end":60435,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":60436,"byte_end":60443,"line_start":103,"line_end":103,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":556},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":60678,"byte_end":60681,"line_start":114,"line_end":114,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Create a new blank builder with no header by default.\n","sig":null,"attributes":[{"value":"/ Create a new blank builder with no header by default.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":60609,"byte_end":60666,"line_start":113,"line_end":113,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":557},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":60901,"byte_end":60906,"line_start":124,"line_end":124,"column_start":12,"column_end":17},"name":"mtime","qualname":"<Builder>::mtime","value":"pub fn mtime(Self, u32) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Configure the `mtime` field in the gzip header.\n","sig":null,"attributes":[{"value":"/ Configure the `mtime` field in the gzip header.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":60838,"byte_end":60889,"line_start":123,"line_end":123,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":558},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":61057,"byte_end":61062,"line_start":130,"line_end":130,"column_start":12,"column_end":17},"name":"extra","qualname":"<Builder>::extra","value":"pub fn extra<T: Into<Vec<u8>>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Configure the `extra` field in the gzip header.\n","sig":null,"attributes":[{"value":"/ Configure the `extra` field in the gzip header.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":60994,"byte_end":61045,"line_start":129,"line_end":129,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":560},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":61334,"byte_end":61342,"line_start":140,"line_end":140,"column_start":12,"column_end":20},"name":"filename","qualname":"<Builder>::filename","value":"pub fn filename<T: Into<Vec<u8>>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Configure the `filename` field in the gzip header.","sig":null,"attributes":[{"value":"/ Configure the `filename` field in the gzip header.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":61179,"byte_end":61233,"line_start":135,"line_end":135,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":61238,"byte_end":61241,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":61246,"byte_end":61258,"line_start":137,"line_end":137,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":61263,"byte_end":61266,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ Panics if the `filename` slice contains a zero.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":61271,"byte_end":61322,"line_start":139,"line_end":139,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":61644,"byte_end":61651,"line_start":150,"line_end":150,"column_start":12,"column_end":19},"name":"comment","qualname":"<Builder>::comment","value":"pub fn comment<T: Into<Vec<u8>>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Configure the `comment` field in the gzip header.","sig":null,"attributes":[{"value":"/ Configure the `comment` field in the gzip header.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":61491,"byte_end":61544,"line_start":145,"line_end":145,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":61549,"byte_end":61552,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":61557,"byte_end":61569,"line_start":147,"line_end":147,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":61574,"byte_end":61577,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ Panics if the `comment` slice contains a zero.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":61582,"byte_end":61632,"line_start":149,"line_end":149,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":62012,"byte_end":62017,"line_start":159,"line_end":159,"column_start":12,"column_end":17},"name":"write","qualname":"<Builder>::write","value":"pub fn write<W: Write>(Self, W, Compression) -> write::GzEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Consume this builder, creating a writer encoder in the process.","sig":null,"attributes":[{"value":"/ Consume this builder, creating a writer encoder in the process.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":61797,"byte_end":61864,"line_start":155,"line_end":155,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":61869,"byte_end":61872,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ The data written to the returned encoder will be compressed and then","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":61877,"byte_end":61949,"line_start":157,"line_end":157,"column_start":5,"column_end":77}},{"value":"/ written out to the supplied parameter `w`.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":61954,"byte_end":62000,"line_start":158,"line_end":158,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":62361,"byte_end":62365,"line_start":167,"line_end":167,"column_start":12,"column_end":16},"name":"read","qualname":"<Builder>::read","value":"pub fn read<R: Read>(Self, R, Compression) -> read::GzEncoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Consume this builder, creating a reader encoder in the process.","sig":null,"attributes":[{"value":"/ Consume this builder, creating a reader encoder in the process.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":62151,"byte_end":62218,"line_start":163,"line_end":163,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":62223,"byte_end":62226,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ Data read from the returned encoder will be the compressed version of","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":62231,"byte_end":62304,"line_start":165,"line_end":165,"column_start":5,"column_end":78}},{"value":"/ the data read from the given reader.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":62309,"byte_end":62349,"line_start":166,"line_end":166,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":62714,"byte_end":62722,"line_start":175,"line_end":175,"column_start":12,"column_end":20},"name":"buf_read","qualname":"<Builder>::buf_read","value":"pub fn buf_read<R>(Self, R, Compression) -> bufread::GzEncoder<R> where\nR: BufRead","parent":null,"children":[],"decl_id":null,"docs":" Consume this builder, creating a reader encoder in the process.","sig":null,"attributes":[{"value":"/ Consume this builder, creating a reader encoder in the process.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":62504,"byte_end":62571,"line_start":171,"line_end":171,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":62576,"byte_end":62579,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Data read from the returned encoder will be the compressed version of","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":62584,"byte_end":62657,"line_start":173,"line_end":173,"column_start":5,"column_end":78}},{"value":"/ the data read from the given reader.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":62662,"byte_end":62702,"line_start":174,"line_end":174,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1067},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":104801,"byte_end":104809,"line_start":25,"line_end":25,"column_start":12,"column_end":20},"name":"Compress","qualname":"::mem::Compress","value":"Compress {  }","parent":null,"children":[{"krate":0,"index":1068}],"decl_id":null,"docs":" Raw in-memory compression stream for blocks of data.","sig":null,"attributes":[{"value":"/ Raw in-memory compression stream for blocks of data.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":104196,"byte_end":104252,"line_start":12,"line_end":12,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":104253,"byte_end":104256,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This type is the building block for the I/O streams in the rest of this","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":104257,"byte_end":104332,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"/ crate. It requires more management than the [`Read`]/[`Write`] API but is","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":104333,"byte_end":104410,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ maximally flexible in terms of accepting input from any source and being","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":104411,"byte_end":104487,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ able to produce output to any memory location.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":104488,"byte_end":104538,"line_start":17,"line_end":17,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":104539,"byte_end":104542,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ It is recommended to use the I/O stream adaptors over this type as they're","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":104543,"byte_end":104621,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ easier to use.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":104622,"byte_end":104640,"line_start":20,"line_end":20,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":104641,"byte_end":104644,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ [`Read`]: https://doc.rust-lang.org/std/io/trait.Read.html","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":104645,"byte_end":104707,"line_start":22,"line_end":22,"column_start":1,"column_end":63}},{"value":"/ [`Write`]: https://doc.rust-lang.org/std/io/trait.Write.html","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":104708,"byte_end":104772,"line_start":23,"line_end":23,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":1071},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":105454,"byte_end":105464,"line_start":42,"line_end":42,"column_start":12,"column_end":22},"name":"Decompress","qualname":"::mem::Decompress","value":"Decompress {  }","parent":null,"children":[{"krate":0,"index":1072}],"decl_id":null,"docs":" Raw in-memory decompression stream for blocks of data.","sig":null,"attributes":[{"value":"/ Raw in-memory decompression stream for blocks of data.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":104847,"byte_end":104905,"line_start":29,"line_end":29,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":104906,"byte_end":104909,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This type is the building block for the I/O streams in the rest of this","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":104910,"byte_end":104985,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/ crate. It requires more management than the [`Read`]/[`Write`] API but is","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":104986,"byte_end":105063,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"/ maximally flexible in terms of accepting input from any source and being","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":105064,"byte_end":105140,"line_start":33,"line_end":33,"column_start":1,"column_end":77}},{"value":"/ able to produce output to any memory location.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":105141,"byte_end":105191,"line_start":34,"line_end":34,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":105192,"byte_end":105195,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ It is recommended to use the I/O stream adaptors over this type as they're","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":105196,"byte_end":105274,"line_start":36,"line_end":36,"column_start":1,"column_end":79}},{"value":"/ easier to use.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":105275,"byte_end":105293,"line_start":37,"line_end":37,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":105294,"byte_end":105297,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`Read`]: https://doc.rust-lang.org/std/io/trait.Read.html","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":105298,"byte_end":105360,"line_start":39,"line_end":39,"column_start":1,"column_end":63}},{"value":"/ [`Write`]: https://doc.rust-lang.org/std/io/trait.Write.html","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":105361,"byte_end":105425,"line_start":40,"line_end":40,"column_start":1,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1091},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":106338,"byte_end":106342,"line_start":73,"line_end":73,"column_start":5,"column_end":9},"name":"None","qualname":"::mem::Flush::None","value":"Flush::None","parent":{"krate":0,"index":1090},"children":[],"decl_id":null,"docs":" A typical parameter for passing to compression/decompression functions,\n this indicates that the underlying stream to decide how much data to\n accumulate before producing output in order to maximize compression.\n","sig":null,"attributes":[{"value":"/ A typical parameter for passing to compression/decompression functions,","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":106104,"byte_end":106179,"line_start":70,"line_end":70,"column_start":5,"column_end":80}},{"value":"/ this indicates that the underlying stream to decide how much data to","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":106184,"byte_end":106256,"line_start":71,"line_end":71,"column_start":5,"column_end":77}},{"value":"/ accumulate before producing output in order to maximize compression.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":106261,"byte_end":106333,"line_start":72,"line_end":72,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1094},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":106793,"byte_end":106797,"line_start":82,"line_end":82,"column_start":5,"column_end":9},"name":"Sync","qualname":"::mem::Flush::Sync","value":"Flush::Sync","parent":{"krate":0,"index":1090},"children":[],"decl_id":null,"docs":" All pending output is flushed to the output buffer and the output is\n aligned on a byte boundary so that the decompressor can get all input\n data available so far.","sig":null,"attributes":[{"value":"/ All pending output is flushed to the output buffer and the output is","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":106377,"byte_end":106449,"line_start":75,"line_end":75,"column_start":5,"column_end":77}},{"value":"/ aligned on a byte boundary so that the decompressor can get all input","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":106454,"byte_end":106527,"line_start":76,"line_end":76,"column_start":5,"column_end":78}},{"value":"/ data available so far.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":106532,"byte_end":106558,"line_start":77,"line_end":77,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":106563,"byte_end":106566,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Flushing may degrade compression for some compression algorithms and so","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":106571,"byte_end":106646,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ it should only be used when necessary. This will complete the current","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":106651,"byte_end":106724,"line_start":80,"line_end":80,"column_start":5,"column_end":78}},{"value":"/ deflate block and follow it with an empty stored block.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":106729,"byte_end":106788,"line_start":81,"line_end":81,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1097},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":107330,"byte_end":107337,"line_start":92,"line_end":92,"column_start":5,"column_end":12},"name":"Partial","qualname":"::mem::Flush::Partial","value":"Flush::Partial","parent":{"krate":0,"index":1090},"children":[],"decl_id":null,"docs":" All pending output is flushed to the output buffer, but the output is\n not aligned to a byte boundary.","sig":null,"attributes":[{"value":"/ All pending output is flushed to the output buffer, but the output is","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":106834,"byte_end":106907,"line_start":84,"line_end":84,"column_start":5,"column_end":78}},{"value":"/ not aligned to a byte boundary.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":106912,"byte_end":106947,"line_start":85,"line_end":85,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":106952,"byte_end":106955,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ All of the input data so far will be available to the decompressor (as","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":106960,"byte_end":107034,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ with `Flush::Sync`. This completes the current deflate block and follows","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":107039,"byte_end":107115,"line_start":88,"line_end":88,"column_start":5,"column_end":81}},{"value":"/ it with an empty fixed codes block that is 10 bites long, and it assures","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":107120,"byte_end":107196,"line_start":89,"line_end":89,"column_start":5,"column_end":81}},{"value":"/ that enough bytes are output in order for the decompessor to finish the","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":107201,"byte_end":107276,"line_start":90,"line_end":90,"column_start":5,"column_end":80}},{"value":"/ block before the empty fixed code block.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":107281,"byte_end":107325,"line_start":91,"line_end":91,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1100},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":107994,"byte_end":107999,"line_start":104,"line_end":104,"column_start":5,"column_end":10},"name":"Block","qualname":"::mem::Flush::Block","value":"Flush::Block","parent":{"krate":0,"index":1090},"children":[],"decl_id":null,"docs":" A deflate block is completed and emitted, as for `Flush::Sync`, but the\n output is not aligned on a byte boundary and up to seven vits of the\n current block are held to be written as the next byte after the next\n deflate block is completed.","sig":null,"attributes":[{"value":"/ A deflate block is completed and emitted, as for `Flush::Sync`, but the","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":107377,"byte_end":107452,"line_start":94,"line_end":94,"column_start":5,"column_end":80}},{"value":"/ output is not aligned on a byte boundary and up to seven vits of the","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":107457,"byte_end":107529,"line_start":95,"line_end":95,"column_start":5,"column_end":77}},{"value":"/ current block are held to be written as the next byte after the next","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":107534,"byte_end":107606,"line_start":96,"line_end":96,"column_start":5,"column_end":77}},{"value":"/ deflate block is completed.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":107611,"byte_end":107642,"line_start":97,"line_end":97,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":107647,"byte_end":107650,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ In this case the decompressor may not be provided enough bits at this","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":107655,"byte_end":107728,"line_start":99,"line_end":99,"column_start":5,"column_end":78}},{"value":"/ point in order to complete decompression of the data provided so far to","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":107733,"byte_end":107808,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/ the compressor, it may need to wait for the next block to be emitted.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":107813,"byte_end":107886,"line_start":101,"line_end":101,"column_start":5,"column_end":78}},{"value":"/ This is for advanced applications that need to control the emission of","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":107891,"byte_end":107965,"line_start":102,"line_end":102,"column_start":5,"column_end":79}},{"value":"/ deflate blocks.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":107970,"byte_end":107989,"line_start":103,"line_end":103,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1103},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":108335,"byte_end":108339,"line_start":111,"line_end":111,"column_start":5,"column_end":9},"name":"Full","qualname":"::mem::Flush::Full","value":"Flush::Full","parent":{"krate":0,"index":1090},"children":[],"decl_id":null,"docs":" All output is flushed as with `Flush::Sync` and the compression state is\n reset so decompression can restart from this point if previous\n compressed data has been damaged or if random access is desired.","sig":null,"attributes":[{"value":"/ All output is flushed as with `Flush::Sync` and the compression state is","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":108031,"byte_end":108107,"line_start":106,"line_end":106,"column_start":5,"column_end":81}},{"value":"/ reset so decompression can restart from this point if previous","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":108112,"byte_end":108178,"line_start":107,"line_end":107,"column_start":5,"column_end":71}},{"value":"/ compressed data has been damaged or if random access is desired.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":108183,"byte_end":108251,"line_start":108,"line_end":108,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":108256,"byte_end":108259,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ Using this option too often can seriously degrade compression.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":108264,"byte_end":108330,"line_start":110,"line_end":110,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1106},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":108567,"byte_end":108573,"line_start":117,"line_end":117,"column_start":5,"column_end":11},"name":"Finish","qualname":"::mem::Flush::Finish","value":"Flush::Finish","parent":{"krate":0,"index":1090},"children":[],"decl_id":null,"docs":" Pending input is processed and pending output is flushed.","sig":null,"attributes":[{"value":"/ Pending input is processed and pending output is flushed.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":108376,"byte_end":108437,"line_start":113,"line_end":113,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":108442,"byte_end":108445,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ The return value may indicate that the stream is not yet done and more","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":108450,"byte_end":108524,"line_start":115,"line_end":115,"column_start":5,"column_end":79}},{"value":"/ data has yet to be processed.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":108529,"byte_end":108562,"line_start":116,"line_end":116,"column_start":5,"column_end":38}}]},{"kind":"Enum","id":{"krate":0,"index":1090},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":106092,"byte_end":106097,"line_start":69,"line_end":69,"column_start":10,"column_end":15},"name":"Flush","qualname":"::mem::Flush","value":"pub enum Flush { None = , Sync = , Partial = , Block = , Full = , Finish = , }","parent":null,"children":[{"krate":0,"index":1091},{"krate":0,"index":1094},{"krate":0,"index":1097},{"krate":0,"index":1100},{"krate":0,"index":1103},{"krate":0,"index":1106}],"decl_id":null,"docs":" Values which indicate the form of flushing to be used when compressing or\n decompressing in-memory data.\n","sig":null,"attributes":[{"value":"/ Values which indicate the form of flushing to be used when compressing or","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":105926,"byte_end":106003,"line_start":66,"line_end":66,"column_start":1,"column_end":78}},{"value":"/ decompressing in-memory data.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":106004,"byte_end":106037,"line_start":67,"line_end":67,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1120},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":108759,"byte_end":108768,"line_start":123,"line_end":123,"column_start":12,"column_end":21},"name":"DataError","qualname":"::mem::DataError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned when a decompression object finds that the input stream of\n bytes was not a valid input stream of bytes.\n","sig":null,"attributes":[{"value":"/ Error returned when a decompression object finds that the input stream of","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":108604,"byte_end":108681,"line_start":120,"line_end":120,"column_start":1,"column_end":78}},{"value":"/ bytes was not a valid input stream of bytes.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":108682,"byte_end":108730,"line_start":121,"line_end":121,"column_start":1,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1126},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":109125,"byte_end":109127,"line_start":133,"line_end":133,"column_start":5,"column_end":7},"name":"Ok","qualname":"::mem::Status::Ok","value":"Status::Ok","parent":{"krate":0,"index":1125},"children":[],"decl_id":null,"docs":" Indicates success.","sig":null,"attributes":[{"value":"/ Indicates success.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":108946,"byte_end":108968,"line_start":129,"line_end":129,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":108973,"byte_end":108976,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Means that more input may be needed but isn't available","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":108981,"byte_end":109040,"line_start":131,"line_end":131,"column_start":5,"column_end":64}},{"value":"/ and/or there' smore output to be written but the output buffer is full.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":109045,"byte_end":109120,"line_start":132,"line_end":132,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1128},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":109606,"byte_end":109614,"line_start":144,"line_end":144,"column_start":5,"column_end":13},"name":"BufError","qualname":"::mem::Status::BufError","value":"Status::BufError","parent":{"krate":0,"index":1125},"children":[],"decl_id":null,"docs":" Indicates that forward progress is not possible due to input or output\n buffers being empty.","sig":null,"attributes":[{"value":"/ Indicates that forward progress is not possible due to input or output","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":109134,"byte_end":109208,"line_start":135,"line_end":135,"column_start":5,"column_end":79}},{"value":"/ buffers being empty.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":109213,"byte_end":109237,"line_start":136,"line_end":136,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":109242,"byte_end":109245,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ For compression it means the input buffer needs some more data or the","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":109250,"byte_end":109323,"line_start":138,"line_end":138,"column_start":5,"column_end":78}},{"value":"/ output buffer needs to be freed up before trying again.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":109328,"byte_end":109387,"line_start":139,"line_end":139,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":109392,"byte_end":109395,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ For decompression this means that more input is needed to continue or","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":109400,"byte_end":109473,"line_start":141,"line_end":141,"column_start":5,"column_end":78}},{"value":"/ the output buffer isn't large enough to contain the result. The function","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":109478,"byte_end":109554,"line_start":142,"line_end":142,"column_start":5,"column_end":81}},{"value":"/ can be called again after fixing both.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":109559,"byte_end":109601,"line_start":143,"line_end":143,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1130},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":109896,"byte_end":109905,"line_start":151,"line_end":151,"column_start":5,"column_end":14},"name":"StreamEnd","qualname":"::mem::Status::StreamEnd","value":"Status::StreamEnd","parent":{"krate":0,"index":1125},"children":[],"decl_id":null,"docs":" Indicates that all input has been consumed and all output bytes have\n been written. Decompression/compression should not be called again.","sig":null,"attributes":[{"value":"/ Indicates that all input has been consumed and all output bytes have","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":109621,"byte_end":109693,"line_start":146,"line_end":146,"column_start":5,"column_end":77}},{"value":"/ been written. Decompression/compression should not be called again.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":109698,"byte_end":109769,"line_start":147,"line_end":147,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":109774,"byte_end":109777,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ For decompression with zlib streams the adler-32 of the decompressed","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":109782,"byte_end":109854,"line_start":149,"line_end":149,"column_start":5,"column_end":77}},{"value":"/ data has also been verified.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":109859,"byte_end":109891,"line_start":150,"line_end":150,"column_start":5,"column_end":37}}]},{"kind":"Enum","id":{"krate":0,"index":1125},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":108933,"byte_end":108939,"line_start":128,"line_end":128,"column_start":10,"column_end":16},"name":"Status","qualname":"::mem::Status","value":"pub enum Status { Ok, BufError, StreamEnd, }","parent":null,"children":[{"krate":0,"index":1126},{"krate":0,"index":1128},{"krate":0,"index":1130}],"decl_id":null,"docs":" Possible status results of compressing some data or successfully\n decompressing a block of data.\n","sig":null,"attributes":[{"value":"/ Possible status results of compressing some data or successfully","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":108775,"byte_end":108843,"line_start":125,"line_end":125,"column_start":1,"column_end":69}},{"value":"/ decompressing a block of data.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":108844,"byte_end":108878,"line_start":126,"line_end":126,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":671},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":110229,"byte_end":110232,"line_start":160,"line_end":160,"column_start":12,"column_end":15},"name":"new","qualname":"<Compress>::new","value":"pub fn new(Compression, bool) -> Compress","parent":null,"children":[],"decl_id":null,"docs":" Creates a new object ready for compressing data that it's given.","sig":null,"attributes":[{"value":"/ Creates a new object ready for compressing data that it's given.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":109930,"byte_end":109998,"line_start":155,"line_end":155,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":110003,"byte_end":110006,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ The `level` argument here indicates what level of compression is going","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":110011,"byte_end":110085,"line_start":157,"line_end":157,"column_start":5,"column_end":79}},{"value":"/ to be performed, and the `zlib_header` argument indicates whether the","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":110090,"byte_end":110163,"line_start":158,"line_end":158,"column_start":5,"column_end":78}},{"value":"/ output data should have a zlib header or not.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":110168,"byte_end":110217,"line_start":159,"line_end":159,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":111387,"byte_end":111395,"line_start":187,"line_end":187,"column_start":12,"column_end":20},"name":"total_in","qualname":"<Compress>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of input bytes which have been processed by\n this compression object.\n","sig":null,"attributes":[{"value":"/ Returns the total number of input bytes which have been processed by","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":111270,"byte_end":111342,"line_start":185,"line_end":185,"column_start":5,"column_end":77}},{"value":"/ this compression object.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":111347,"byte_end":111375,"line_start":186,"line_end":186,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":111568,"byte_end":111577,"line_start":193,"line_end":193,"column_start":12,"column_end":21},"name":"total_out","qualname":"<Compress>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of output bytes which have been produced by\n this compression object.\n","sig":null,"attributes":[{"value":"/ Returns the total number of output bytes which have been produced by","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":111451,"byte_end":111523,"line_start":191,"line_end":191,"column_start":5,"column_end":77}},{"value":"/ this compression object.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":111528,"byte_end":111556,"line_start":192,"line_end":192,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":674},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":111807,"byte_end":111812,"line_start":200,"line_end":200,"column_start":12,"column_end":17},"name":"reset","qualname":"<Compress>::reset","value":"pub fn reset(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Quickly resets this compressor without having to reallocate anything.","sig":null,"attributes":[{"value":"/ Quickly resets this compressor without having to reallocate anything.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":111634,"byte_end":111707,"line_start":197,"line_end":197,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":111712,"byte_end":111715,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to dropping this object and then creating a new one.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":111720,"byte_end":111795,"line_start":199,"line_end":199,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":675},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":112418,"byte_end":112426,"line_start":215,"line_end":215,"column_start":12,"column_end":20},"name":"compress","qualname":"<Compress>::compress","value":"pub fn compress(&mut Self, &[u8], &mut [u8], Flush) -> Status","parent":null,"children":[],"decl_id":null,"docs":" Compresses the input data into the output, consuming only as much\n input as needed and writing as much output as possible.","sig":null,"attributes":[{"value":"/ Compresses the input data into the output, consuming only as much","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":112024,"byte_end":112093,"line_start":208,"line_end":208,"column_start":5,"column_end":74}},{"value":"/ input as needed and writing as much output as possible.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":112098,"byte_end":112157,"line_start":209,"line_end":209,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":112162,"byte_end":112165,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ The flush option can be any of the available flushing parameters.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":112170,"byte_end":112239,"line_start":211,"line_end":211,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":112244,"byte_end":112247,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ To learn how much data was consumed or how much output was produced, use","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":112252,"byte_end":112328,"line_start":213,"line_end":213,"column_start":5,"column_end":81}},{"value":"/ the `total_in` and `total_out` functions before/after this is called.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":112333,"byte_end":112406,"line_start":214,"line_end":214,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":114015,"byte_end":114027,"line_start":251,"line_end":251,"column_start":12,"column_end":24},"name":"compress_vec","qualname":"<Compress>::compress_vec","value":"pub fn compress_vec(&mut Self, &[u8], &mut Vec<u8>, Flush) -> Status","parent":null,"children":[],"decl_id":null,"docs":" Compresses the input data into the extra space of the output, consuming\n only as much input as needed and writing as much output as possible.","sig":null,"attributes":[{"value":"/ Compresses the input data into the extra space of the output, consuming","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":113516,"byte_end":113591,"line_start":243,"line_end":243,"column_start":5,"column_end":80}},{"value":"/ only as much input as needed and writing as much output as possible.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":113596,"byte_end":113668,"line_start":244,"line_end":244,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":113673,"byte_end":113676,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ This function has the same semantics as `compress`, except that the","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":113681,"byte_end":113752,"line_start":246,"line_end":246,"column_start":5,"column_end":76}},{"value":"/ length of `vec` is managed by this function. This will not reallocate","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":113757,"byte_end":113830,"line_start":247,"line_end":247,"column_start":5,"column_end":78}},{"value":"/ the vector provided or attempt to grow it, so space for the output must","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":113835,"byte_end":113910,"line_start":248,"line_end":248,"column_start":5,"column_end":80}},{"value":"/ be reserved in the output vector by the caller before calling this","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":113915,"byte_end":113985,"line_start":249,"line_end":249,"column_start":5,"column_end":75}},{"value":"/ function.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":113990,"byte_end":114003,"line_start":250,"line_end":250,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":678},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":114896,"byte_end":114899,"line_start":277,"line_end":277,"column_start":12,"column_end":15},"name":"new","qualname":"<Decompress>::new","value":"pub fn new(bool) -> Decompress","parent":null,"children":[],"decl_id":null,"docs":" Creates a new object ready for decompressing data that it's given.","sig":null,"attributes":[{"value":"/ Creates a new object ready for decompressing data that it's given.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":114688,"byte_end":114758,"line_start":273,"line_end":273,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":114763,"byte_end":114766,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ The `zlib_header` argument indicates whether the input data is expected","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":114771,"byte_end":114846,"line_start":275,"line_end":275,"column_start":5,"column_end":80}},{"value":"/ to have a zlib header or not.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":114851,"byte_end":114884,"line_start":276,"line_end":276,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":679},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":115805,"byte_end":115813,"line_start":300,"line_end":300,"column_start":12,"column_end":20},"name":"total_in","qualname":"<Decompress>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of input bytes which have been processed by\n this decompression object.\n","sig":null,"attributes":[{"value":"/ Returns the total number of input bytes which have been processed by","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":115686,"byte_end":115758,"line_start":298,"line_end":298,"column_start":5,"column_end":77}},{"value":"/ this decompression object.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":115763,"byte_end":115793,"line_start":299,"line_end":299,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":680},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":115988,"byte_end":115997,"line_start":306,"line_end":306,"column_start":12,"column_end":21},"name":"total_out","qualname":"<Decompress>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of output bytes which have been produced by\n this decompression object.\n","sig":null,"attributes":[{"value":"/ Returns the total number of output bytes which have been produced by","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":115869,"byte_end":115941,"line_start":304,"line_end":304,"column_start":5,"column_end":77}},{"value":"/ this decompression object.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":115946,"byte_end":115976,"line_start":305,"line_end":305,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":681},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":117167,"byte_end":117177,"line_start":330,"line_end":330,"column_start":12,"column_end":22},"name":"decompress","qualname":"<Decompress>::decompress","value":"pub fn decompress(&mut Self, &[u8], &mut [u8], Flush)\n-> Result<Status, DataError>","parent":null,"children":[],"decl_id":null,"docs":" Decompresses the input data into the output, consuming only as much\n input as needed and writing as much output as possible.","sig":null,"attributes":[{"value":"/ Decompresses the input data into the output, consuming only as much","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":116054,"byte_end":116125,"line_start":310,"line_end":310,"column_start":5,"column_end":76}},{"value":"/ input as needed and writing as much output as possible.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":116130,"byte_end":116189,"line_start":311,"line_end":311,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":116194,"byte_end":116197,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ The flush option provided can either be `Flush::None`, `Flush::Sync`,","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":116202,"byte_end":116275,"line_start":313,"line_end":313,"column_start":5,"column_end":78}},{"value":"/ or `Flush::Finish`. If the first call passes `Flush::Finish` it is","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":116280,"byte_end":116350,"line_start":314,"line_end":314,"column_start":5,"column_end":75}},{"value":"/ assumed that the input and output buffers are both sized large enough to","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":116355,"byte_end":116431,"line_start":315,"line_end":315,"column_start":5,"column_end":81}},{"value":"/ decompress the entire stream in a single call.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":116436,"byte_end":116486,"line_start":316,"line_end":316,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":116491,"byte_end":116494,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ A flush value of `Flush::Finish` indicates that there are no more source","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":116499,"byte_end":116575,"line_start":318,"line_end":318,"column_start":5,"column_end":81}},{"value":"/ bytes available beside what's already in the input buffer, and the","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":116580,"byte_end":116650,"line_start":319,"line_end":319,"column_start":5,"column_end":75}},{"value":"/ output buffer is large enough to hold the rest of the decompressed data.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":116655,"byte_end":116731,"line_start":320,"line_end":320,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":116736,"byte_end":116739,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ To learn how much data was consumed or how much output was produced, use","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":116744,"byte_end":116820,"line_start":322,"line_end":322,"column_start":5,"column_end":81}},{"value":"/ the `total_in` and `total_out` functions before/after this is called.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":116825,"byte_end":116898,"line_start":323,"line_end":323,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":116903,"byte_end":116906,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":116911,"byte_end":116923,"line_start":325,"line_end":325,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":116928,"byte_end":116931,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ If the input data to this instance of `Decompress` is not a valid","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":116936,"byte_end":117005,"line_start":327,"line_end":327,"column_start":5,"column_end":74}},{"value":"/ zlib/deflate stream then this function may return an instance of","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":117010,"byte_end":117078,"line_start":328,"line_end":328,"column_start":5,"column_end":73}},{"value":"/ `DataError` to indicate that the stream of input bytes is corrupted.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":117083,"byte_end":117155,"line_start":329,"line_end":329,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":682},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":119106,"byte_end":119120,"line_start":374,"line_end":374,"column_start":12,"column_end":26},"name":"decompress_vec","qualname":"<Decompress>::decompress_vec","value":"pub fn decompress_vec(&mut Self, &[u8], &mut Vec<u8>, Flush)\n-> Result<Status, DataError>","parent":null,"children":[],"decl_id":null,"docs":" Decompresses the input data into the extra space in the output vector\n specified by `output`.","sig":null,"attributes":[{"value":"/ Decompresses the input data into the extra space in the output vector","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":118396,"byte_end":118469,"line_start":360,"line_end":360,"column_start":5,"column_end":78}},{"value":"/ specified by `output`.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":118474,"byte_end":118500,"line_start":361,"line_end":361,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":118505,"byte_end":118508,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ This function has the same semantics as `decompress`, except that the","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":118513,"byte_end":118586,"line_start":363,"line_end":363,"column_start":5,"column_end":78}},{"value":"/ length of `vec` is managed by this function. This will not reallocate","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":118591,"byte_end":118664,"line_start":364,"line_end":364,"column_start":5,"column_end":78}},{"value":"/ the vector provided or attempt to grow it, so space for the output must","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":118669,"byte_end":118744,"line_start":365,"line_end":365,"column_start":5,"column_end":80}},{"value":"/ be reserved in the output vector by the caller before calling this","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":118749,"byte_end":118819,"line_start":366,"line_end":366,"column_start":5,"column_end":75}},{"value":"/ function.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":118824,"byte_end":118837,"line_start":367,"line_end":367,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":118842,"byte_end":118845,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":118850,"byte_end":118862,"line_start":369,"line_end":369,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":118867,"byte_end":118870,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ If the input data to this instance of `Decompress` is not a valid","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":118875,"byte_end":118944,"line_start":371,"line_end":371,"column_start":5,"column_end":74}},{"value":"/ zlib/deflate stream then this function may return an instance of","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":118949,"byte_end":119017,"line_start":372,"line_end":372,"column_start":5,"column_end":73}},{"value":"/ `DataError` to indicate that the stream of input bytes is corrupted.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":119022,"byte_end":119094,"line_start":373,"line_end":373,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":683},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":120170,"byte_end":120175,"line_start":402,"line_end":402,"column_start":12,"column_end":17},"name":"reset","qualname":"<Decompress>::reset","value":"pub fn reset(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Performs the equivalent of replacing this decompression state with a\n freshly allocated copy.","sig":null,"attributes":[{"value":"/ Performs the equivalent of replacing this decompression state with a","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":119790,"byte_end":119862,"line_start":394,"line_end":394,"column_start":5,"column_end":77}},{"value":"/ freshly allocated copy.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":119867,"byte_end":119894,"line_start":395,"line_end":395,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":119899,"byte_end":119902,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ This function may not allocate memory, though, and attempts to reuse any","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":119907,"byte_end":119983,"line_start":397,"line_end":397,"column_start":5,"column_end":81}},{"value":"/ previously existing resources.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":119988,"byte_end":120022,"line_start":398,"line_end":398,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":120027,"byte_end":120030,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ The argument provided here indicates whether the reset state will","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":120035,"byte_end":120104,"line_start":400,"line_end":400,"column_start":5,"column_end":74}},{"value":"/ attempt to decode a zlib header first or not.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":120109,"byte_end":120158,"line_start":401,"line_end":401,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":1143},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":129977,"byte_end":129988,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"name":"ZlibEncoder","qualname":"::zlib::bufread::ZlibEncoder","value":"ZlibEncoder {  }","parent":null,"children":[{"krate":0,"index":1145},{"krate":0,"index":1146}],"decl_id":null,"docs":" A ZLIB encoder, or compressor.","sig":null,"attributes":[{"value":"/ A ZLIB encoder, or compressor.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":129137,"byte_end":129171,"line_start":13,"line_end":13,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":129172,"byte_end":129175,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This structure implements a [`BufRead`] interface and will read uncompressed","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":129176,"byte_end":129256,"line_start":15,"line_end":15,"column_start":1,"column_end":81}},{"value":"/ data from an underlying stream and emit a stream of compressed data.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":129257,"byte_end":129329,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":129330,"byte_end":129333,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`BufRead`]: https://doc.rust-lang.org/std/io/trait.BufRead.html","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":129334,"byte_end":129402,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":129403,"byte_end":129406,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":129407,"byte_end":129421,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":129422,"byte_end":129425,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":129426,"byte_end":129433,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":129434,"byte_end":129462,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/ use flate2::Compression;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":129463,"byte_end":129491,"line_start":24,"line_end":24,"column_start":1,"column_end":29}},{"value":"/ use flate2::bufread::ZlibEncoder;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":129492,"byte_end":129529,"line_start":25,"line_end":25,"column_start":1,"column_end":38}},{"value":"/ use std::fs::File;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":129530,"byte_end":129552,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ use std::io::BufReader;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":129553,"byte_end":129580,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":129581,"byte_end":129584,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ // Use a buffered file to compress contents into a Vec<u8>","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":129585,"byte_end":129647,"line_start":29,"line_end":29,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":129648,"byte_end":129651,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # fn open_hello_world() -> std::io::Result<Vec<u8>> {","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":129652,"byte_end":129709,"line_start":31,"line_end":31,"column_start":1,"column_end":58}},{"value":"/ let f = File::open(\"examples/hello_world.txt\")?;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":129710,"byte_end":129762,"line_start":32,"line_end":32,"column_start":1,"column_end":53}},{"value":"/ let b = BufReader::new(f);","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":129763,"byte_end":129793,"line_start":33,"line_end":33,"column_start":1,"column_end":31}},{"value":"/ let mut z = ZlibEncoder::new(b, Compression::Fast);","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":129794,"byte_end":129849,"line_start":34,"line_end":34,"column_start":1,"column_end":56}},{"value":"/ let mut buffer = Vec::new();","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":129850,"byte_end":129882,"line_start":35,"line_end":35,"column_start":1,"column_end":33}},{"value":"/ z.read_to_end(&mut buffer)?;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":129883,"byte_end":129915,"line_start":36,"line_end":36,"column_start":1,"column_end":33}},{"value":"/ # Ok(buffer)","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":129916,"byte_end":129932,"line_start":37,"line_end":37,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":129933,"byte_end":129940,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":129941,"byte_end":129948,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":719},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":130201,"byte_end":130204,"line_start":50,"line_end":50,"column_start":12,"column_end":15},"name":"new","qualname":"<ZlibEncoder<R>>::new","value":"pub fn new(R, ::Compression) -> ZlibEncoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder which will read uncompressed data from the given\n stream and emit the compressed stream.\n","sig":null,"attributes":[{"value":"/ Creates a new encoder which will read uncompressed data from the given","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":130068,"byte_end":130142,"line_start":48,"line_end":48,"column_start":5,"column_end":79}},{"value":"/ stream and emit the compressed stream.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":130147,"byte_end":130189,"line_start":49,"line_end":49,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":130851,"byte_end":130856,"line_start":70,"line_end":70,"column_start":12,"column_end":17},"name":"reset","qualname":"<ZlibEncoder<R>>::reset","value":"pub fn reset(&mut Self, R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this encoder entirely, swapping out the input\n stream for another.","sig":null,"attributes":[{"value":"/ Resets the state of this encoder entirely, swapping out the input","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":130472,"byte_end":130541,"line_start":63,"line_end":63,"column_start":5,"column_end":74}},{"value":"/ stream for another.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":130546,"byte_end":130569,"line_start":64,"line_end":64,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":130574,"byte_end":130577,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ This function will reset the internal state of this encoder and replace","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":130582,"byte_end":130657,"line_start":66,"line_end":66,"column_start":5,"column_end":80}},{"value":"/ the input stream with the one provided, returning the previous input","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":130662,"byte_end":130734,"line_start":67,"line_end":67,"column_start":5,"column_end":77}},{"value":"/ stream. Future data read from this encoder will be the compressed","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":130739,"byte_end":130808,"line_start":68,"line_end":68,"column_start":5,"column_end":74}},{"value":"/ version of `r`'s data.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":130813,"byte_end":130839,"line_start":69,"line_end":69,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":725},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":131026,"byte_end":131033,"line_start":76,"line_end":76,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<ZlibEncoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying reader","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":130965,"byte_end":131014,"line_start":75,"line_end":75,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":726},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":131278,"byte_end":131285,"line_start":84,"line_end":84,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<ZlibEncoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":131078,"byte_end":131135,"line_start":80,"line_end":80,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":131140,"byte_end":131143,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":131148,"byte_end":131220,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":131225,"byte_end":131266,"line_start":83,"line_end":83,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":727},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":131413,"byte_end":131423,"line_start":89,"line_end":89,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<ZlibEncoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, returning the underlying reader.\n","sig":null,"attributes":[{"value":"/ Consumes this encoder, returning the underlying reader.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":131342,"byte_end":131401,"line_start":88,"line_end":88,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":131694,"byte_end":131702,"line_start":97,"line_end":97,"column_start":12,"column_end":20},"name":"total_in","qualname":"<ZlibEncoder<R>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that have been read into this compressor.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that have been read into this compressor.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":131465,"byte_end":131538,"line_start":93,"line_end":93,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":131543,"byte_end":131546,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ Note that not all bytes read from the underlying object may be accounted","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":131551,"byte_end":131627,"line_start":95,"line_end":95,"column_start":5,"column_end":81}},{"value":"/ for, there may still be some active buffering.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":131632,"byte_end":131682,"line_start":96,"line_end":96,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":729},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":131936,"byte_end":131945,"line_start":105,"line_end":105,"column_start":12,"column_end":21},"name":"total_out","qualname":"<ZlibEncoder<R>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the compressor has produced.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the compressor has produced.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":131759,"byte_end":131824,"line_start":101,"line_end":101,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":131829,"byte_end":131832,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ Note that not all bytes may have been read yet, some may still be","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":131837,"byte_end":131906,"line_start":103,"line_end":103,"column_start":5,"column_end":74}},{"value":"/ buffered.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":131911,"byte_end":131924,"line_start":104,"line_end":104,"column_start":5,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1150},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":133731,"byte_end":133742,"line_start":170,"line_end":170,"column_start":12,"column_end":23},"name":"ZlibDecoder","qualname":"::zlib::bufread::ZlibDecoder","value":"ZlibDecoder {  }","parent":null,"children":[{"krate":0,"index":1152},{"krate":0,"index":1153}],"decl_id":null,"docs":" A ZLIB decoder, or decompressor.","sig":null,"attributes":[{"value":"/ A ZLIB decoder, or decompressor.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":132676,"byte_end":132712,"line_start":136,"line_end":136,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":132713,"byte_end":132716,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This structure implements a [`BufRead`] interface and takes a stream of","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":132717,"byte_end":132792,"line_start":138,"line_end":138,"column_start":1,"column_end":76}},{"value":"/ compressed data as input, providing the decompressed data when read from.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":132793,"byte_end":132870,"line_start":139,"line_end":139,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":132871,"byte_end":132874,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ [`BufRead`]: https://doc.rust-lang.org/std/io/trait.BufRead.html","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":132875,"byte_end":132943,"line_start":141,"line_end":141,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":132944,"byte_end":132947,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":132948,"byte_end":132962,"line_start":143,"line_end":143,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":132963,"byte_end":132966,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":132967,"byte_end":132974,"line_start":145,"line_end":145,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":132975,"byte_end":133003,"line_start":146,"line_end":146,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":133004,"byte_end":133020,"line_start":147,"line_end":147,"column_start":1,"column_end":17}},{"value":"/ # use flate2::Compression;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":133021,"byte_end":133051,"line_start":148,"line_end":148,"column_start":1,"column_end":31}},{"value":"/ # use flate2::write::ZlibEncoder;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":133052,"byte_end":133089,"line_start":149,"line_end":149,"column_start":1,"column_end":38}},{"value":"/ use flate2::bufread::ZlibDecoder;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":133090,"byte_end":133127,"line_start":150,"line_end":150,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":133128,"byte_end":133131,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":133132,"byte_end":133149,"line_start":152,"line_end":152,"column_start":1,"column_end":18}},{"value":"/ # let mut e = ZlibEncoder::new(Vec::new(), Compression::Default);","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":133150,"byte_end":133219,"line_start":153,"line_end":153,"column_start":1,"column_end":70}},{"value":"/ # e.write(b\"Hello World\").unwrap();","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":133220,"byte_end":133259,"line_start":154,"line_end":154,"column_start":1,"column_end":40}},{"value":"/ # let bytes = e.finish().unwrap();","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":133260,"byte_end":133298,"line_start":155,"line_end":155,"column_start":1,"column_end":39}},{"value":"/ # println!(\"{}\", decode_bufreader(bytes).unwrap());","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":133299,"byte_end":133354,"line_start":156,"line_end":156,"column_start":1,"column_end":56}},{"value":"/ # }","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":133355,"byte_end":133362,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":133363,"byte_end":133368,"line_start":158,"line_end":158,"column_start":1,"column_end":6}},{"value":"/ // Uncompresses a Zlib Encoded vector of bytes and returns a string or error","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":133369,"byte_end":133449,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"/ // Here &[u8] implements BufRead","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":133450,"byte_end":133486,"line_start":160,"line_end":160,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":133487,"byte_end":133490,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ fn decode_bufreader(bytes: Vec<u8>) -> io::Result<String> {","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":133491,"byte_end":133554,"line_start":162,"line_end":162,"column_start":1,"column_end":64}},{"value":"/     let mut z = ZlibDecoder::new(&bytes[..]);","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":133555,"byte_end":133604,"line_start":163,"line_end":163,"column_start":1,"column_end":50}},{"value":"/     let mut s = String::new();","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":133605,"byte_end":133639,"line_start":164,"line_end":164,"column_start":1,"column_end":35}},{"value":"/     z.read_to_string(&mut s)?;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":133640,"byte_end":133674,"line_start":165,"line_end":165,"column_start":1,"column_end":35}},{"value":"/     Ok(s)","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":133675,"byte_end":133688,"line_start":166,"line_end":166,"column_start":1,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":133689,"byte_end":133694,"line_start":167,"line_end":167,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":133695,"byte_end":133702,"line_start":168,"line_end":168,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":739},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":133923,"byte_end":133926,"line_start":178,"line_end":178,"column_start":12,"column_end":15},"name":"new","qualname":"<ZlibDecoder<R>>::new","value":"pub fn new(R) -> ZlibDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder which will decompress data read from the given\n stream.\n","sig":null,"attributes":[{"value":"/ Creates a new decoder which will decompress data read from the given","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":133823,"byte_end":133895,"line_start":176,"line_end":176,"column_start":5,"column_end":77}},{"value":"/ stream.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":133900,"byte_end":133911,"line_start":177,"line_end":177,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":134556,"byte_end":134561,"line_start":198,"line_end":198,"column_start":12,"column_end":17},"name":"reset","qualname":"<ZlibDecoder<R>>::reset","value":"pub fn reset(&mut Self, R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this decoder entirely, swapping out the input\n stream for another.","sig":null,"attributes":[{"value":"/ Resets the state of this decoder entirely, swapping out the input","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":134184,"byte_end":134253,"line_start":191,"line_end":191,"column_start":5,"column_end":74}},{"value":"/ stream for another.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":134258,"byte_end":134281,"line_start":192,"line_end":192,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":134286,"byte_end":134289,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ This will reset the internal state of this decoder and replace the","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":134294,"byte_end":134364,"line_start":194,"line_end":194,"column_start":5,"column_end":75}},{"value":"/ input stream with the one provided, returning the previous input","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":134369,"byte_end":134437,"line_start":195,"line_end":195,"column_start":5,"column_end":73}},{"value":"/ stream. Future data read from this decoder will be the decompressed","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":134442,"byte_end":134513,"line_start":196,"line_end":196,"column_start":5,"column_end":76}},{"value":"/ version of `r`'s data.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":134518,"byte_end":134544,"line_start":197,"line_end":197,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":745},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":134731,"byte_end":134738,"line_start":204,"line_end":204,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<ZlibDecoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":134670,"byte_end":134719,"line_start":203,"line_end":203,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":746},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":134983,"byte_end":134990,"line_start":212,"line_end":212,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<ZlibDecoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":134783,"byte_end":134840,"line_start":208,"line_end":208,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":134845,"byte_end":134848,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":134853,"byte_end":134925,"line_start":210,"line_end":210,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":134930,"byte_end":134971,"line_start":211,"line_end":211,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":747},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":135118,"byte_end":135128,"line_start":217,"line_end":217,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<ZlibDecoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this decoder, returning the underlying reader.\n","sig":null,"attributes":[{"value":"/ Consumes this decoder, returning the underlying reader.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":135047,"byte_end":135106,"line_start":216,"line_end":216,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":748},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":135397,"byte_end":135405,"line_start":225,"line_end":225,"column_start":12,"column_end":20},"name":"total_in","qualname":"<ZlibDecoder<R>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has consumed.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has consumed.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":135170,"byte_end":135237,"line_start":221,"line_end":221,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":135242,"byte_end":135245,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ Note that this will likely be smaller than what the decompressor","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":135250,"byte_end":135318,"line_start":223,"line_end":223,"column_start":5,"column_end":73}},{"value":"/ actually read from the underlying stream due to buffering.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":135323,"byte_end":135385,"line_start":224,"line_end":224,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":749},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":135541,"byte_end":135550,"line_start":230,"line_end":230,"column_start":12,"column_end":21},"name":"total_out","qualname":"<ZlibDecoder<R>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has produced.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has produced.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":135462,"byte_end":135529,"line_start":229,"line_end":229,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":1157},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":137288,"byte_end":137299,"line_start":38,"line_end":38,"column_start":12,"column_end":23},"name":"ZlibEncoder","qualname":"::zlib::read::ZlibEncoder","value":"ZlibEncoder {  }","parent":null,"children":[{"krate":0,"index":1159}],"decl_id":null,"docs":" A ZLIB encoder, or compressor.","sig":null,"attributes":[{"value":"/ A ZLIB encoder, or compressor.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":136480,"byte_end":136514,"line_start":12,"line_end":12,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":136515,"byte_end":136518,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This structure implements a [`Read`] interface and will read uncompressed","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":136519,"byte_end":136596,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ data from an underlying stream and emit a stream of compressed data.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":136597,"byte_end":136669,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":136670,"byte_end":136673,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`Read`]: https://doc.rust-lang.org/std/io/trait.Read.html","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":136674,"byte_end":136736,"line_start":17,"line_end":17,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":136737,"byte_end":136740,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":136741,"byte_end":136755,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":136756,"byte_end":136759,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":136760,"byte_end":136767,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":136768,"byte_end":136796,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ use flate2::Compression;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":136797,"byte_end":136825,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/ use flate2::read::ZlibEncoder;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":136826,"byte_end":136860,"line_start":24,"line_end":24,"column_start":1,"column_end":35}},{"value":"/ use std::fs::File;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":136861,"byte_end":136883,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":136884,"byte_end":136887,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ // Open example file and compress the contents using Read interface","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":136888,"byte_end":136959,"line_start":27,"line_end":27,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":136960,"byte_end":136963,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # fn open_hello_world() -> std::io::Result<Vec<u8>> {","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":136964,"byte_end":137021,"line_start":29,"line_end":29,"column_start":1,"column_end":58}},{"value":"/ let f = File::open(\"examples/hello_world.txt\")?;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":137022,"byte_end":137074,"line_start":30,"line_end":30,"column_start":1,"column_end":53}},{"value":"/ let mut z = ZlibEncoder::new(f, Compression::Fast);","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":137075,"byte_end":137130,"line_start":31,"line_end":31,"column_start":1,"column_end":56}},{"value":"/ let mut buffer = [0;50];","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":137131,"byte_end":137159,"line_start":32,"line_end":32,"column_start":1,"column_end":29}},{"value":"/ let byte_count = z.read(&mut buffer)?;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":137160,"byte_end":137202,"line_start":33,"line_end":33,"column_start":1,"column_end":43}},{"value":"/ # Ok(buffer[0..byte_count].to_vec())","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":137203,"byte_end":137243,"line_start":34,"line_end":34,"column_start":1,"column_end":41}},{"value":"/ # }","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":137244,"byte_end":137251,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":137252,"byte_end":137259,"line_start":36,"line_end":36,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":770},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":137523,"byte_end":137526,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<ZlibEncoder<R>>::new","value":"pub fn new(R, ::Compression) -> ZlibEncoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder which will read uncompressed data from the given\n stream and emit the compressed stream.\n","sig":null,"attributes":[{"value":"/ Creates a new encoder which will read uncompressed data from the given","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":137390,"byte_end":137464,"line_start":43,"line_end":43,"column_start":5,"column_end":79}},{"value":"/ stream and emit the compressed stream.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":137469,"byte_end":137511,"line_start":44,"line_end":44,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":773},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":138246,"byte_end":138251,"line_start":63,"line_end":63,"column_start":12,"column_end":17},"name":"reset","qualname":"<ZlibEncoder<R>>::reset","value":"pub fn reset(&mut Self, R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this encoder entirely, swapping out the input\n stream for another.","sig":null,"attributes":[{"value":"/ Resets the state of this encoder entirely, swapping out the input","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":137717,"byte_end":137786,"line_start":53,"line_end":53,"column_start":5,"column_end":74}},{"value":"/ stream for another.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":137791,"byte_end":137814,"line_start":54,"line_end":54,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":137819,"byte_end":137822,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This function will reset the internal state of this encoder and replace","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":137827,"byte_end":137902,"line_start":56,"line_end":56,"column_start":5,"column_end":80}},{"value":"/ the input stream with the one provided, returning the previous input","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":137907,"byte_end":137979,"line_start":57,"line_end":57,"column_start":5,"column_end":77}},{"value":"/ stream. Future data read from this encoder will be the compressed","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":137984,"byte_end":138053,"line_start":58,"line_end":58,"column_start":5,"column_end":74}},{"value":"/ version of `r`'s data.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":138058,"byte_end":138084,"line_start":59,"line_end":59,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":138089,"byte_end":138092,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Note that there may be currently buffered data when this function is","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":138097,"byte_end":138169,"line_start":61,"line_end":61,"column_start":5,"column_end":77}},{"value":"/ called, and in that case the buffered data is discarded.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":138174,"byte_end":138234,"line_start":62,"line_end":62,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":774},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":138447,"byte_end":138454,"line_start":69,"line_end":69,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<ZlibEncoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":138386,"byte_end":138435,"line_start":68,"line_end":68,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":775},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":138720,"byte_end":138727,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<ZlibEncoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":138520,"byte_end":138577,"line_start":73,"line_end":73,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":138582,"byte_end":138585,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":138590,"byte_end":138662,"line_start":75,"line_end":75,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":138667,"byte_end":138708,"line_start":76,"line_end":76,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":776},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":139068,"byte_end":139078,"line_start":86,"line_end":86,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<ZlibEncoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Consumes this encoder, returning the underlying reader.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":138801,"byte_end":138860,"line_start":81,"line_end":81,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":138865,"byte_end":138868,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Note that there may be buffered bytes which are not re-acquired as part","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":138873,"byte_end":138948,"line_start":83,"line_end":83,"column_start":5,"column_end":80}},{"value":"/ of this transition. It's recommended to only call this function after","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":138953,"byte_end":139026,"line_start":84,"line_end":84,"column_start":5,"column_end":78}},{"value":"/ EOF has been reached.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":139031,"byte_end":139056,"line_start":85,"line_end":85,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":777},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":139377,"byte_end":139385,"line_start":94,"line_end":94,"column_start":12,"column_end":20},"name":"total_in","qualname":"<ZlibEncoder<R>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that have been read into this compressor.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that have been read into this compressor.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":139148,"byte_end":139221,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":139226,"byte_end":139229,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Note that not all bytes read from the underlying object may be accounted","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":139234,"byte_end":139310,"line_start":92,"line_end":92,"column_start":5,"column_end":81}},{"value":"/ for, there may still be some active buffering.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":139315,"byte_end":139365,"line_start":93,"line_end":93,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":778},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":139620,"byte_end":139629,"line_start":102,"line_end":102,"column_start":12,"column_end":21},"name":"total_out","qualname":"<ZlibEncoder<R>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the compressor has produced.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the compressor has produced.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":139443,"byte_end":139508,"line_start":98,"line_end":98,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":139513,"byte_end":139516,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ Note that not all bytes may have been read yet, some may still be","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":139521,"byte_end":139590,"line_start":100,"line_end":100,"column_start":5,"column_end":74}},{"value":"/ buffered.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":139595,"byte_end":139608,"line_start":101,"line_end":101,"column_start":5,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1163},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":141356,"byte_end":141367,"line_start":167,"line_end":167,"column_start":12,"column_end":23},"name":"ZlibDecoder","qualname":"::zlib::read::ZlibDecoder","value":"ZlibDecoder {  }","parent":null,"children":[{"krate":0,"index":1165}],"decl_id":null,"docs":" A ZLIB decoder, or decompressor.","sig":null,"attributes":[{"value":"/ A ZLIB decoder, or decompressor.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":140322,"byte_end":140358,"line_start":133,"line_end":133,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":140359,"byte_end":140362,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ This structure implements a [`Read`] interface and takes a stream of","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":140363,"byte_end":140435,"line_start":135,"line_end":135,"column_start":1,"column_end":73}},{"value":"/ compressed data as input, providing the decompressed data when read from.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":140436,"byte_end":140513,"line_start":136,"line_end":136,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":140514,"byte_end":140517,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ [`Read`]: https://doc.rust-lang.org/std/io/trait.Read.html","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":140518,"byte_end":140580,"line_start":138,"line_end":138,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":140581,"byte_end":140584,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":140585,"byte_end":140599,"line_start":140,"line_end":140,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":140600,"byte_end":140603,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":140604,"byte_end":140611,"line_start":142,"line_end":142,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":140612,"byte_end":140640,"line_start":143,"line_end":143,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":140641,"byte_end":140657,"line_start":144,"line_end":144,"column_start":1,"column_end":17}},{"value":"/ # use flate2::Compression;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":140658,"byte_end":140688,"line_start":145,"line_end":145,"column_start":1,"column_end":31}},{"value":"/ # use flate2::write::ZlibEncoder;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":140689,"byte_end":140726,"line_start":146,"line_end":146,"column_start":1,"column_end":38}},{"value":"/ use flate2::read::ZlibDecoder;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":140727,"byte_end":140761,"line_start":147,"line_end":147,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":140762,"byte_end":140765,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":140766,"byte_end":140783,"line_start":149,"line_end":149,"column_start":1,"column_end":18}},{"value":"/ # let mut e = ZlibEncoder::new(Vec::new(), Compression::Default);","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":140784,"byte_end":140853,"line_start":150,"line_end":150,"column_start":1,"column_end":70}},{"value":"/ # e.write(b\"Hello World\").unwrap();","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":140854,"byte_end":140893,"line_start":151,"line_end":151,"column_start":1,"column_end":40}},{"value":"/ # let bytes = e.finish().unwrap();","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":140894,"byte_end":140932,"line_start":152,"line_end":152,"column_start":1,"column_end":39}},{"value":"/ # println!(\"{}\", decode_reader(bytes).unwrap());","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":140933,"byte_end":140985,"line_start":153,"line_end":153,"column_start":1,"column_end":53}},{"value":"/ # }","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":140986,"byte_end":140993,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":140994,"byte_end":140999,"line_start":155,"line_end":155,"column_start":1,"column_end":6}},{"value":"/ // Uncompresses a Zlib Encoded vector of bytes and returns a string or error","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":141000,"byte_end":141080,"line_start":156,"line_end":156,"column_start":1,"column_end":81}},{"value":"/ // Here &[u8] implements Read","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":141081,"byte_end":141114,"line_start":157,"line_end":157,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":141115,"byte_end":141118,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ fn decode_reader(bytes: Vec<u8>) -> io::Result<String> {","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":141119,"byte_end":141179,"line_start":159,"line_end":159,"column_start":1,"column_end":61}},{"value":"/     let mut z = ZlibDecoder::new(&bytes[..]);","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":141180,"byte_end":141229,"line_start":160,"line_end":160,"column_start":1,"column_end":50}},{"value":"/     let mut s = String::new();","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":141230,"byte_end":141264,"line_start":161,"line_end":161,"column_start":1,"column_end":35}},{"value":"/     z.read_to_string(&mut s)?;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":141265,"byte_end":141299,"line_start":162,"line_end":162,"column_start":1,"column_end":35}},{"value":"/     Ok(s)","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":141300,"byte_end":141313,"line_start":163,"line_end":163,"column_start":1,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":141314,"byte_end":141319,"line_start":164,"line_end":164,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":141320,"byte_end":141327,"line_start":165,"line_end":165,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":788},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":141559,"byte_end":141562,"line_start":175,"line_end":175,"column_start":12,"column_end":15},"name":"new","qualname":"<ZlibDecoder<R>>::new","value":"pub fn new(R) -> ZlibDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder which will decompress data read from the given\n stream.\n","sig":null,"attributes":[{"value":"/ Creates a new decoder which will decompress data read from the given","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":141459,"byte_end":141531,"line_start":173,"line_end":173,"column_start":5,"column_end":77}},{"value":"/ stream.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":141536,"byte_end":141547,"line_start":174,"line_end":174,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":789},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":141889,"byte_end":141901,"line_start":183,"line_end":183,"column_start":12,"column_end":24},"name":"new_with_buf","qualname":"<ZlibDecoder<R>>::new_with_buf","value":"pub fn new_with_buf(R, Vec<u8>) -> ZlibDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Same as `new`, but the intermediate buffer for data is specified.","sig":null,"attributes":[{"value":"/ Same as `new`, but the intermediate buffer for data is specified.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":141657,"byte_end":141726,"line_start":179,"line_end":179,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":141731,"byte_end":141734,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ Note that the specified buffer will only be used up to its current","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":141739,"byte_end":141809,"line_start":181,"line_end":181,"column_start":5,"column_end":75}},{"value":"/ length. The buffer's capacity will also not grow over time.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":141814,"byte_end":141877,"line_start":182,"line_end":182,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":792},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":142609,"byte_end":142614,"line_start":201,"line_end":201,"column_start":12,"column_end":17},"name":"reset","qualname":"<ZlibDecoder<R>>::reset","value":"pub fn reset(&mut Self, R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this decoder entirely, swapping out the input\n stream for another.","sig":null,"attributes":[{"value":"/ Resets the state of this decoder entirely, swapping out the input","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":142087,"byte_end":142156,"line_start":191,"line_end":191,"column_start":5,"column_end":74}},{"value":"/ stream for another.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":142161,"byte_end":142184,"line_start":192,"line_end":192,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":142189,"byte_end":142192,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ This will reset the internal state of this decoder and replace the","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":142197,"byte_end":142267,"line_start":194,"line_end":194,"column_start":5,"column_end":75}},{"value":"/ input stream with the one provided, returning the previous input","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":142272,"byte_end":142340,"line_start":195,"line_end":195,"column_start":5,"column_end":73}},{"value":"/ stream. Future data read from this decoder will be the decompressed","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":142345,"byte_end":142416,"line_start":196,"line_end":196,"column_start":5,"column_end":76}},{"value":"/ version of `r`'s data.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":142421,"byte_end":142447,"line_start":197,"line_end":197,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":142452,"byte_end":142455,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ Note that there may be currently buffered data when this function is","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":142460,"byte_end":142532,"line_start":199,"line_end":199,"column_start":5,"column_end":77}},{"value":"/ called, and in that case the buffered data is discarded.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":142537,"byte_end":142597,"line_start":200,"line_end":200,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":793},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":142810,"byte_end":142817,"line_start":207,"line_end":207,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<ZlibDecoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":142749,"byte_end":142798,"line_start":206,"line_end":206,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":794},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":143083,"byte_end":143090,"line_start":215,"line_end":215,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<ZlibDecoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":142883,"byte_end":142940,"line_start":211,"line_end":211,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":142945,"byte_end":142948,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":142953,"byte_end":143025,"line_start":213,"line_end":213,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":143030,"byte_end":143071,"line_start":214,"line_end":214,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":795},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":143431,"byte_end":143441,"line_start":224,"line_end":224,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<ZlibDecoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this decoder, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Consumes this decoder, returning the underlying reader.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":143164,"byte_end":143223,"line_start":219,"line_end":219,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":143228,"byte_end":143231,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ Note that there may be buffered bytes which are not re-acquired as part","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":143236,"byte_end":143311,"line_start":221,"line_end":221,"column_start":5,"column_end":80}},{"value":"/ of this transition. It's recommended to only call this function after","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":143316,"byte_end":143389,"line_start":222,"line_end":222,"column_start":5,"column_end":78}},{"value":"/ EOF has been reached.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":143394,"byte_end":143419,"line_start":223,"line_end":223,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":796},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":143738,"byte_end":143746,"line_start":232,"line_end":232,"column_start":12,"column_end":20},"name":"total_in","qualname":"<ZlibDecoder<R>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has consumed.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has consumed.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":143511,"byte_end":143578,"line_start":228,"line_end":228,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":143583,"byte_end":143586,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ Note that this will likely be smaller than what the decompressor","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":143591,"byte_end":143659,"line_start":230,"line_end":230,"column_start":5,"column_end":73}},{"value":"/ actually read from the underlying stream due to buffering.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":143664,"byte_end":143726,"line_start":231,"line_end":231,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":797},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":143883,"byte_end":143892,"line_start":237,"line_end":237,"column_start":12,"column_end":21},"name":"total_out","qualname":"<ZlibDecoder<R>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has produced.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has produced.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":143804,"byte_end":143871,"line_start":236,"line_end":236,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":1169},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":145484,"byte_end":145495,"line_start":36,"line_end":36,"column_start":12,"column_end":23},"name":"ZlibEncoder","qualname":"::zlib::write::ZlibEncoder","value":"ZlibEncoder {  }","parent":null,"children":[{"krate":0,"index":1171}],"decl_id":null,"docs":" A ZLIB encoder, or compressor.","sig":null,"attributes":[{"value":"/ A ZLIB encoder, or compressor.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":144775,"byte_end":144809,"line_start":12,"line_end":12,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":144810,"byte_end":144813,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This structure implements a [`Write`] interface and takes a stream of","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":144814,"byte_end":144887,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/ uncompressed data, writing the compressed data to the wrapped writer.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":144888,"byte_end":144961,"line_start":15,"line_end":15,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":144962,"byte_end":144965,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`Write`]: https://doc.rust-lang.org/std/io/trait.Write.html","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":144966,"byte_end":145030,"line_start":17,"line_end":17,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":145031,"byte_end":145034,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":145035,"byte_end":145049,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":145050,"byte_end":145053,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":145054,"byte_end":145061,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":145062,"byte_end":145090,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ use flate2::Compression;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":145091,"byte_end":145119,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/ use flate2::write::ZlibEncoder;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":145120,"byte_end":145155,"line_start":24,"line_end":24,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":145156,"byte_end":145159,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ // Vec<u8> implements Write, assigning the compressed bytes of sample string","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":145160,"byte_end":145240,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":145241,"byte_end":145244,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # fn zlib_encoding() -> std::io::Result<()> {","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":145245,"byte_end":145294,"line_start":28,"line_end":28,"column_start":1,"column_end":50}},{"value":"/ let mut e = ZlibEncoder::new(Vec::new(), Compression::Default);","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":145295,"byte_end":145362,"line_start":29,"line_end":29,"column_start":1,"column_end":68}},{"value":"/ e.write(b\"Hello World\")?;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":145363,"byte_end":145392,"line_start":30,"line_end":30,"column_start":1,"column_end":30}},{"value":"/ let compressed = e.finish()?;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":145393,"byte_end":145426,"line_start":31,"line_end":31,"column_start":1,"column_end":34}},{"value":"/ # Ok(())","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":145427,"byte_end":145439,"line_start":32,"line_end":32,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":145440,"byte_end":145447,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":145448,"byte_end":145455,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":822},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":145823,"byte_end":145826,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"new","qualname":"<ZlibEncoder<W>>::new","value":"pub fn new(W, ::Compression) -> ZlibEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder which will write compressed data to the stream\n given at the given compression level.","sig":null,"attributes":[{"value":"/ Creates a new encoder which will write compressed data to the stream","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":145585,"byte_end":145657,"line_start":42,"line_end":42,"column_start":5,"column_end":77}},{"value":"/ given at the given compression level.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":145662,"byte_end":145703,"line_start":43,"line_end":43,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":145708,"byte_end":145711,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ When this encoder is dropped or unwrapped the final pieces of data will","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":145716,"byte_end":145791,"line_start":45,"line_end":45,"column_start":5,"column_end":80}},{"value":"/ be flushed.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":145796,"byte_end":145811,"line_start":46,"line_end":46,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":823},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":146048,"byte_end":146055,"line_start":54,"line_end":54,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<ZlibEncoder<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying writer.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":145986,"byte_end":146036,"line_start":53,"line_end":53,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":824},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":146332,"byte_end":146339,"line_start":62,"line_end":62,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<ZlibEncoder<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying writer.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":146111,"byte_end":146169,"line_start":58,"line_end":58,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":146174,"byte_end":146177,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Note that mutating the output/input state of the stream may corrupt this","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":146182,"byte_end":146258,"line_start":60,"line_end":60,"column_start":5,"column_end":81}},{"value":"/ object, so care must be taken when using this method.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":146263,"byte_end":146320,"line_start":61,"line_end":61,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":825},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":147154,"byte_end":147159,"line_start":81,"line_end":81,"column_start":12,"column_end":17},"name":"reset","qualname":"<ZlibEncoder<W>>::reset","value":"pub fn reset(&mut Self, W) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this encoder entirely, swapping out the output\n stream for another.","sig":null,"attributes":[{"value":"/ Resets the state of this encoder entirely, swapping out the output","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":146403,"byte_end":146473,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ stream for another.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":146478,"byte_end":146501,"line_start":67,"line_end":67,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":146506,"byte_end":146509,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ This function will finish encoding the current stream into the current","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":146514,"byte_end":146588,"line_start":69,"line_end":69,"column_start":5,"column_end":79}},{"value":"/ output stream before swapping out the two output streams.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":146593,"byte_end":146654,"line_start":70,"line_end":70,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":146659,"byte_end":146662,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ After the current stream has been finished, this will reset the internal","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":146667,"byte_end":146743,"line_start":72,"line_end":72,"column_start":5,"column_end":81}},{"value":"/ state of this encoder and replace the output stream with the one","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":146748,"byte_end":146816,"line_start":73,"line_end":73,"column_start":5,"column_end":73}},{"value":"/ provided, returning the previous output stream. Future data written to","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":146821,"byte_end":146895,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/ this encoder will be the compressed into the stream `w` provided.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":146900,"byte_end":146969,"line_start":75,"line_end":75,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":146974,"byte_end":146977,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":146982,"byte_end":146994,"line_start":77,"line_end":77,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":146999,"byte_end":147002,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to complete this stream, and any I/O","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":147007,"byte_end":147078,"line_start":79,"line_end":79,"column_start":5,"column_end":76}},{"value":"/ errors which occur will be returned from this function.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":147083,"byte_end":147142,"line_start":80,"line_end":80,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":826},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":147924,"byte_end":147934,"line_start":102,"line_end":102,"column_start":12,"column_end":22},"name":"try_finish","qualname":"<ZlibEncoder<W>>::try_finish","value":"pub fn try_finish(&mut Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to finish this output stream, writing out final chunks of data.","sig":null,"attributes":[{"value":"/ Attempt to finish this output stream, writing out final chunks of data.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":147309,"byte_end":147384,"line_start":87,"line_end":87,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":147389,"byte_end":147392,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ Note that this function can only be used once data has finished being","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":147397,"byte_end":147470,"line_start":89,"line_end":89,"column_start":5,"column_end":78}},{"value":"/ written to the output stream. After this function is called then further","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":147475,"byte_end":147551,"line_start":90,"line_end":90,"column_start":5,"column_end":81}},{"value":"/ calls to `write` may result in a panic.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":147556,"byte_end":147599,"line_start":91,"line_end":91,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":147604,"byte_end":147607,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":147612,"byte_end":147624,"line_start":93,"line_end":93,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":147629,"byte_end":147632,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ Attempts to write data to this stream may result in a panic after this","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":147637,"byte_end":147711,"line_start":95,"line_end":95,"column_start":5,"column_end":79}},{"value":"/ function is called.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":147716,"byte_end":147739,"line_start":96,"line_end":96,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":147744,"byte_end":147747,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":147752,"byte_end":147764,"line_start":98,"line_end":98,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":147769,"byte_end":147772,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to complete this stream, and any I/O","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":147777,"byte_end":147848,"line_start":100,"line_end":100,"column_start":5,"column_end":76}},{"value":"/ errors which occur will be returned from this function.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":147853,"byte_end":147912,"line_start":101,"line_end":101,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":827},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":148769,"byte_end":148775,"line_start":121,"line_end":121,"column_start":12,"column_end":18},"name":"finish","qualname":"<ZlibEncoder<W>>::finish","value":"pub fn finish(Self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, flushing the output stream.","sig":null,"attributes":[{"value":"/ Consumes this encoder, flushing the output stream.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":148005,"byte_end":148059,"line_start":106,"line_end":106,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":148064,"byte_end":148067,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ This will flush the underlying data stream, close off the compressed","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":148072,"byte_end":148144,"line_start":108,"line_end":108,"column_start":5,"column_end":77}},{"value":"/ stream and, if successful, return the contained writer.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":148149,"byte_end":148208,"line_start":109,"line_end":109,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":148213,"byte_end":148216,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ Note that this function may not be suitable to call in a situation where","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":148221,"byte_end":148297,"line_start":111,"line_end":111,"column_start":5,"column_end":81}},{"value":"/ the underlying stream is an asynchronous I/O stream. To finish a stream","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":148302,"byte_end":148377,"line_start":112,"line_end":112,"column_start":5,"column_end":80}},{"value":"/ the `try_finish` (or `shutdown`) method should be used instead. To","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":148382,"byte_end":148452,"line_start":113,"line_end":113,"column_start":5,"column_end":75}},{"value":"/ re-acquire ownership of a stream it is safe to call this method after","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":148457,"byte_end":148530,"line_start":114,"line_end":114,"column_start":5,"column_end":78}},{"value":"/ `try_finish` or `shutdown` has returned `Ok`.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":148535,"byte_end":148584,"line_start":115,"line_end":115,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":148589,"byte_end":148592,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":148597,"byte_end":148609,"line_start":117,"line_end":117,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":148614,"byte_end":148617,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to complete this stream, and any I/O","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":148622,"byte_end":148693,"line_start":119,"line_end":119,"column_start":5,"column_end":76}},{"value":"/ errors which occur will be returned from this function.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":148698,"byte_end":148757,"line_start":120,"line_end":120,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":828},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":149465,"byte_end":149477,"line_start":138,"line_end":138,"column_start":12,"column_end":24},"name":"flush_finish","qualname":"<ZlibEncoder<W>>::flush_finish","value":"pub fn flush_finish(Self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, flushing the output stream.","sig":null,"attributes":[{"value":"/ Consumes this encoder, flushing the output stream.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":148887,"byte_end":148941,"line_start":126,"line_end":126,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":148946,"byte_end":148949,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This will flush the underlying data stream and then return the contained","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":148954,"byte_end":149030,"line_start":128,"line_end":128,"column_start":5,"column_end":81}},{"value":"/ writer if the flush succeeded.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":149035,"byte_end":149069,"line_start":129,"line_end":129,"column_start":5,"column_end":39}},{"value":"/ The compressed stream will not closed but only flushed. This","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":149074,"byte_end":149138,"line_start":130,"line_end":130,"column_start":5,"column_end":69}},{"value":"/ means that obtained byte array can by extended by another deflated","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":149143,"byte_end":149213,"line_start":131,"line_end":131,"column_start":5,"column_end":75}},{"value":"/ stream. To close the stream add the two bytes 0x3 and 0x0.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":149218,"byte_end":149280,"line_start":132,"line_end":132,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":149285,"byte_end":149288,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":149293,"byte_end":149305,"line_start":134,"line_end":134,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":149310,"byte_end":149313,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to complete this stream, and any I/O","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":149318,"byte_end":149389,"line_start":136,"line_end":136,"column_start":5,"column_end":76}},{"value":"/ errors which occur will be returned from this function.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":149394,"byte_end":149453,"line_start":137,"line_end":137,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":829},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":149808,"byte_end":149816,"line_start":147,"line_end":147,"column_start":12,"column_end":20},"name":"total_in","qualname":"<ZlibEncoder<W>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that have been written to this compresor.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that have been written to this compresor.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":149588,"byte_end":149661,"line_start":143,"line_end":143,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":149666,"byte_end":149669,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ Note that not all bytes written to this object may be accounted for,","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":149674,"byte_end":149746,"line_start":145,"line_end":145,"column_start":5,"column_end":77}},{"value":"/ there may still be some active buffering.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":149751,"byte_end":149796,"line_start":146,"line_end":146,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":830},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":150059,"byte_end":150068,"line_start":155,"line_end":155,"column_start":12,"column_end":21},"name":"total_out","qualname":"<ZlibEncoder<W>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the compressor has produced.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the compressor has produced.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":149879,"byte_end":149944,"line_start":151,"line_end":151,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":149949,"byte_end":149952,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ Note that not all bytes may have been written yet, some may still be","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":149957,"byte_end":150029,"line_start":153,"line_end":153,"column_start":5,"column_end":77}},{"value":"/ buffered.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":150034,"byte_end":150047,"line_start":154,"line_end":154,"column_start":5,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1175},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":151945,"byte_end":151956,"line_start":224,"line_end":224,"column_start":12,"column_end":23},"name":"ZlibDecoder","qualname":"::zlib::write::ZlibDecoder","value":"ZlibDecoder {  }","parent":null,"children":[{"krate":0,"index":1177}],"decl_id":null,"docs":" A ZLIB decoder, or decompressor.","sig":null,"attributes":[{"value":"/ A ZLIB decoder, or decompressor.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":150801,"byte_end":150837,"line_start":188,"line_end":188,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":150838,"byte_end":150841,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ This structure implements a [`Write`] and will emit a stream of decompressed","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":150842,"byte_end":150922,"line_start":190,"line_end":190,"column_start":1,"column_end":81}},{"value":"/ data when fed a stream of compressed data.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":150923,"byte_end":150969,"line_start":191,"line_end":191,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":150970,"byte_end":150973,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ [`Write`]: https://doc.rust-lang.org/std/io/trait.Write.html","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":150974,"byte_end":151038,"line_start":193,"line_end":193,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":151039,"byte_end":151042,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":151043,"byte_end":151057,"line_start":195,"line_end":195,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":151058,"byte_end":151061,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":151062,"byte_end":151069,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":151070,"byte_end":151098,"line_start":198,"line_end":198,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":151099,"byte_end":151115,"line_start":199,"line_end":199,"column_start":1,"column_end":17}},{"value":"/ # use flate2::Compression;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":151116,"byte_end":151146,"line_start":200,"line_end":200,"column_start":1,"column_end":31}},{"value":"/ # use flate2::write::ZlibEncoder;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":151147,"byte_end":151184,"line_start":201,"line_end":201,"column_start":1,"column_end":38}},{"value":"/ use flate2::write::ZlibDecoder;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":151185,"byte_end":151220,"line_start":202,"line_end":202,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":151221,"byte_end":151224,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":151225,"byte_end":151242,"line_start":204,"line_end":204,"column_start":1,"column_end":18}},{"value":"/ #    let mut e = ZlibEncoder::new(Vec::new(), Compression::Default);","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":151243,"byte_end":151315,"line_start":205,"line_end":205,"column_start":1,"column_end":73}},{"value":"/ #    e.write(b\"Hello World\").unwrap();","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":151316,"byte_end":151358,"line_start":206,"line_end":206,"column_start":1,"column_end":43}},{"value":"/ #    let bytes = e.finish().unwrap();","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":151359,"byte_end":151400,"line_start":207,"line_end":207,"column_start":1,"column_end":42}},{"value":"/ #    println!(\"{}\", decode_reader(bytes).unwrap());","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":151401,"byte_end":151456,"line_start":208,"line_end":208,"column_start":1,"column_end":56}},{"value":"/ # }","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":151457,"byte_end":151464,"line_start":209,"line_end":209,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":151465,"byte_end":151470,"line_start":210,"line_end":210,"column_start":1,"column_end":6}},{"value":"/ // Uncompresses a Zlib Encoded vector of bytes and returns a string or error","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":151471,"byte_end":151551,"line_start":211,"line_end":211,"column_start":1,"column_end":81}},{"value":"/ // Here Vec<u8> implements Write","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":151552,"byte_end":151588,"line_start":212,"line_end":212,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":151589,"byte_end":151592,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ fn decode_reader(bytes: Vec<u8>) -> io::Result<String> {","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":151593,"byte_end":151653,"line_start":214,"line_end":214,"column_start":1,"column_end":61}},{"value":"/    let mut writer = Vec::new();","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":151654,"byte_end":151689,"line_start":215,"line_end":215,"column_start":1,"column_end":36}},{"value":"/    let mut z = ZlibDecoder::new(writer);","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":151690,"byte_end":151734,"line_start":216,"line_end":216,"column_start":1,"column_end":45}},{"value":"/    z.write(&bytes[..])?;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":151735,"byte_end":151763,"line_start":217,"line_end":217,"column_start":1,"column_end":29}},{"value":"/    writer = z.finish()?;","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":151764,"byte_end":151792,"line_start":218,"line_end":218,"column_start":1,"column_end":29}},{"value":"/    let return_string = String::from_utf8(writer).expect(\"String parsing error\");","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":151793,"byte_end":151877,"line_start":219,"line_end":219,"column_start":1,"column_end":85}},{"value":"/    Ok(return_string)","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":151878,"byte_end":151902,"line_start":220,"line_end":220,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":151903,"byte_end":151908,"line_start":221,"line_end":221,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":151909,"byte_end":151916,"line_start":222,"line_end":222,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":152243,"byte_end":152246,"line_start":234,"line_end":234,"column_start":12,"column_end":15},"name":"new","qualname":"<ZlibDecoder<W>>::new","value":"pub fn new(W) -> ZlibDecoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder which will write uncompressed data to the stream.","sig":null,"attributes":[{"value":"/ Creates a new decoder which will write uncompressed data to the stream.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":152048,"byte_end":152123,"line_start":230,"line_end":230,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":152128,"byte_end":152131,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ When this decoder is dropped or unwrapped the final pieces of data will","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":152136,"byte_end":152211,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/ be flushed.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":152216,"byte_end":152231,"line_start":233,"line_end":233,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":841},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":152441,"byte_end":152448,"line_start":241,"line_end":241,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<ZlibDecoder<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying writer.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":152379,"byte_end":152429,"line_start":240,"line_end":240,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":842},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":152725,"byte_end":152732,"line_start":249,"line_end":249,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<ZlibDecoder<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying writer.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":152504,"byte_end":152562,"line_start":245,"line_end":245,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":152567,"byte_end":152570,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ Note that mutating the output/input state of the stream may corrupt this","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":152575,"byte_end":152651,"line_start":247,"line_end":247,"column_start":5,"column_end":81}},{"value":"/ object, so care must be taken when using this method.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":152656,"byte_end":152713,"line_start":248,"line_end":248,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":843},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":153346,"byte_end":153351,"line_start":265,"line_end":265,"column_start":12,"column_end":17},"name":"reset","qualname":"<ZlibDecoder<W>>::reset","value":"pub fn reset(&mut Self, W) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this decoder entirely, swapping out the output\n stream for another.","sig":null,"attributes":[{"value":"/ Resets the state of this decoder entirely, swapping out the output","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":152796,"byte_end":152866,"line_start":253,"line_end":253,"column_start":5,"column_end":75}},{"value":"/ stream for another.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":152871,"byte_end":152894,"line_start":254,"line_end":254,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":152899,"byte_end":152902,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ This will reset the internal state of this decoder and replace the","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":152907,"byte_end":152977,"line_start":256,"line_end":256,"column_start":5,"column_end":75}},{"value":"/ output stream with the one provided, returning the previous output","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":152982,"byte_end":153052,"line_start":257,"line_end":257,"column_start":5,"column_end":75}},{"value":"/ stream. Future data written to this decoder will be decompressed into","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":153057,"byte_end":153130,"line_start":258,"line_end":258,"column_start":5,"column_end":78}},{"value":"/ the output stream `w`.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":153135,"byte_end":153161,"line_start":259,"line_end":259,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":153166,"byte_end":153169,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":153174,"byte_end":153186,"line_start":261,"line_end":261,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":153191,"byte_end":153194,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to complete this stream, and any I/O","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":153199,"byte_end":153270,"line_start":263,"line_end":263,"column_start":5,"column_end":76}},{"value":"/ errors which occur will be returned from this function.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":153275,"byte_end":153334,"line_start":264,"line_end":264,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":154132,"byte_end":154142,"line_start":286,"line_end":286,"column_start":12,"column_end":22},"name":"try_finish","qualname":"<ZlibDecoder<W>>::try_finish","value":"pub fn try_finish(&mut Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to finish this output stream, writing out final chunks of data.","sig":null,"attributes":[{"value":"/ Attempt to finish this output stream, writing out final chunks of data.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":153517,"byte_end":153592,"line_start":271,"line_end":271,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":153597,"byte_end":153600,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ Note that this function can only be used once data has finished being","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":153605,"byte_end":153678,"line_start":273,"line_end":273,"column_start":5,"column_end":78}},{"value":"/ written to the output stream. After this function is called then further","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":153683,"byte_end":153759,"line_start":274,"line_end":274,"column_start":5,"column_end":81}},{"value":"/ calls to `write` may result in a panic.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":153764,"byte_end":153807,"line_start":275,"line_end":275,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":153812,"byte_end":153815,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":153820,"byte_end":153832,"line_start":277,"line_end":277,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":153837,"byte_end":153840,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ Attempts to write data to this stream may result in a panic after this","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":153845,"byte_end":153919,"line_start":279,"line_end":279,"column_start":5,"column_end":79}},{"value":"/ function is called.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":153924,"byte_end":153947,"line_start":280,"line_end":280,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":153952,"byte_end":153955,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":153960,"byte_end":153972,"line_start":282,"line_end":282,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":153977,"byte_end":153980,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to complete this stream, and any I/O","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":153985,"byte_end":154056,"line_start":284,"line_end":284,"column_start":5,"column_end":76}},{"value":"/ errors which occur will be returned from this function.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":154061,"byte_end":154120,"line_start":285,"line_end":285,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":845},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":154956,"byte_end":154962,"line_start":305,"line_end":305,"column_start":12,"column_end":18},"name":"finish","qualname":"<ZlibDecoder<W>>::finish","value":"pub fn finish(Self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, flushing the output stream.","sig":null,"attributes":[{"value":"/ Consumes this encoder, flushing the output stream.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":154213,"byte_end":154267,"line_start":290,"line_end":290,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":154272,"byte_end":154275,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ This will flush the underlying data stream and then return the contained","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":154280,"byte_end":154356,"line_start":292,"line_end":292,"column_start":5,"column_end":81}},{"value":"/ writer if the flush succeeded.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":154361,"byte_end":154395,"line_start":293,"line_end":293,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":154400,"byte_end":154403,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ Note that this function may not be suitable to call in a situation where","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":154408,"byte_end":154484,"line_start":295,"line_end":295,"column_start":5,"column_end":81}},{"value":"/ the underlying stream is an asynchronous I/O stream. To finish a stream","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":154489,"byte_end":154564,"line_start":296,"line_end":296,"column_start":5,"column_end":80}},{"value":"/ the `try_finish` (or `shutdown`) method should be used instead. To","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":154569,"byte_end":154639,"line_start":297,"line_end":297,"column_start":5,"column_end":75}},{"value":"/ re-acquire ownership of a stream it is safe to call this method after","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":154644,"byte_end":154717,"line_start":298,"line_end":298,"column_start":5,"column_end":78}},{"value":"/ `try_finish` or `shutdown` has returned `Ok`.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":154722,"byte_end":154771,"line_start":299,"line_end":299,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":154776,"byte_end":154779,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":154784,"byte_end":154796,"line_start":301,"line_end":301,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":154801,"byte_end":154804,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to complete this stream, and any I/O","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":154809,"byte_end":154880,"line_start":303,"line_end":303,"column_start":5,"column_end":76}},{"value":"/ errors which occur will be returned from this function.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":154885,"byte_end":154944,"line_start":304,"line_end":304,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":846},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":155329,"byte_end":155337,"line_start":315,"line_end":315,"column_start":12,"column_end":20},"name":"total_in","qualname":"<ZlibDecoder<W>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has consumed for\n decompression.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has consumed for","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":155074,"byte_end":155144,"line_start":310,"line_end":310,"column_start":5,"column_end":75}},{"value":"/ decompression.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":155149,"byte_end":155167,"line_start":311,"line_end":311,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":155172,"byte_end":155175,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ Note that this will likely be smaller than the number of bytes","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":155180,"byte_end":155246,"line_start":313,"line_end":313,"column_start":5,"column_end":71}},{"value":"/ successfully written to this stream due to internal buffering.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":155251,"byte_end":155317,"line_start":314,"line_end":314,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":847},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":155507,"byte_end":155516,"line_start":321,"line_end":321,"column_start":12,"column_end":21},"name":"total_out","qualname":"<ZlibDecoder<W>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has written to its\n output stream.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has written to its","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":155400,"byte_end":155472,"line_start":319,"line_end":319,"column_start":5,"column_end":77}},{"value":"/ output stream.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":155477,"byte_end":155495,"line_start":320,"line_end":320,"column_start":5,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":855},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":4254,"byte_end":4258,"line_start":137,"line_end":137,"column_start":9,"column_end":13},"name":"read","qualname":"::read","value":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","parent":null,"children":[{"krate":0,"index":856},{"krate":0,"index":859},{"krate":0,"index":862},{"krate":0,"index":865},{"krate":0,"index":868},{"krate":0,"index":871},{"krate":0,"index":874}],"decl_id":null,"docs":" Types which operate over [`Read`] streams, both encoders and decoders for\n various formats.","sig":null,"attributes":[{"value":"/ Types which operate over [`Read`] streams, both encoders and decoders for","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":4080,"byte_end":4157,"line_start":133,"line_end":133,"column_start":1,"column_end":78}},{"value":"/ various formats.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":4158,"byte_end":4178,"line_start":134,"line_end":134,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":4179,"byte_end":4182,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ [`Read`]: https://doc.rust-lang.org/std/io/trait.Read.html","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":4183,"byte_end":4245,"line_start":136,"line_end":136,"column_start":1,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":877},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":4705,"byte_end":4710,"line_start":151,"line_end":151,"column_start":9,"column_end":14},"name":"write","qualname":"::write","value":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","parent":null,"children":[{"krate":0,"index":878},{"krate":0,"index":881},{"krate":0,"index":884},{"krate":0,"index":887},{"krate":0,"index":890}],"decl_id":null,"docs":" Types which operate over [`Write`] streams, both encoders and decoders for\n various formats.","sig":null,"attributes":[{"value":"/ Types which operate over [`Write`] streams, both encoders and decoders for","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":4528,"byte_end":4606,"line_start":147,"line_end":147,"column_start":1,"column_end":79}},{"value":"/ various formats.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":4607,"byte_end":4627,"line_start":148,"line_end":148,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":4628,"byte_end":4631,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ [`Write`]: https://doc.rust-lang.org/std/io/trait.Write.html","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":4632,"byte_end":4696,"line_start":150,"line_end":150,"column_start":1,"column_end":65}}]},{"kind":"Mod","id":{"krate":0,"index":893},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":5097,"byte_end":5104,"line_start":163,"line_end":163,"column_start":9,"column_end":16},"name":"bufread","qualname":"::bufread","value":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","parent":null,"children":[{"krate":0,"index":894},{"krate":0,"index":897},{"krate":0,"index":900},{"krate":0,"index":903},{"krate":0,"index":906},{"krate":0,"index":909},{"krate":0,"index":912}],"decl_id":null,"docs":" Types which operate over [`BufRead`] streams, both encoders and decoders for\n various formats.","sig":null,"attributes":[{"value":"/ Types which operate over [`BufRead`] streams, both encoders and decoders for","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":4914,"byte_end":4994,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"/ various formats.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":4995,"byte_end":5015,"line_start":160,"line_end":160,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":5016,"byte_end":5019,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ [`BufRead`]: https://doc.rust-lang.org/std/io/trait.BufRead.html","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":5020,"byte_end":5088,"line_start":162,"line_end":162,"column_start":1,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1182},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":6403,"byte_end":6407,"line_start":196,"line_end":196,"column_start":5,"column_end":9},"name":"None","qualname":"::Compression::None","value":"Compression::None","parent":{"krate":0,"index":1181},"children":[],"decl_id":null,"docs":" No compression is to be performed, this may actually inflate data\n slightly when encoding.\n","sig":null,"attributes":[{"value":"/ No compression is to be performed, this may actually inflate data","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":6297,"byte_end":6366,"line_start":194,"line_end":194,"column_start":5,"column_end":74}},{"value":"/ slightly when encoding.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":6371,"byte_end":6398,"line_start":195,"line_end":195,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1185},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":6466,"byte_end":6470,"line_start":198,"line_end":198,"column_start":5,"column_end":9},"name":"Fast","qualname":"::Compression::Fast","value":"Compression::Fast","parent":{"krate":0,"index":1181},"children":[],"decl_id":null,"docs":" Optimize for the best speed of encoding.\n","sig":null,"attributes":[{"value":"/ Optimize for the best speed of encoding.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":6417,"byte_end":6461,"line_start":197,"line_end":197,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1188},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":6533,"byte_end":6537,"line_start":200,"line_end":200,"column_start":5,"column_end":9},"name":"Best","qualname":"::Compression::Best","value":"Compression::Best","parent":{"krate":0,"index":1181},"children":[],"decl_id":null,"docs":" Optimize for the size of data being encoded.\n","sig":null,"attributes":[{"value":"/ Optimize for the size of data being encoded.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":6480,"byte_end":6528,"line_start":199,"line_end":199,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1191},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":6621,"byte_end":6628,"line_start":202,"line_end":202,"column_start":5,"column_end":12},"name":"Default","qualname":"::Compression::Default","value":"Compression::Default","parent":{"krate":0,"index":1181},"children":[],"decl_id":null,"docs":" Choose the default compression, a balance between speed and size.\n","sig":null,"attributes":[{"value":"/ Choose the default compression, a balance between speed and size.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":6547,"byte_end":6616,"line_start":201,"line_end":201,"column_start":5,"column_end":74}}]},{"kind":"Enum","id":{"krate":0,"index":1181},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":6279,"byte_end":6290,"line_start":193,"line_end":193,"column_start":10,"column_end":21},"name":"Compression","qualname":"::Compression","value":"pub enum Compression { None = , Fast = , Best = , Default = , }","parent":null,"children":[{"krate":0,"index":1182},{"krate":0,"index":1185},{"krate":0,"index":1188},{"krate":0,"index":1191}],"decl_id":null,"docs":" When compressing data, the compression level can be specified by a value in\n this enum.\n","sig":null,"attributes":[{"value":"/ When compressing data, the compression level can be specified by a value in","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":6130,"byte_end":6209,"line_start":190,"line_end":190,"column_start":1,"column_end":80}},{"value":"/ this enum.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":6210,"byte_end":6224,"line_start":191,"line_end":191,"column_start":1,"column_end":15}}]},{"kind":"Trait","id":{"krate":0,"index":920},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":6853,"byte_end":6865,"line_start":213,"line_end":213,"column_start":11,"column_end":23},"name":"FlateReadExt","qualname":"::FlateReadExt","value":"FlateReadExt: Read + Sized","parent":null,"children":[{"krate":0,"index":921},{"krate":0,"index":922},{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":926}],"decl_id":null,"docs":" A helper trait to create encoder/decoders with method syntax.\n","sig":null,"attributes":[{"value":"/ A helper trait to create encoder/decoders with method syntax.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":6777,"byte_end":6842,"line_start":212,"line_end":212,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":921},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":6992,"byte_end":7001,"line_start":216,"line_end":216,"column_start":8,"column_end":17},"name":"gz_encode","qualname":"::FlateReadExt::gz_encode","value":"pub fn gz_encode(Self, Compression) -> read::GzEncoder<Self>","parent":{"krate":0,"index":920},"children":[],"decl_id":null,"docs":" Consume this reader to create a compression stream at the specified\n compression level.\n","sig":null,"attributes":[{"value":"/ Consume this reader to create a compression stream at the specified","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":6886,"byte_end":6957,"line_start":214,"line_end":214,"column_start":5,"column_end":76}},{"value":"/ compression level.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":6962,"byte_end":6984,"line_start":215,"line_end":215,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":922},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":7184,"byte_end":7193,"line_start":221,"line_end":221,"column_start":8,"column_end":17},"name":"gz_decode","qualname":"::FlateReadExt::gz_decode","value":"pub fn gz_decode(Self) -> io::Result<read::GzDecoder<Self>>","parent":{"krate":0,"index":920},"children":[],"decl_id":null,"docs":" Consume this reader to create a decompression stream of this stream.\n","sig":null,"attributes":[{"value":"/ Consume this reader to create a decompression stream of this stream.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":7104,"byte_end":7176,"line_start":220,"line_end":220,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":923},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":7391,"byte_end":7402,"line_start":227,"line_end":227,"column_start":8,"column_end":19},"name":"zlib_encode","qualname":"::FlateReadExt::zlib_encode","value":"pub fn zlib_encode(Self, Compression) -> read::ZlibEncoder<Self>","parent":{"krate":0,"index":920},"children":[],"decl_id":null,"docs":" Consume this reader to create a compression stream at the specified\n compression level.\n","sig":null,"attributes":[{"value":"/ Consume this reader to create a compression stream at the specified","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":7285,"byte_end":7356,"line_start":225,"line_end":225,"column_start":5,"column_end":76}},{"value":"/ compression level.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":7361,"byte_end":7383,"line_start":226,"line_end":226,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":924},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":7589,"byte_end":7600,"line_start":232,"line_end":232,"column_start":8,"column_end":19},"name":"zlib_decode","qualname":"::FlateReadExt::zlib_decode","value":"pub fn zlib_decode(Self) -> read::ZlibDecoder<Self>","parent":{"krate":0,"index":920},"children":[],"decl_id":null,"docs":" Consume this reader to create a decompression stream of this stream.\n","sig":null,"attributes":[{"value":"/ Consume this reader to create a decompression stream of this stream.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":7509,"byte_end":7581,"line_start":231,"line_end":231,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":925},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":7790,"byte_end":7804,"line_start":238,"line_end":238,"column_start":8,"column_end":22},"name":"deflate_encode","qualname":"::FlateReadExt::deflate_encode","value":"pub fn deflate_encode(Self, Compression) -> read::DeflateEncoder<Self>","parent":{"krate":0,"index":920},"children":[],"decl_id":null,"docs":" Consume this reader to create a compression stream at the specified\n compression level.\n","sig":null,"attributes":[{"value":"/ Consume this reader to create a compression stream at the specified","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":7684,"byte_end":7755,"line_start":236,"line_end":236,"column_start":5,"column_end":76}},{"value":"/ compression level.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":7760,"byte_end":7782,"line_start":237,"line_end":237,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":926},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":7997,"byte_end":8011,"line_start":243,"line_end":243,"column_start":8,"column_end":22},"name":"deflate_decode","qualname":"::FlateReadExt::deflate_decode","value":"pub fn deflate_decode(Self) -> read::DeflateDecoder<Self>","parent":{"krate":0,"index":920},"children":[],"decl_id":null,"docs":" Consume this reader to create a decompression stream of this stream.\n","sig":null,"attributes":[{"value":"/ Consume this reader to create a decompression stream of this stream.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":7917,"byte_end":7989,"line_start":242,"line_end":242,"column_start":5,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":927},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":8175,"byte_end":8188,"line_start":249,"line_end":249,"column_start":11,"column_end":24},"name":"FlateWriteExt","qualname":"::FlateWriteExt","value":"FlateWriteExt: Write + Sized","parent":null,"children":[{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":931},{"krate":0,"index":932}],"decl_id":null,"docs":" A helper trait to create encoder/decoders with method syntax.\n","sig":null,"attributes":[{"value":"/ A helper trait to create encoder/decoders with method syntax.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":8099,"byte_end":8164,"line_start":248,"line_end":248,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":8316,"byte_end":8325,"line_start":252,"line_end":252,"column_start":8,"column_end":17},"name":"gz_encode","qualname":"::FlateWriteExt::gz_encode","value":"pub fn gz_encode(Self, Compression) -> write::GzEncoder<Self>","parent":{"krate":0,"index":927},"children":[],"decl_id":null,"docs":" Consume this writer to create a compression stream at the specified\n compression level.\n","sig":null,"attributes":[{"value":"/ Consume this writer to create a compression stream at the specified","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":8210,"byte_end":8281,"line_start":250,"line_end":250,"column_start":5,"column_end":76}},{"value":"/ compression level.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":8286,"byte_end":8308,"line_start":251,"line_end":251,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":929},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":8777,"byte_end":8788,"line_start":264,"line_end":264,"column_start":8,"column_end":19},"name":"zlib_encode","qualname":"::FlateWriteExt::zlib_encode","value":"pub fn zlib_encode(Self, Compression) -> write::ZlibEncoder<Self>","parent":{"krate":0,"index":927},"children":[],"decl_id":null,"docs":" Consume this writer to create a compression stream at the specified\n compression level.\n","sig":null,"attributes":[{"value":"/ Consume this writer to create a compression stream at the specified","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":8671,"byte_end":8742,"line_start":262,"line_end":262,"column_start":5,"column_end":76}},{"value":"/ compression level.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":8747,"byte_end":8769,"line_start":263,"line_end":263,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":930},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":8977,"byte_end":8988,"line_start":269,"line_end":269,"column_start":8,"column_end":19},"name":"zlib_decode","qualname":"::FlateWriteExt::zlib_decode","value":"pub fn zlib_decode(Self) -> write::ZlibDecoder<Self>","parent":{"krate":0,"index":927},"children":[],"decl_id":null,"docs":" Consume this writer to create a decompression stream of this stream.\n","sig":null,"attributes":[{"value":"/ Consume this writer to create a decompression stream of this stream.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":8897,"byte_end":8969,"line_start":268,"line_end":268,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":931},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":9180,"byte_end":9194,"line_start":275,"line_end":275,"column_start":8,"column_end":22},"name":"deflate_encode","qualname":"::FlateWriteExt::deflate_encode","value":"pub fn deflate_encode(Self, Compression) -> write::DeflateEncoder<Self>","parent":{"krate":0,"index":927},"children":[],"decl_id":null,"docs":" Consume this writer to create a compression stream at the specified\n compression level.\n","sig":null,"attributes":[{"value":"/ Consume this writer to create a compression stream at the specified","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":9074,"byte_end":9145,"line_start":273,"line_end":273,"column_start":5,"column_end":76}},{"value":"/ compression level.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":9150,"byte_end":9172,"line_start":274,"line_end":274,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":932},"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":9389,"byte_end":9403,"line_start":280,"line_end":280,"column_start":8,"column_end":22},"name":"deflate_decode","qualname":"::FlateWriteExt::deflate_decode","value":"pub fn deflate_decode(Self) -> write::DeflateDecoder<Self>","parent":{"krate":0,"index":927},"children":[],"decl_id":null,"docs":" Consume this writer to create a decompression stream of this stream.\n","sig":null,"attributes":[{"value":"/ Consume this writer to create a decompression stream of this stream.","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":9309,"byte_end":9381,"line_start":279,"line_end":279,"column_start":5,"column_end":77}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/bufreader.rs","byte_start":10763,"byte_end":10772,"line_start":23,"line_end":23,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":56}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/bufreader.rs","byte_start":11105,"byte_end":11114,"line_start":32,"line_end":32,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":59},{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/bufreader.rs","byte_start":11441,"byte_end":11450,"line_start":47,"line_end":47,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/bufreader.rs","byte_start":11817,"byte_end":11826,"line_start":67,"line_end":67,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/bufreader.rs","byte_start":12377,"byte_end":12386,"line_start":84,"line_end":84,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":13329,"byte_end":13332,"line_start":27,"line_end":27,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":14515,"byte_end":14524,"line_start":69,"line_end":69,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":14699,"byte_end":14708,"line_start":79,"line_end":79,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":15345,"byte_end":15354,"line_start":106,"line_end":106,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":15563,"byte_end":15572,"line_start":114,"line_end":114,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":23235,"byte_end":23249,"line_start":51,"line_end":51,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":23653,"byte_end":23667,"line_start":66,"line_end":66,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":25232,"byte_end":25246,"line_start":114,"line_end":114,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":25503,"byte_end":25517,"line_start":123,"line_end":123,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":146},{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":27147,"byte_end":27161,"line_start":181,"line_end":181,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":27418,"byte_end":27432,"line_start":192,"line_end":192,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":29137,"byte_end":29151,"line_start":245,"line_end":245,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":29410,"byte_end":29424,"line_start":254,"line_end":254,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":167},{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":31009,"byte_end":31023,"line_start":45,"line_end":45,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":31348,"byte_end":31362,"line_start":55,"line_end":55,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":33364,"byte_end":33378,"line_start":110,"line_end":110,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":33597,"byte_end":33611,"line_start":119,"line_end":119,"column_start":33,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":196},{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":35142,"byte_end":35156,"line_start":174,"line_end":174,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":200},{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":35773,"byte_end":35787,"line_start":192,"line_end":192,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":37682,"byte_end":37696,"line_start":244,"line_end":244,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":37917,"byte_end":37931,"line_start":253,"line_end":253,"column_start":33,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":215},{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":39267,"byte_end":39281,"line_start":39,"line_end":39,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":43931,"byte_end":43945,"line_start":159,"line_end":159,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":44378,"byte_end":44392,"line_start":177,"line_end":177,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":45859,"byte_end":45873,"line_start":225,"line_end":225,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":49577,"byte_end":49591,"line_start":325,"line_end":325,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":262},{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":50024,"byte_end":50038,"line_start":343,"line_end":343,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/ffi.rs","byte_start":53976,"byte_end":53989,"line_start":114,"line_end":114,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/ffi.rs","byte_start":54155,"byte_end":54168,"line_start":120,"line_end":120,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/ffi.rs","byte_start":54337,"byte_end":54350,"line_start":128,"line_end":128,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":296},{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/ffi.rs","byte_start":54493,"byte_end":54506,"line_start":136,"line_end":136,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":72132,"byte_end":72141,"line_start":162,"line_end":162,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":383},{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":73165,"byte_end":73174,"line_start":193,"line_end":193,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":73774,"byte_end":73783,"line_start":213,"line_end":213,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":74473,"byte_end":74482,"line_start":237,"line_end":237,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":395},{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":75836,"byte_end":75845,"line_start":289,"line_end":289,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":399},{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":77334,"byte_end":77343,"line_start":339,"line_end":339,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":78067,"byte_end":78076,"line_start":364,"line_end":364,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":78359,"byte_end":78368,"line_start":376,"line_end":376,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":413},{"krate":0,"index":414}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":80233,"byte_end":80247,"line_start":436,"line_end":436,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":417},{"krate":0,"index":418}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":82309,"byte_end":82323,"line_start":501,"line_end":501,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":83055,"byte_end":83069,"line_start":526,"line_end":526,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":83429,"byte_end":83443,"line_start":539,"line_end":539,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":431},{"krate":0,"index":432}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":84793,"byte_end":84802,"line_start":46,"line_end":46,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":85254,"byte_end":85263,"line_start":59,"line_end":59,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":85860,"byte_end":85869,"line_start":79,"line_end":79,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":86009,"byte_end":86018,"line_start":85,"line_end":85,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":469},{"krate":0,"index":470}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":87306,"byte_end":87315,"line_start":134,"line_end":134,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":473}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":87698,"byte_end":87707,"line_start":147,"line_end":147,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":88435,"byte_end":88444,"line_start":172,"line_end":172,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":483}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":88584,"byte_end":88593,"line_start":178,"line_end":178,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":486},{"krate":0,"index":487}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":90393,"byte_end":90407,"line_start":233,"line_end":233,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":490}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":90887,"byte_end":90901,"line_start":247,"line_end":247,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":91637,"byte_end":91651,"line_start":272,"line_end":272,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":91791,"byte_end":91805,"line_start":278,"line_end":278,"column_start":33,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":503},{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":93249,"byte_end":93258,"line_start":53,"line_end":53,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":96479,"byte_end":96488,"line_start":143,"line_end":143,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":538},{"krate":0,"index":539}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":97137,"byte_end":97146,"line_start":167,"line_end":167,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":542}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":97369,"byte_end":97378,"line_start":176,"line_end":176,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":57887,"byte_end":57893,"line_start":31,"line_end":31,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":547},{"krate":0,"index":549},{"krate":0,"index":551},{"krate":0,"index":553},{"krate":0,"index":554}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":60595,"byte_end":60602,"line_start":112,"line_end":112,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":560},{"krate":0,"index":562},{"krate":0,"index":564},{"krate":0,"index":566},{"krate":0,"index":568},{"krate":0,"index":570}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zio.rs","byte_start":98051,"byte_end":98059,"line_start":23,"line_end":23,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zio.rs","byte_start":98525,"byte_end":98535,"line_start":36,"line_end":36,"column_start":14,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zio.rs","byte_start":100343,"byte_end":100349,"line_start":85,"line_end":85,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":622},{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zio.rs","byte_start":101909,"byte_end":101915,"line_start":145,"line_end":145,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":629},{"krate":0,"index":630}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zio.rs","byte_start":103931,"byte_end":103937,"line_start":195,"line_end":195,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":634}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":105705,"byte_end":105711,"line_start":54,"line_end":54,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":105753,"byte_end":105759,"line_start":55,"line_end":55,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":109915,"byte_end":109923,"line_start":154,"line_end":154,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":114671,"byte_end":114681,"line_start":272,"line_end":272,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":120791,"byte_end":120800,"line_start":426,"line_end":426,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":120894,"byte_end":120899,"line_start":430,"line_end":430,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":688}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":121028,"byte_end":121037,"line_start":436,"line_end":436,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":690}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":121161,"byte_end":121172,"line_start":442,"line_end":442,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":692}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":121299,"byte_end":121312,"line_start":447,"line_end":447,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":694}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":121449,"byte_end":121455,"line_start":453,"line_end":453,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":697}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":130047,"byte_end":130058,"line_start":47,"line_end":47,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":719}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":130451,"byte_end":130462,"line_start":62,"line_end":62,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":729}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":132027,"byte_end":132038,"line_start":110,"line_end":110,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":732}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":132292,"byte_end":132303,"line_start":119,"line_end":119,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":735},{"krate":0,"index":736}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":133802,"byte_end":133813,"line_start":175,"line_end":175,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":739}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":134163,"byte_end":134174,"line_start":190,"line_end":190,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":746},{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":749}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":135632,"byte_end":135643,"line_start":235,"line_end":235,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":752}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":135899,"byte_end":135910,"line_start":244,"line_end":244,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":755},{"krate":0,"index":756}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":137369,"byte_end":137380,"line_start":42,"line_end":42,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":770}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":137696,"byte_end":137707,"line_start":52,"line_end":52,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":775},{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":778}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":139709,"byte_end":139720,"line_start":107,"line_end":107,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":781}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":139936,"byte_end":139947,"line_start":116,"line_end":116,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":784},{"krate":0,"index":785}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":141438,"byte_end":141449,"line_start":172,"line_end":172,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":788},{"krate":0,"index":789}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":142066,"byte_end":142077,"line_start":190,"line_end":190,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":792},{"krate":0,"index":793},{"krate":0,"index":794},{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":797}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":143972,"byte_end":143983,"line_start":242,"line_end":242,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":800}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":144201,"byte_end":144212,"line_start":251,"line_end":251,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":803},{"krate":0,"index":804}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":145564,"byte_end":145575,"line_start":41,"line_end":41,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":827},{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":830}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":150155,"byte_end":150166,"line_start":160,"line_end":160,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":833},{"krate":0,"index":834}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":150588,"byte_end":150599,"line_start":178,"line_end":178,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":837}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":152027,"byte_end":152038,"line_start":229,"line_end":229,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":847}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":155603,"byte_end":155614,"line_start":326,"line_end":326,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":850},{"krate":0,"index":851}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":156044,"byte_end":156055,"line_start":344,"line_end":344,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":854}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":6691,"byte_end":6702,"line_start":206,"line_end":206,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":919}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":9524,"byte_end":9525,"line_start":285,"line_end":285,"column_start":32,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":9562,"byte_end":9563,"line_start":286,"line_end":286,"column_start":34,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/bufreader.rs","byte_start":10763,"byte_end":10772,"line_start":23,"line_end":23,"column_start":31,"column_end":40},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":48},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/bufreader.rs","byte_start":11105,"byte_end":11114,"line_start":32,"line_end":32,"column_start":15,"column_end":24},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":48},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/bufreader.rs","byte_start":11441,"byte_end":11450,"line_start":47,"line_end":47,"column_start":9,"column_end":18},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":48},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/bufreader.rs","byte_start":11817,"byte_end":11826,"line_start":67,"line_end":67,"column_start":24,"column_end":33},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":48},"to":{"krate":1,"index":4271}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/bufreader.rs","byte_start":12377,"byte_end":12386,"line_start":84,"line_end":84,"column_start":27,"column_end":36},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":48},"to":{"krate":1,"index":4357}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":13329,"byte_end":13332,"line_start":27,"line_end":27,"column_start":6,"column_end":9},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":937},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":14515,"byte_end":14524,"line_start":69,"line_end":69,"column_start":15,"column_end":24},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":942},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":14699,"byte_end":14708,"line_start":79,"line_end":79,"column_start":9,"column_end":18},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":942},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":15345,"byte_end":15354,"line_start":106,"line_end":106,"column_start":24,"column_end":33},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":942},"to":{"krate":1,"index":4271}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/crc.rs","byte_start":15563,"byte_end":15572,"line_start":114,"line_end":114,"column_start":30,"column_end":39},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":942},"to":{"krate":1,"index":4357}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":23235,"byte_end":23249,"line_start":51,"line_end":51,"column_start":18,"column_end":32},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":949},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":23653,"byte_end":23667,"line_start":66,"line_end":66,"column_start":9,"column_end":23},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":949},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":25232,"byte_end":25246,"line_start":114,"line_end":114,"column_start":27,"column_end":41},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":949},"to":{"krate":1,"index":4271}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":25503,"byte_end":25517,"line_start":123,"line_end":123,"column_start":36,"column_end":50},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":949},"to":{"krate":1,"index":4332}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":27147,"byte_end":27161,"line_start":181,"line_end":181,"column_start":18,"column_end":32},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":956},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":27418,"byte_end":27432,"line_start":192,"line_end":192,"column_start":9,"column_end":23},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":956},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":29137,"byte_end":29151,"line_start":245,"line_end":245,"column_start":27,"column_end":41},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":956},"to":{"krate":1,"index":4271}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/bufread.rs","byte_start":29410,"byte_end":29424,"line_start":254,"line_end":254,"column_start":36,"column_end":50},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":956},"to":{"krate":1,"index":4332}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":31009,"byte_end":31023,"line_start":45,"line_end":45,"column_start":15,"column_end":29},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":963},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":31348,"byte_end":31362,"line_start":55,"line_end":55,"column_start":9,"column_end":23},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":963},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":33364,"byte_end":33378,"line_start":110,"line_end":110,"column_start":24,"column_end":38},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":963},"to":{"krate":1,"index":4271}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":33597,"byte_end":33611,"line_start":119,"line_end":119,"column_start":33,"column_end":47},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":963},"to":{"krate":1,"index":4332}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":35142,"byte_end":35156,"line_start":174,"line_end":174,"column_start":15,"column_end":29},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":969},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":35773,"byte_end":35787,"line_start":192,"line_end":192,"column_start":9,"column_end":23},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":969},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":37682,"byte_end":37696,"line_start":244,"line_end":244,"column_start":24,"column_end":38},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":969},"to":{"krate":1,"index":4271}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/read.rs","byte_start":37917,"byte_end":37931,"line_start":253,"line_end":253,"column_start":33,"column_end":47},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":969},"to":{"krate":1,"index":4332}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":39267,"byte_end":39281,"line_start":39,"line_end":39,"column_start":16,"column_end":30},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":975},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":43931,"byte_end":43945,"line_start":159,"line_end":159,"column_start":26,"column_end":40},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":975},"to":{"krate":1,"index":4332}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":44378,"byte_end":44392,"line_start":177,"line_end":177,"column_start":32,"column_end":46},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":975},"to":{"krate":1,"index":4271}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":45859,"byte_end":45873,"line_start":225,"line_end":225,"column_start":16,"column_end":30},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":981},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":49577,"byte_end":49591,"line_start":325,"line_end":325,"column_start":26,"column_end":40},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":981},"to":{"krate":1,"index":4332}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/deflate/write.rs","byte_start":50024,"byte_end":50038,"line_start":343,"line_end":343,"column_start":32,"column_end":46},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":981},"to":{"krate":1,"index":4271}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/ffi.rs","byte_start":53976,"byte_end":53989,"line_start":114,"line_end":114,"column_start":32,"column_end":45},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":289},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/ffi.rs","byte_start":54155,"byte_end":54168,"line_start":120,"line_end":120,"column_start":22,"column_end":35},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":289},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/ffi.rs","byte_start":54337,"byte_end":54350,"line_start":128,"line_end":128,"column_start":20,"column_end":33},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":289},"to":{"krate":2,"index":3064}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/ffi.rs","byte_start":54493,"byte_end":54506,"line_start":136,"line_end":136,"column_start":23,"column_end":36},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":289},"to":{"krate":2,"index":3077}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":72132,"byte_end":72141,"line_start":162,"line_end":162,"column_start":18,"column_end":27},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":987},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":73165,"byte_end":73174,"line_start":193,"line_end":193,"column_start":9,"column_end":18},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":987},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":73774,"byte_end":73783,"line_start":213,"line_end":213,"column_start":27,"column_end":36},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":987},"to":{"krate":1,"index":4271}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":74473,"byte_end":74482,"line_start":237,"line_end":237,"column_start":36,"column_end":45},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":987},"to":{"krate":1,"index":4332}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":75836,"byte_end":75845,"line_start":289,"line_end":289,"column_start":18,"column_end":27},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":996},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":77334,"byte_end":77343,"line_start":339,"line_end":339,"column_start":9,"column_end":18},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":996},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":78067,"byte_end":78076,"line_start":364,"line_end":364,"column_start":27,"column_end":36},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":996},"to":{"krate":1,"index":4271}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":78359,"byte_end":78368,"line_start":376,"line_end":376,"column_start":36,"column_end":45},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":996},"to":{"krate":1,"index":4332}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":80233,"byte_end":80247,"line_start":436,"line_end":436,"column_start":18,"column_end":32},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1004},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":82309,"byte_end":82323,"line_start":501,"line_end":501,"column_start":9,"column_end":23},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1004},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":83055,"byte_end":83069,"line_start":526,"line_end":526,"column_start":27,"column_end":41},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1004},"to":{"krate":1,"index":4271}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/bufread.rs","byte_start":83429,"byte_end":83443,"line_start":539,"line_end":539,"column_start":36,"column_end":50},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1004},"to":{"krate":1,"index":4332}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":84793,"byte_end":84802,"line_start":46,"line_end":46,"column_start":15,"column_end":24},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1012},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":85254,"byte_end":85263,"line_start":59,"line_end":59,"column_start":9,"column_end":18},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1012},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":85860,"byte_end":85869,"line_start":79,"line_end":79,"column_start":24,"column_end":33},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1012},"to":{"krate":1,"index":4271}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":86009,"byte_end":86018,"line_start":85,"line_end":85,"column_start":33,"column_end":42},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1012},"to":{"krate":1,"index":4332}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":87306,"byte_end":87315,"line_start":134,"line_end":134,"column_start":15,"column_end":24},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1018},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":87698,"byte_end":87707,"line_start":147,"line_end":147,"column_start":9,"column_end":18},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1018},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":88435,"byte_end":88444,"line_start":172,"line_end":172,"column_start":24,"column_end":33},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1018},"to":{"krate":1,"index":4271}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":88584,"byte_end":88593,"line_start":178,"line_end":178,"column_start":33,"column_end":42},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1018},"to":{"krate":1,"index":4332}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":90393,"byte_end":90407,"line_start":233,"line_end":233,"column_start":15,"column_end":29},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1024},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":90887,"byte_end":90901,"line_start":247,"line_end":247,"column_start":9,"column_end":23},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1024},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":91637,"byte_end":91651,"line_start":272,"line_end":272,"column_start":24,"column_end":38},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1024},"to":{"krate":1,"index":4271}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/read.rs","byte_start":91791,"byte_end":91805,"line_start":278,"line_end":278,"column_start":33,"column_end":47},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1024},"to":{"krate":1,"index":4332}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":93249,"byte_end":93258,"line_start":53,"line_end":53,"column_start":16,"column_end":25},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1030},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":96479,"byte_end":96488,"line_start":143,"line_end":143,"column_start":26,"column_end":35},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1030},"to":{"krate":1,"index":4332}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":97137,"byte_end":97146,"line_start":167,"line_end":167,"column_start":32,"column_end":41},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1030},"to":{"krate":1,"index":4271}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/write.rs","byte_start":97369,"byte_end":97378,"line_start":176,"line_end":176,"column_start":25,"column_end":34},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1030},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":57887,"byte_end":57893,"line_start":31,"line_end":31,"column_start":6,"column_end":12},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1039},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/gz/mod.rs","byte_start":60595,"byte_end":60602,"line_start":112,"line_end":112,"column_start":6,"column_end":13},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1050},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zio.rs","byte_start":98051,"byte_end":98059,"line_start":23,"line_end":23,"column_start":14,"column_end":22},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1067},"to":{"krate":0,"index":597}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zio.rs","byte_start":98525,"byte_end":98535,"line_start":36,"line_end":36,"column_start":14,"column_end":24},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1071},"to":{"krate":0,"index":597}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zio.rs","byte_start":100343,"byte_end":100349,"line_start":85,"line_end":85,"column_start":24,"column_end":30},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1057},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zio.rs","byte_start":101909,"byte_end":101915,"line_start":145,"line_end":145,"column_start":34,"column_end":40},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1057},"to":{"krate":1,"index":4332}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zio.rs","byte_start":103931,"byte_end":103937,"line_start":195,"line_end":195,"column_start":33,"column_end":39},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1057},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":105705,"byte_end":105711,"line_start":54,"line_end":54,"column_start":36,"column_end":42},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1075},"to":{"krate":2,"index":2853}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":105753,"byte_end":105759,"line_start":55,"line_end":55,"column_start":36,"column_end":42},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1075},"to":{"krate":2,"index":2865}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":109915,"byte_end":109923,"line_start":154,"line_end":154,"column_start":6,"column_end":14},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1067},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":114671,"byte_end":114681,"line_start":272,"line_end":272,"column_start":6,"column_end":16},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1071},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":120791,"byte_end":120800,"line_start":426,"line_end":426,"column_start":16,"column_end":25},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1120},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":120894,"byte_end":120899,"line_start":430,"line_end":430,"column_start":30,"column_end":35},"kind":{"Impl":{"id":76}},"from":{"krate":1,"index":3753},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":121028,"byte_end":121037,"line_start":436,"line_end":436,"column_start":23,"column_end":32},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1120},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":121161,"byte_end":121172,"line_start":442,"line_end":442,"column_start":20,"column_end":31},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1084},"to":{"krate":0,"index":668}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":121299,"byte_end":121312,"line_start":447,"line_end":447,"column_start":20,"column_end":33},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1087},"to":{"krate":0,"index":668}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/mem.rs","byte_start":121449,"byte_end":121455,"line_start":453,"line_end":453,"column_start":29,"column_end":35},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1075},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":130047,"byte_end":130058,"line_start":47,"line_end":47,"column_start":18,"column_end":29},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1143},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":130451,"byte_end":130462,"line_start":62,"line_end":62,"column_start":9,"column_end":20},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1143},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":132027,"byte_end":132038,"line_start":110,"line_end":110,"column_start":27,"column_end":38},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1143},"to":{"krate":1,"index":4271}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":132292,"byte_end":132303,"line_start":119,"line_end":119,"column_start":36,"column_end":47},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1143},"to":{"krate":1,"index":4332}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":133802,"byte_end":133813,"line_start":175,"line_end":175,"column_start":18,"column_end":29},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1150},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":134163,"byte_end":134174,"line_start":190,"line_end":190,"column_start":9,"column_end":20},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1150},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":135632,"byte_end":135643,"line_start":235,"line_end":235,"column_start":27,"column_end":38},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1150},"to":{"krate":1,"index":4271}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/bufread.rs","byte_start":135899,"byte_end":135910,"line_start":244,"line_end":244,"column_start":36,"column_end":47},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1150},"to":{"krate":1,"index":4332}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":137369,"byte_end":137380,"line_start":42,"line_end":42,"column_start":15,"column_end":26},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1157},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":137696,"byte_end":137707,"line_start":52,"line_end":52,"column_start":9,"column_end":20},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1157},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":139709,"byte_end":139720,"line_start":107,"line_end":107,"column_start":24,"column_end":35},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1157},"to":{"krate":1,"index":4271}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":139936,"byte_end":139947,"line_start":116,"line_end":116,"column_start":33,"column_end":44},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1157},"to":{"krate":1,"index":4332}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":141438,"byte_end":141449,"line_start":172,"line_end":172,"column_start":15,"column_end":26},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1163},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":142066,"byte_end":142077,"line_start":190,"line_end":190,"column_start":9,"column_end":20},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1163},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":143972,"byte_end":143983,"line_start":242,"line_end":242,"column_start":24,"column_end":35},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1163},"to":{"krate":1,"index":4271}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/read.rs","byte_start":144201,"byte_end":144212,"line_start":251,"line_end":251,"column_start":33,"column_end":44},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1163},"to":{"krate":1,"index":4332}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":145564,"byte_end":145575,"line_start":41,"line_end":41,"column_start":16,"column_end":27},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1169},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":150155,"byte_end":150166,"line_start":160,"line_end":160,"column_start":26,"column_end":37},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1169},"to":{"krate":1,"index":4332}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":150588,"byte_end":150599,"line_start":178,"line_end":178,"column_start":32,"column_end":43},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1169},"to":{"krate":1,"index":4271}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":152027,"byte_end":152038,"line_start":229,"line_end":229,"column_start":16,"column_end":27},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1175},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":155603,"byte_end":155614,"line_start":326,"line_end":326,"column_start":26,"column_end":37},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1175},"to":{"krate":1,"index":4332}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/zlib/write.rs","byte_start":156044,"byte_end":156055,"line_start":344,"line_end":344,"column_start":32,"column_end":43},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1175},"to":{"krate":1,"index":4271}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":6691,"byte_end":6702,"line_start":206,"line_end":206,"column_start":18,"column_end":29},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1181},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":6867,"byte_end":6871,"line_start":213,"line_end":213,"column_start":25,"column_end":29},"kind":"SuperTrait","from":{"krate":1,"index":4271},"to":{"krate":0,"index":920}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":6874,"byte_end":6879,"line_start":213,"line_end":213,"column_start":32,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":2858},"to":{"krate":0,"index":920}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":8190,"byte_end":8195,"line_start":249,"line_end":249,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":1,"index":4332},"to":{"krate":0,"index":927}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":8198,"byte_end":8203,"line_start":249,"line_end":249,"column_start":34,"column_end":39},"kind":"SuperTrait","from":{"krate":2,"index":2858},"to":{"krate":0,"index":927}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":9524,"byte_end":9525,"line_start":285,"line_end":285,"column_start":32,"column_end":33},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":934},"to":{"krate":0,"index":920}},{"span":{"file_name":"/Users/perturbedeagle/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.20/src/lib.rs","byte_start":9562,"byte_end":9563,"line_start":286,"line_end":286,"column_start":34,"column_end":35},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":936},"to":{"krate":0,"index":927}}]}